
int _init(ctx):
	CF = INT_LESS(RSP, 0x8);
	OF = INT_SBORROW(RSP, 0x8);
	RSP = INT_SUB(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	RAX = COPY(A_00300fe8:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_bb10:8 = INT_AND(RAX, RAX);
	SF = INT_SLESS(u_bb10:8, 0x0);
	ZF = INT_EQUAL(u_bb10:8, 0x0);
	CBRANCH(A_00100522:8, ZF);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x100522);
	CALLIND(RAX);
	CF = INT_CARRY(RSP, 0x8);
	OF = INT_SCARRY(RSP, 0x8);
	RSP = INT_ADD(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	u_2480:8 = COPY(A_00300fc0:8);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	BRANCHIND(A_00300fc8:8);
	BRANCHIND(A_00300fd0:8);
	u_88a0:8 = COPY(0x0);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_88a0:8);
	BRANCH(A_00100530:8);
	BRANCHIND(A_00300ff8:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	EBP = INT_XOR(EBP, EBP);
	RBP = INT_ZEXT(EBP);
	SF = INT_SLESS(EBP, 0x0);
	ZF = INT_EQUAL(EBP, 0x0);
	R9 = COPY(RDX);
	RSI = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RDX = COPY(RSP);
	CF = COPY(0x0);
	OF = COPY(0x0);
	RSP = INT_AND(RSP, 0xfffffffffffffff0);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	u_2480:8 = COPY(RAX);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	u_2480:8 = COPY(RSP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R8 = COPY(0x100760);
	RCX = COPY(0x1006f0);
	RDI = COPY(0x10066a);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x10058a);
	CALLIND(A_00300fe0:8);
	BRANCH(A_0010058a:8);
	RDI = COPY(0x301010);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RAX = COPY(0x301010);
	CF = INT_LESS(RAX, RDI);
	OF = INT_SBORROW(RAX, RDI);
	u_5960:8 = INT_SUB(RAX, RDI);
	SF = INT_SLESS(u_5960:8, 0x0);
	ZF = INT_EQUAL(u_5960:8, 0x0);
	RBP = COPY(RSP);
	CBRANCH(A_001005c0:8, ZF);
	RAX = COPY(A_00300fd8:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_bb10:8 = INT_AND(RAX, RAX);
	SF = INT_SLESS(u_bb10:8, 0x0);
	ZF = INT_EQUAL(u_bb10:8, 0x0);
	CBRANCH(A_001005c0:8, ZF);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	BRANCHIND(RAX);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	RDI = COPY(0x301010);
	RSI = COPY(0x301010);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	CF = INT_LESS(RSI, RDI);
	OF = INT_SBORROW(RSI, RDI);
	RSI = INT_SUB(RSI, RDI);
	SF = INT_SLESS(RSI, 0x0);
	ZF = INT_EQUAL(RSI, 0x0);
	RBP = COPY(RSP);
	u_ac20:4 = INT_AND(0x3, 0x3f);
	u_ac30:8 = COPY(RSI);
	RSI = INT_SRIGHT(RSI, u_ac20:4);
	u_32f0:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_3300:4 = INT_SUB(u_ac20:4, 0x1);
	u_3310:8 = INT_SRIGHT(u_ac30:8, u_3300:4);
	u_3320:8 = INT_AND(u_3310:8, 0x1);
	u_3340:1 = INT_NOTEQUAL(u_3320:8, 0x0);
	u_3350:1 = BOOL_NEGATE(u_32f0:1);
	u_3360:1 = INT_AND(u_3350:1, CF);
	u_3370:1 = INT_AND(u_32f0:1, u_3340:1);
	CF = INT_OR(u_3360:1, u_3370:1);
	u_33a0:1 = INT_EQUAL(u_ac20:4, 0x1);
	u_33b0:1 = BOOL_NEGATE(u_33a0:1);
	OF = INT_AND(u_33b0:1, OF);
	u_2e00:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_2e20:1 = INT_SLESS(RSI, 0x0);
	u_2e30:1 = BOOL_NEGATE(u_2e00:1);
	u_2e40:1 = INT_AND(u_2e30:1, SF);
	u_2e50:1 = INT_AND(u_2e00:1, u_2e20:1);
	SF = INT_OR(u_2e40:1, u_2e50:1);
	u_2e80:1 = INT_EQUAL(RSI, 0x0);
	u_2e90:1 = BOOL_NEGATE(u_2e00:1);
	u_2ea0:1 = INT_AND(u_2e90:1, ZF);
	u_2eb0:1 = INT_AND(u_2e00:1, u_2e80:1);
	ZF = INT_OR(u_2ea0:1, u_2eb0:1);
	RAX = COPY(RSI);
	u_b7c0:4 = INT_AND(0x3f, 0x3f);
	u_b7d0:8 = COPY(RAX);
	RAX = INT_RIGHT(RAX, u_b7c0:4);
	u_33e0:1 = INT_NOTEQUAL(u_b7c0:4, 0x0);
	u_33f0:4 = INT_SUB(u_b7c0:4, 0x1);
	u_3400:8 = INT_RIGHT(u_b7d0:8, u_33f0:4);
	u_3410:8 = INT_AND(u_3400:8, 0x1);
	u_3430:1 = INT_NOTEQUAL(u_3410:8, 0x0);
	u_3440:1 = BOOL_NEGATE(u_33e0:1);
	u_3450:1 = INT_AND(u_3440:1, CF);
	u_3460:1 = INT_AND(u_33e0:1, u_3430:1);
	CF = INT_OR(u_3450:1, u_3460:1);
	u_3490:1 = INT_EQUAL(u_b7c0:4, 0x1);
	u_34b0:1 = INT_SLESS(u_b7d0:8, 0x0);
	u_34c0:1 = BOOL_NEGATE(u_3490:1);
	u_34d0:1 = INT_AND(u_34c0:1, OF);
	u_34e0:1 = INT_AND(u_3490:1, u_34b0:1);
	OF = INT_OR(u_34d0:1, u_34e0:1);
	u_2e00:1 = INT_NOTEQUAL(u_b7c0:4, 0x0);
	u_2e20:1 = INT_SLESS(RAX, 0x0);
	u_2e30:1 = BOOL_NEGATE(u_2e00:1);
	u_2e40:1 = INT_AND(u_2e30:1, SF);
	u_2e50:1 = INT_AND(u_2e00:1, u_2e20:1);
	SF = INT_OR(u_2e40:1, u_2e50:1);
	u_2e80:1 = INT_EQUAL(RAX, 0x0);
	u_2e90:1 = BOOL_NEGATE(u_2e00:1);
	u_2ea0:1 = INT_AND(u_2e90:1, ZF);
	u_2eb0:1 = INT_AND(u_2e00:1, u_2e80:1);
	ZF = INT_OR(u_2ea0:1, u_2eb0:1);
	CF = INT_CARRY(RSI, RAX);
	OF = INT_SCARRY(RSI, RAX);
	RSI = INT_ADD(RSI, RAX);
	SF = INT_SLESS(RSI, 0x0);
	ZF = INT_EQUAL(RSI, 0x0);
	u_1f90:1 = COPY(0x1);
	u_aba0:8 = INT_AND(RSI, 0x1);
	CF = INT_NOTEQUAL(u_aba0:8, 0x0);
	OF = COPY(0x0);
	RSI = INT_SRIGHT(RSI, 0x1);
	SF = INT_SLESS(RSI, 0x0);
	ZF = INT_EQUAL(RSI, 0x0);
	CBRANCH(A_00100610:8, ZF);
	RAX = COPY(A_00300ff0:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_bb10:8 = INT_AND(RAX, RAX);
	SF = INT_SLESS(u_bb10:8, 0x0);
	ZF = INT_EQUAL(u_bb10:8, 0x0);
	CBRANCH(A_00100610:8, ZF);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	BRANCHIND(RAX);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	CF = INT_LESS(A_00301010:1, 0x0);
	OF = INT_SBORROW(A_00301010:1, 0x0);
	u_5820:1 = INT_SUB(A_00301010:1, 0x0);
	SF = INT_SLESS(u_5820:1, 0x0);
	ZF = INT_EQUAL(u_5820:1, 0x0);
	u_2080:1 = BOOL_NEGATE(ZF);
	CBRANCH(A_00100658:8, u_2080:1);
	CF = INT_LESS(A_00300ff8:8, 0x0);
	OF = INT_SBORROW(A_00300ff8:8, 0x0);
	u_58e0:8 = INT_SUB(A_00300ff8:8, 0x0);
	SF = INT_SLESS(u_58e0:8, 0x0);
	ZF = INT_EQUAL(u_58e0:8, 0x0);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(RSP);
	CBRANCH(A_00100643:8, ZF);
	RDI = COPY(A_00301008:8);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x100643);
	CALL(A_00100550:8);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x100648);
	CALL(A_00100590:8);
	A_00301010:1 = COPY(0x1);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(RSP);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	BRANCH(A_001005d0:8);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);CALL
	RBP = COPY(RSP);
	CF = INT_LESS(RSP, 0x40);
	OF = INT_SBORROW(RSP, 0x40);
	RSP = INT_SUB(RSP, 0x40);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	u_960:8 = INT_ADD(FS_OFFSET, 0x28);
	u_1f70:8 = LOAD(0x131, u_960:8);
	RAX = COPY(u_1f70:8);
	u_620:8 = INT_ADD(RBP, 0xfffffffffffffff8);
	u_1f70:8 = COPY(RAX);
	STORE(0x131, u_620:8, u_1f70:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	EAX = INT_XOR(EAX, EAX);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(EAX, 0x0);
	ZF = INT_EQUAL(EAX, 0x0);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd0);
	u_1f60:4 = COPY(0x0);
	STORE(0x131, u_620:8, u_1f60:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f60:4 = COPY(0x1);
	STORE(0x131, u_620:8, u_1f60:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd8);
	u_1f60:4 = COPY(0x5);
	STORE(0x131, u_620:8, u_1f60:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f60:4 = COPY(0x1);
	STORE(0x131, u_620:8, u_1f60:4);
	BRANCH(A_001006c6:8);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd0);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EDX = COPY(u_1f50:4);
	RDX = INT_ZEXT(EDX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	CF = INT_CARRY(EAX, EDX);
	OF = INT_SCARRY(EAX, EDX);
	EAX = INT_ADD(EAX, EDX);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(EAX, 0x0);
	ZF = INT_EQUAL(EAX, 0x0);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffdc);
	u_1f50:4 = COPY(EAX);
	STORE(0x131, u_620:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd0);
	u_1f50:4 = COPY(EAX);
	STORE(0x131, u_620:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffdc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f50:4 = COPY(EAX);
	STORE(0x131, u_620:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	RAX = INT_SEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffdc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EDX = COPY(u_1f50:4);
	RDX = INT_ZEXT(EDX);
	u_6f0:8 = INT_ADD(0xffffffffffffffe0, RBP);
	u_700:8 = INT_MULT(RAX, 0x4);
	u_720:8 = INT_ADD(u_6f0:8, u_700:8);
	u_1f50:4 = COPY(EDX);
	STORE(0x131, u_720:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f60:4 = LOAD(0x131, u_620:8);
	CF = INT_CARRY(u_1f60:4, 0x1);
	u_1f60:4 = LOAD(0x131, u_620:8);
	OF = INT_SCARRY(u_1f60:4, 0x1);
	u_1f60:4 = LOAD(0x131, u_620:8);
	u_1f60:4 = INT_ADD(u_1f60:4, 0x1);
	STORE(0x131, u_620:8, u_1f60:4);
	u_1f60:4 = LOAD(0x131, u_620:8);
	SF = INT_SLESS(u_1f60:4, 0x0);
	u_1f60:4 = LOAD(0x131, u_620:8);
	ZF = INT_EQUAL(u_1f60:4, 0x0);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd8);
	u_1f50:4 = LOAD(0x131, u_620:8);
	CF = INT_LESS(EAX, u_1f50:4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	OF = INT_SBORROW(EAX, u_1f50:4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	u_59c0:4 = INT_SUB(EAX, u_1f50:4);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(u_59c0:4, 0x0);
	ZF = INT_EQUAL(u_59c0:4, 0x0);
	u_2160:1 = INT_NOTEQUAL(OF, SF);
	u_2180:1 = BOOL_OR(ZF, u_2160:1);
	CBRANCH(A_0010069f:8, u_2180:1);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd8);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	CF = INT_LESS(EAX, 0x1);
	OF = INT_SBORROW(EAX, 0x1);
	EAX = INT_SUB(EAX, 0x1);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(EAX, 0x0);
	ZF = INT_EQUAL(EAX, 0x0);
	RAX = INT_SEXT(EAX);
	u_6f0:8 = INT_ADD(0xffffffffffffffe0, RBP);
	u_700:8 = INT_MULT(RAX, 0x4);
	u_720:8 = INT_ADD(u_6f0:8, u_700:8);
	u_1f50:4 = LOAD(0x131, u_720:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xfffffffffffffff8);
	u_1f70:8 = LOAD(0x131, u_620:8);
	RCX = COPY(u_1f70:8);
	u_960:8 = INT_ADD(FS_OFFSET, 0x28);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_1f70:8 = LOAD(0x131, u_960:8);
	RCX = INT_XOR(RCX, u_1f70:8);
	SF = INT_SLESS(RCX, 0x0);
	ZF = INT_EQUAL(RCX, 0x0);
	CBRANCH(A_001006ee:8, ZF);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x1006ee);
	CALL(A_00100540:8);
	RSP = COPY(RBP);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	u_2480:8 = COPY(R15);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	u_2480:8 = COPY(R14);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R15 = COPY(RDX);
	u_2480:8 = COPY(R13);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	u_2480:8 = COPY(R12);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R12 = COPY(0x300db8);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(0x300dc0);
	u_2480:8 = COPY(RBX);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R13D = COPY(EDI);
	R13 = INT_ZEXT(R13D);
	R14 = COPY(RSI);
	CF = INT_LESS(RBP, R12);
	OF = INT_SBORROW(RBP, R12);
	RBP = INT_SUB(RBP, R12);
	SF = INT_SLESS(RBP, 0x0);
	ZF = INT_EQUAL(RBP, 0x0);
	CF = INT_LESS(RSP, 0x8);
	OF = INT_SBORROW(RSP, 0x8);
	RSP = INT_SUB(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	u_ac20:4 = INT_AND(0x3, 0x3f);
	u_ac30:8 = COPY(RBP);
	RBP = INT_SRIGHT(RBP, u_ac20:4);
	u_32f0:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_3300:4 = INT_SUB(u_ac20:4, 0x1);
	u_3310:8 = INT_SRIGHT(u_ac30:8, u_3300:4);
	u_3320:8 = INT_AND(u_3310:8, 0x1);
	u_3340:1 = INT_NOTEQUAL(u_3320:8, 0x0);
	u_3350:1 = BOOL_NEGATE(u_32f0:1);
	u_3360:1 = INT_AND(u_3350:1, CF);
	u_3370:1 = INT_AND(u_32f0:1, u_3340:1);
	CF = INT_OR(u_3360:1, u_3370:1);
	u_33a0:1 = INT_EQUAL(u_ac20:4, 0x1);
	u_33b0:1 = BOOL_NEGATE(u_33a0:1);
	OF = INT_AND(u_33b0:1, OF);
	u_2e00:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_2e20:1 = INT_SLESS(RBP, 0x0);
	u_2e30:1 = BOOL_NEGATE(u_2e00:1);
	u_2e40:1 = INT_AND(u_2e30:1, SF);
	u_2e50:1 = INT_AND(u_2e00:1, u_2e20:1);
	SF = INT_OR(u_2e40:1, u_2e50:1);
	u_2e80:1 = INT_EQUAL(RBP, 0x0);
	u_2e90:1 = BOOL_NEGATE(u_2e00:1);
	u_2ea0:1 = INT_AND(u_2e90:1, ZF);
	u_2eb0:1 = INT_AND(u_2e00:1, u_2e80:1);
	ZF = INT_OR(u_2ea0:1, u_2eb0:1);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x100721);
	CALL(A_00100510:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_bb10:8 = INT_AND(RBP, RBP);
	SF = INT_SLESS(u_bb10:8, 0x0);
	ZF = INT_EQUAL(u_bb10:8, 0x0);
	CBRANCH(A_00100746:8, ZF);
	CF = COPY(0x0);
	OF = COPY(0x0);
	EBX = INT_XOR(EBX, EBX);
	RBX = INT_ZEXT(EBX);
	SF = INT_SLESS(EBX, 0x0);
	ZF = INT_EQUAL(EBX, 0x0);
	u_7e0:8 = INT_MULT(RAX, 0x1);
	u_800:8 = INT_ADD(RAX, u_7e0:8);
	RDX = COPY(R15);
	RSI = COPY(R14);
	EDI = COPY(R13D);
	RDI = INT_ZEXT(EDI);
	u_660:8 = INT_MULT(RBX, 0x8);
	u_680:8 = INT_ADD(R12, u_660:8);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x10073d);
	u_1f70:8 = LOAD(0x131, u_680:8);
	CALLIND(u_1f70:8);
	CF = INT_CARRY(RBX, 0x1);
	OF = INT_SCARRY(RBX, 0x1);
	RBX = INT_ADD(RBX, 0x1);
	SF = INT_SLESS(RBX, 0x0);
	ZF = INT_EQUAL(RBX, 0x0);
	CF = INT_LESS(RBP, RBX);
	OF = INT_SBORROW(RBP, RBX);
	u_5960:8 = INT_SUB(RBP, RBX);
	SF = INT_SLESS(u_5960:8, 0x0);
	ZF = INT_EQUAL(u_5960:8, 0x0);
	u_2080:1 = BOOL_NEGATE(ZF);
	CBRANCH(A_00100730:8, u_2080:1);
	CF = INT_CARRY(RSP, 0x8);
	OF = INT_SCARRY(RSP, 0x8);
	RSP = INT_ADD(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	RBX = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R12 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R13 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R14 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R15 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	CF = INT_LESS(RSP, 0x8);
	OF = INT_SBORROW(RSP, 0x8);
	RSP = INT_SUB(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	CF = INT_CARRY(RSP, 0x8);
	OF = INT_SCARRY(RSP, 0x8);
	RSP = INT_ADD(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);

undefined FUN_00100530():
	u_2480:8 = COPY(A_00300fc0:8);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	BRANCHIND(A_00300fc8:8);
	BRANCHIND(A_00300fd0:8);
	u_88a0:8 = COPY(0x0);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_88a0:8);
	BRANCH(A_00100530:8);
	BRANCHIND(A_00300ff8:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	EBP = INT_XOR(EBP, EBP);
	RBP = INT_ZEXT(EBP);
	SF = INT_SLESS(EBP, 0x0);
	ZF = INT_EQUAL(EBP, 0x0);
	R9 = COPY(RDX);
	RSI = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RDX = COPY(RSP);
	CF = COPY(0x0);
	OF = COPY(0x0);
	RSP = INT_AND(RSP, 0xfffffffffffffff0);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	u_2480:8 = COPY(RAX);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	u_2480:8 = COPY(RSP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R8 = COPY(0x100760);
	RCX = COPY(0x1006f0);
	RDI = COPY(0x10066a);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x10058a);
	CALLIND(A_00300fe0:8);
	BRANCH(A_0010058a:8);
	RDI = COPY(0x301010);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RAX = COPY(0x301010);
	CF = INT_LESS(RAX, RDI);
	OF = INT_SBORROW(RAX, RDI);
	u_5960:8 = INT_SUB(RAX, RDI);
	SF = INT_SLESS(u_5960:8, 0x0);
	ZF = INT_EQUAL(u_5960:8, 0x0);
	RBP = COPY(RSP);
	CBRANCH(A_001005c0:8, ZF);
	RAX = COPY(A_00300fd8:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_bb10:8 = INT_AND(RAX, RAX);
	SF = INT_SLESS(u_bb10:8, 0x0);
	ZF = INT_EQUAL(u_bb10:8, 0x0);
	CBRANCH(A_001005c0:8, ZF);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	BRANCHIND(RAX);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	RDI = COPY(0x301010);
	RSI = COPY(0x301010);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	CF = INT_LESS(RSI, RDI);
	OF = INT_SBORROW(RSI, RDI);
	RSI = INT_SUB(RSI, RDI);
	SF = INT_SLESS(RSI, 0x0);
	ZF = INT_EQUAL(RSI, 0x0);
	RBP = COPY(RSP);
	u_ac20:4 = INT_AND(0x3, 0x3f);
	u_ac30:8 = COPY(RSI);
	RSI = INT_SRIGHT(RSI, u_ac20:4);
	u_32f0:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_3300:4 = INT_SUB(u_ac20:4, 0x1);
	u_3310:8 = INT_SRIGHT(u_ac30:8, u_3300:4);
	u_3320:8 = INT_AND(u_3310:8, 0x1);
	u_3340:1 = INT_NOTEQUAL(u_3320:8, 0x0);
	u_3350:1 = BOOL_NEGATE(u_32f0:1);
	u_3360:1 = INT_AND(u_3350:1, CF);
	u_3370:1 = INT_AND(u_32f0:1, u_3340:1);
	CF = INT_OR(u_3360:1, u_3370:1);
	u_33a0:1 = INT_EQUAL(u_ac20:4, 0x1);
	u_33b0:1 = BOOL_NEGATE(u_33a0:1);
	OF = INT_AND(u_33b0:1, OF);
	u_2e00:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_2e20:1 = INT_SLESS(RSI, 0x0);
	u_2e30:1 = BOOL_NEGATE(u_2e00:1);
	u_2e40:1 = INT_AND(u_2e30:1, SF);
	u_2e50:1 = INT_AND(u_2e00:1, u_2e20:1);
	SF = INT_OR(u_2e40:1, u_2e50:1);
	u_2e80:1 = INT_EQUAL(RSI, 0x0);
	u_2e90:1 = BOOL_NEGATE(u_2e00:1);
	u_2ea0:1 = INT_AND(u_2e90:1, ZF);
	u_2eb0:1 = INT_AND(u_2e00:1, u_2e80:1);
	ZF = INT_OR(u_2ea0:1, u_2eb0:1);
	RAX = COPY(RSI);
	u_b7c0:4 = INT_AND(0x3f, 0x3f);
	u_b7d0:8 = COPY(RAX);
	RAX = INT_RIGHT(RAX, u_b7c0:4);
	u_33e0:1 = INT_NOTEQUAL(u_b7c0:4, 0x0);
	u_33f0:4 = INT_SUB(u_b7c0:4, 0x1);
	u_3400:8 = INT_RIGHT(u_b7d0:8, u_33f0:4);
	u_3410:8 = INT_AND(u_3400:8, 0x1);
	u_3430:1 = INT_NOTEQUAL(u_3410:8, 0x0);
	u_3440:1 = BOOL_NEGATE(u_33e0:1);
	u_3450:1 = INT_AND(u_3440:1, CF);
	u_3460:1 = INT_AND(u_33e0:1, u_3430:1);
	CF = INT_OR(u_3450:1, u_3460:1);
	u_3490:1 = INT_EQUAL(u_b7c0:4, 0x1);
	u_34b0:1 = INT_SLESS(u_b7d0:8, 0x0);
	u_34c0:1 = BOOL_NEGATE(u_3490:1);
	u_34d0:1 = INT_AND(u_34c0:1, OF);
	u_34e0:1 = INT_AND(u_3490:1, u_34b0:1);
	OF = INT_OR(u_34d0:1, u_34e0:1);
	u_2e00:1 = INT_NOTEQUAL(u_b7c0:4, 0x0);
	u_2e20:1 = INT_SLESS(RAX, 0x0);
	u_2e30:1 = BOOL_NEGATE(u_2e00:1);
	u_2e40:1 = INT_AND(u_2e30:1, SF);
	u_2e50:1 = INT_AND(u_2e00:1, u_2e20:1);
	SF = INT_OR(u_2e40:1, u_2e50:1);
	u_2e80:1 = INT_EQUAL(RAX, 0x0);
	u_2e90:1 = BOOL_NEGATE(u_2e00:1);
	u_2ea0:1 = INT_AND(u_2e90:1, ZF);
	u_2eb0:1 = INT_AND(u_2e00:1, u_2e80:1);
	ZF = INT_OR(u_2ea0:1, u_2eb0:1);
	CF = INT_CARRY(RSI, RAX);
	OF = INT_SCARRY(RSI, RAX);
	RSI = INT_ADD(RSI, RAX);
	SF = INT_SLESS(RSI, 0x0);
	ZF = INT_EQUAL(RSI, 0x0);
	u_1f90:1 = COPY(0x1);
	u_aba0:8 = INT_AND(RSI, 0x1);
	CF = INT_NOTEQUAL(u_aba0:8, 0x0);
	OF = COPY(0x0);
	RSI = INT_SRIGHT(RSI, 0x1);
	SF = INT_SLESS(RSI, 0x0);
	ZF = INT_EQUAL(RSI, 0x0);
	CBRANCH(A_00100610:8, ZF);
	RAX = COPY(A_00300ff0:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_bb10:8 = INT_AND(RAX, RAX);
	SF = INT_SLESS(u_bb10:8, 0x0);
	ZF = INT_EQUAL(u_bb10:8, 0x0);
	CBRANCH(A_00100610:8, ZF);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	BRANCHIND(RAX);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	CF = INT_LESS(A_00301010:1, 0x0);
	OF = INT_SBORROW(A_00301010:1, 0x0);
	u_5820:1 = INT_SUB(A_00301010:1, 0x0);
	SF = INT_SLESS(u_5820:1, 0x0);
	ZF = INT_EQUAL(u_5820:1, 0x0);
	u_2080:1 = BOOL_NEGATE(ZF);
	CBRANCH(A_00100658:8, u_2080:1);
	CF = INT_LESS(A_00300ff8:8, 0x0);
	OF = INT_SBORROW(A_00300ff8:8, 0x0);
	u_58e0:8 = INT_SUB(A_00300ff8:8, 0x0);
	SF = INT_SLESS(u_58e0:8, 0x0);
	ZF = INT_EQUAL(u_58e0:8, 0x0);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(RSP);
	CBRANCH(A_00100643:8, ZF);
	RDI = COPY(A_00301008:8);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x100643);
	CALL(A_00100550:8);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x100648);
	CALL(A_00100590:8);
	A_00301010:1 = COPY(0x1);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(RSP);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	BRANCH(A_001005d0:8);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(RSP);
	CF = INT_LESS(RSP, 0x40);
	OF = INT_SBORROW(RSP, 0x40);
	RSP = INT_SUB(RSP, 0x40);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	u_960:8 = INT_ADD(FS_OFFSET, 0x28);
	u_1f70:8 = LOAD(0x131, u_960:8);
	RAX = COPY(u_1f70:8);
	u_620:8 = INT_ADD(RBP, 0xfffffffffffffff8);
	u_1f70:8 = COPY(RAX);
	STORE(0x131, u_620:8, u_1f70:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	EAX = INT_XOR(EAX, EAX);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(EAX, 0x0);
	ZF = INT_EQUAL(EAX, 0x0);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd0);
	u_1f60:4 = COPY(0x0);
	STORE(0x131, u_620:8, u_1f60:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f60:4 = COPY(0x1);
	STORE(0x131, u_620:8, u_1f60:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd8);
	u_1f60:4 = COPY(0x5);
	STORE(0x131, u_620:8, u_1f60:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f60:4 = COPY(0x1);
	STORE(0x131, u_620:8, u_1f60:4);
	BRANCH(A_001006c6:8);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd0);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EDX = COPY(u_1f50:4);
	RDX = INT_ZEXT(EDX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	CF = INT_CARRY(EAX, EDX);
	OF = INT_SCARRY(EAX, EDX);
	EAX = INT_ADD(EAX, EDX);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(EAX, 0x0);
	ZF = INT_EQUAL(EAX, 0x0);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffdc);
	u_1f50:4 = COPY(EAX);
	STORE(0x131, u_620:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd0);
	u_1f50:4 = COPY(EAX);
	STORE(0x131, u_620:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffdc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f50:4 = COPY(EAX);
	STORE(0x131, u_620:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	RAX = INT_SEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffdc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EDX = COPY(u_1f50:4);
	RDX = INT_ZEXT(EDX);
	u_6f0:8 = INT_ADD(0xffffffffffffffe0, RBP);
	u_700:8 = INT_MULT(RAX, 0x4);
	u_720:8 = INT_ADD(u_6f0:8, u_700:8);
	u_1f50:4 = COPY(EDX);
	STORE(0x131, u_720:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f60:4 = LOAD(0x131, u_620:8);
	CF = INT_CARRY(u_1f60:4, 0x1);
	u_1f60:4 = LOAD(0x131, u_620:8);
	OF = INT_SCARRY(u_1f60:4, 0x1);
	u_1f60:4 = LOAD(0x131, u_620:8);
	u_1f60:4 = INT_ADD(u_1f60:4, 0x1);
	STORE(0x131, u_620:8, u_1f60:4);
	u_1f60:4 = LOAD(0x131, u_620:8);
	SF = INT_SLESS(u_1f60:4, 0x0);
	u_1f60:4 = LOAD(0x131, u_620:8);
	ZF = INT_EQUAL(u_1f60:4, 0x0);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd8);
	u_1f50:4 = LOAD(0x131, u_620:8);
	CF = INT_LESS(EAX, u_1f50:4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	OF = INT_SBORROW(EAX, u_1f50:4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	u_59c0:4 = INT_SUB(EAX, u_1f50:4);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(u_59c0:4, 0x0);
	ZF = INT_EQUAL(u_59c0:4, 0x0);
	u_2160:1 = INT_NOTEQUAL(OF, SF);
	u_2180:1 = BOOL_OR(ZF, u_2160:1);
	CBRANCH(A_0010069f:8, u_2180:1);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd8);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	CF = INT_LESS(EAX, 0x1);
	OF = INT_SBORROW(EAX, 0x1);
	EAX = INT_SUB(EAX, 0x1);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(EAX, 0x0);
	ZF = INT_EQUAL(EAX, 0x0);
	RAX = INT_SEXT(EAX);
	u_6f0:8 = INT_ADD(0xffffffffffffffe0, RBP);
	u_700:8 = INT_MULT(RAX, 0x4);
	u_720:8 = INT_ADD(u_6f0:8, u_700:8);
	u_1f50:4 = LOAD(0x131, u_720:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xfffffffffffffff8);
	u_1f70:8 = LOAD(0x131, u_620:8);
	RCX = COPY(u_1f70:8);
	u_960:8 = INT_ADD(FS_OFFSET, 0x28);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_1f70:8 = LOAD(0x131, u_960:8);
	RCX = INT_XOR(RCX, u_1f70:8);
	SF = INT_SLESS(RCX, 0x0);
	ZF = INT_EQUAL(RCX, 0x0);
	CBRANCH(A_001006ee:8, ZF);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x1006ee);
	CALL(A_00100540:8);
	RSP = COPY(RBP);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	u_2480:8 = COPY(R15);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	u_2480:8 = COPY(R14);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R15 = COPY(RDX);
	u_2480:8 = COPY(R13);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	u_2480:8 = COPY(R12);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R12 = COPY(0x300db8);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(0x300dc0);
	u_2480:8 = COPY(RBX);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R13D = COPY(EDI);
	R13 = INT_ZEXT(R13D);
	R14 = COPY(RSI);
	CF = INT_LESS(RBP, R12);
	OF = INT_SBORROW(RBP, R12);
	RBP = INT_SUB(RBP, R12);
	SF = INT_SLESS(RBP, 0x0);
	ZF = INT_EQUAL(RBP, 0x0);
	CF = INT_LESS(RSP, 0x8);
	OF = INT_SBORROW(RSP, 0x8);
	RSP = INT_SUB(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	u_ac20:4 = INT_AND(0x3, 0x3f);
	u_ac30:8 = COPY(RBP);
	RBP = INT_SRIGHT(RBP, u_ac20:4);
	u_32f0:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_3300:4 = INT_SUB(u_ac20:4, 0x1);
	u_3310:8 = INT_SRIGHT(u_ac30:8, u_3300:4);
	u_3320:8 = INT_AND(u_3310:8, 0x1);
	u_3340:1 = INT_NOTEQUAL(u_3320:8, 0x0);
	u_3350:1 = BOOL_NEGATE(u_32f0:1);
	u_3360:1 = INT_AND(u_3350:1, CF);
	u_3370:1 = INT_AND(u_32f0:1, u_3340:1);
	CF = INT_OR(u_3360:1, u_3370:1);
	u_33a0:1 = INT_EQUAL(u_ac20:4, 0x1);
	u_33b0:1 = BOOL_NEGATE(u_33a0:1);
	OF = INT_AND(u_33b0:1, OF);
	u_2e00:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_2e20:1 = INT_SLESS(RBP, 0x0);
	u_2e30:1 = BOOL_NEGATE(u_2e00:1);
	u_2e40:1 = INT_AND(u_2e30:1, SF);
	u_2e50:1 = INT_AND(u_2e00:1, u_2e20:1);
	SF = INT_OR(u_2e40:1, u_2e50:1);
	u_2e80:1 = INT_EQUAL(RBP, 0x0);
	u_2e90:1 = BOOL_NEGATE(u_2e00:1);
	u_2ea0:1 = INT_AND(u_2e90:1, ZF);
	u_2eb0:1 = INT_AND(u_2e00:1, u_2e80:1);
	ZF = INT_OR(u_2ea0:1, u_2eb0:1);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x100721);
	CALL(A_00100510:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_bb10:8 = INT_AND(RBP, RBP);
	SF = INT_SLESS(u_bb10:8, 0x0);
	ZF = INT_EQUAL(u_bb10:8, 0x0);
	CBRANCH(A_00100746:8, ZF);
	CF = COPY(0x0);
	OF = COPY(0x0);
	EBX = INT_XOR(EBX, EBX);
	RBX = INT_ZEXT(EBX);
	SF = INT_SLESS(EBX, 0x0);
	ZF = INT_EQUAL(EBX, 0x0);
	u_7e0:8 = INT_MULT(RAX, 0x1);
	u_800:8 = INT_ADD(RAX, u_7e0:8);
	RDX = COPY(R15);
	RSI = COPY(R14);
	EDI = COPY(R13D);
	RDI = INT_ZEXT(EDI);
	u_660:8 = INT_MULT(RBX, 0x8);
	u_680:8 = INT_ADD(R12, u_660:8);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x10073d);
	u_1f70:8 = LOAD(0x131, u_680:8);
	CALLIND(u_1f70:8);
	CF = INT_CARRY(RBX, 0x1);
	OF = INT_SCARRY(RBX, 0x1);
	RBX = INT_ADD(RBX, 0x1);
	SF = INT_SLESS(RBX, 0x0);
	ZF = INT_EQUAL(RBX, 0x0);
	CF = INT_LESS(RBP, RBX);
	OF = INT_SBORROW(RBP, RBX);
	u_5960:8 = INT_SUB(RBP, RBX);
	SF = INT_SLESS(u_5960:8, 0x0);
	ZF = INT_EQUAL(u_5960:8, 0x0);
	u_2080:1 = BOOL_NEGATE(ZF);
	CBRANCH(A_00100730:8, u_2080:1);
	CF = INT_CARRY(RSP, 0x8);
	OF = INT_SCARRY(RSP, 0x8);
	RSP = INT_ADD(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	RBX = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R12 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R13 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R14 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R15 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	CF = INT_LESS(RSP, 0x8);
	OF = INT_SBORROW(RSP, 0x8);
	RSP = INT_SUB(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	CF = INT_CARRY(RSP, 0x8);
	OF = INT_SCARRY(RSP, 0x8);
	RSP = INT_ADD(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);

void __stack_chk_fail():
	BRANCHIND(A_00300fd0:8);
	u_88a0:8 = COPY(0x0);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_88a0:8);
	BRANCH(A_00100530:8);
	BRANCHIND(A_00300ff8:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	EBP = INT_XOR(EBP, EBP);
	RBP = INT_ZEXT(EBP);
	SF = INT_SLESS(EBP, 0x0);
	ZF = INT_EQUAL(EBP, 0x0);
	R9 = COPY(RDX);
	RSI = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RDX = COPY(RSP);
	CF = COPY(0x0);
	OF = COPY(0x0);
	RSP = INT_AND(RSP, 0xfffffffffffffff0);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	u_2480:8 = COPY(RAX);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	u_2480:8 = COPY(RSP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R8 = COPY(0x100760);
	RCX = COPY(0x1006f0);
	RDI = COPY(0x10066a);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x10058a);
	CALLIND(A_00300fe0:8);
	BRANCH(A_0010058a:8);
	RDI = COPY(0x301010);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RAX = COPY(0x301010);
	CF = INT_LESS(RAX, RDI);
	OF = INT_SBORROW(RAX, RDI);
	u_5960:8 = INT_SUB(RAX, RDI);
	SF = INT_SLESS(u_5960:8, 0x0);
	ZF = INT_EQUAL(u_5960:8, 0x0);
	RBP = COPY(RSP);
	CBRANCH(A_001005c0:8, ZF);
	RAX = COPY(A_00300fd8:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_bb10:8 = INT_AND(RAX, RAX);
	SF = INT_SLESS(u_bb10:8, 0x0);
	ZF = INT_EQUAL(u_bb10:8, 0x0);
	CBRANCH(A_001005c0:8, ZF);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	BRANCHIND(RAX);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	RDI = COPY(0x301010);
	RSI = COPY(0x301010);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	CF = INT_LESS(RSI, RDI);
	OF = INT_SBORROW(RSI, RDI);
	RSI = INT_SUB(RSI, RDI);
	SF = INT_SLESS(RSI, 0x0);
	ZF = INT_EQUAL(RSI, 0x0);
	RBP = COPY(RSP);
	u_ac20:4 = INT_AND(0x3, 0x3f);
	u_ac30:8 = COPY(RSI);
	RSI = INT_SRIGHT(RSI, u_ac20:4);
	u_32f0:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_3300:4 = INT_SUB(u_ac20:4, 0x1);
	u_3310:8 = INT_SRIGHT(u_ac30:8, u_3300:4);
	u_3320:8 = INT_AND(u_3310:8, 0x1);
	u_3340:1 = INT_NOTEQUAL(u_3320:8, 0x0);
	u_3350:1 = BOOL_NEGATE(u_32f0:1);
	u_3360:1 = INT_AND(u_3350:1, CF);
	u_3370:1 = INT_AND(u_32f0:1, u_3340:1);
	CF = INT_OR(u_3360:1, u_3370:1);
	u_33a0:1 = INT_EQUAL(u_ac20:4, 0x1);
	u_33b0:1 = BOOL_NEGATE(u_33a0:1);
	OF = INT_AND(u_33b0:1, OF);
	u_2e00:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_2e20:1 = INT_SLESS(RSI, 0x0);
	u_2e30:1 = BOOL_NEGATE(u_2e00:1);
	u_2e40:1 = INT_AND(u_2e30:1, SF);
	u_2e50:1 = INT_AND(u_2e00:1, u_2e20:1);
	SF = INT_OR(u_2e40:1, u_2e50:1);
	u_2e80:1 = INT_EQUAL(RSI, 0x0);
	u_2e90:1 = BOOL_NEGATE(u_2e00:1);
	u_2ea0:1 = INT_AND(u_2e90:1, ZF);
	u_2eb0:1 = INT_AND(u_2e00:1, u_2e80:1);
	ZF = INT_OR(u_2ea0:1, u_2eb0:1);
	RAX = COPY(RSI);
	u_b7c0:4 = INT_AND(0x3f, 0x3f);
	u_b7d0:8 = COPY(RAX);
	RAX = INT_RIGHT(RAX, u_b7c0:4);
	u_33e0:1 = INT_NOTEQUAL(u_b7c0:4, 0x0);
	u_33f0:4 = INT_SUB(u_b7c0:4, 0x1);
	u_3400:8 = INT_RIGHT(u_b7d0:8, u_33f0:4);
	u_3410:8 = INT_AND(u_3400:8, 0x1);
	u_3430:1 = INT_NOTEQUAL(u_3410:8, 0x0);
	u_3440:1 = BOOL_NEGATE(u_33e0:1);
	u_3450:1 = INT_AND(u_3440:1, CF);
	u_3460:1 = INT_AND(u_33e0:1, u_3430:1);
	CF = INT_OR(u_3450:1, u_3460:1);
	u_3490:1 = INT_EQUAL(u_b7c0:4, 0x1);
	u_34b0:1 = INT_SLESS(u_b7d0:8, 0x0);
	u_34c0:1 = BOOL_NEGATE(u_3490:1);
	u_34d0:1 = INT_AND(u_34c0:1, OF);
	u_34e0:1 = INT_AND(u_3490:1, u_34b0:1);
	OF = INT_OR(u_34d0:1, u_34e0:1);
	u_2e00:1 = INT_NOTEQUAL(u_b7c0:4, 0x0);
	u_2e20:1 = INT_SLESS(RAX, 0x0);
	u_2e30:1 = BOOL_NEGATE(u_2e00:1);
	u_2e40:1 = INT_AND(u_2e30:1, SF);
	u_2e50:1 = INT_AND(u_2e00:1, u_2e20:1);
	SF = INT_OR(u_2e40:1, u_2e50:1);
	u_2e80:1 = INT_EQUAL(RAX, 0x0);
	u_2e90:1 = BOOL_NEGATE(u_2e00:1);
	u_2ea0:1 = INT_AND(u_2e90:1, ZF);
	u_2eb0:1 = INT_AND(u_2e00:1, u_2e80:1);
	ZF = INT_OR(u_2ea0:1, u_2eb0:1);
	CF = INT_CARRY(RSI, RAX);
	OF = INT_SCARRY(RSI, RAX);
	RSI = INT_ADD(RSI, RAX);
	SF = INT_SLESS(RSI, 0x0);
	ZF = INT_EQUAL(RSI, 0x0);
	u_1f90:1 = COPY(0x1);
	u_aba0:8 = INT_AND(RSI, 0x1);
	CF = INT_NOTEQUAL(u_aba0:8, 0x0);
	OF = COPY(0x0);
	RSI = INT_SRIGHT(RSI, 0x1);
	SF = INT_SLESS(RSI, 0x0);
	ZF = INT_EQUAL(RSI, 0x0);
	CBRANCH(A_00100610:8, ZF);
	RAX = COPY(A_00300ff0:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_bb10:8 = INT_AND(RAX, RAX);
	SF = INT_SLESS(u_bb10:8, 0x0);
	ZF = INT_EQUAL(u_bb10:8, 0x0);
	CBRANCH(A_00100610:8, ZF);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	BRANCHIND(RAX);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	CF = INT_LESS(A_00301010:1, 0x0);
	OF = INT_SBORROW(A_00301010:1, 0x0);
	u_5820:1 = INT_SUB(A_00301010:1, 0x0);
	SF = INT_SLESS(u_5820:1, 0x0);
	ZF = INT_EQUAL(u_5820:1, 0x0);
	u_2080:1 = BOOL_NEGATE(ZF);
	CBRANCH(A_00100658:8, u_2080:1);
	CF = INT_LESS(A_00300ff8:8, 0x0);
	OF = INT_SBORROW(A_00300ff8:8, 0x0);
	u_58e0:8 = INT_SUB(A_00300ff8:8, 0x0);
	SF = INT_SLESS(u_58e0:8, 0x0);
	ZF = INT_EQUAL(u_58e0:8, 0x0);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(RSP);
	CBRANCH(A_00100643:8, ZF);
	RDI = COPY(A_00301008:8);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x100643);
	CALL(A_00100550:8);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x100648);
	CALL(A_00100590:8);
	A_00301010:1 = COPY(0x1);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(RSP);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	BRANCH(A_001005d0:8);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(RSP);
	CF = INT_LESS(RSP, 0x40);
	OF = INT_SBORROW(RSP, 0x40);
	RSP = INT_SUB(RSP, 0x40);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	u_960:8 = INT_ADD(FS_OFFSET, 0x28);
	u_1f70:8 = LOAD(0x131, u_960:8);
	RAX = COPY(u_1f70:8);
	u_620:8 = INT_ADD(RBP, 0xfffffffffffffff8);
	u_1f70:8 = COPY(RAX);
	STORE(0x131, u_620:8, u_1f70:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	EAX = INT_XOR(EAX, EAX);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(EAX, 0x0);
	ZF = INT_EQUAL(EAX, 0x0);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd0);
	u_1f60:4 = COPY(0x0);
	STORE(0x131, u_620:8, u_1f60:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f60:4 = COPY(0x1);
	STORE(0x131, u_620:8, u_1f60:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd8);
	u_1f60:4 = COPY(0x5);
	STORE(0x131, u_620:8, u_1f60:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f60:4 = COPY(0x1);
	STORE(0x131, u_620:8, u_1f60:4);
	BRANCH(A_001006c6:8);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd0);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EDX = COPY(u_1f50:4);
	RDX = INT_ZEXT(EDX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	CF = INT_CARRY(EAX, EDX);
	OF = INT_SCARRY(EAX, EDX);
	EAX = INT_ADD(EAX, EDX);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(EAX, 0x0);
	ZF = INT_EQUAL(EAX, 0x0);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffdc);
	u_1f50:4 = COPY(EAX);
	STORE(0x131, u_620:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd0);
	u_1f50:4 = COPY(EAX);
	STORE(0x131, u_620:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffdc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f50:4 = COPY(EAX);
	STORE(0x131, u_620:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	RAX = INT_SEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffdc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EDX = COPY(u_1f50:4);
	RDX = INT_ZEXT(EDX);
	u_6f0:8 = INT_ADD(0xffffffffffffffe0, RBP);
	u_700:8 = INT_MULT(RAX, 0x4);
	u_720:8 = INT_ADD(u_6f0:8, u_700:8);
	u_1f50:4 = COPY(EDX);
	STORE(0x131, u_720:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f60:4 = LOAD(0x131, u_620:8);
	CF = INT_CARRY(u_1f60:4, 0x1);
	u_1f60:4 = LOAD(0x131, u_620:8);
	OF = INT_SCARRY(u_1f60:4, 0x1);
	u_1f60:4 = LOAD(0x131, u_620:8);
	u_1f60:4 = INT_ADD(u_1f60:4, 0x1);
	STORE(0x131, u_620:8, u_1f60:4);
	u_1f60:4 = LOAD(0x131, u_620:8);
	SF = INT_SLESS(u_1f60:4, 0x0);
	u_1f60:4 = LOAD(0x131, u_620:8);
	ZF = INT_EQUAL(u_1f60:4, 0x0);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd8);
	u_1f50:4 = LOAD(0x131, u_620:8);
	CF = INT_LESS(EAX, u_1f50:4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	OF = INT_SBORROW(EAX, u_1f50:4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	u_59c0:4 = INT_SUB(EAX, u_1f50:4);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(u_59c0:4, 0x0);
	ZF = INT_EQUAL(u_59c0:4, 0x0);
	u_2160:1 = INT_NOTEQUAL(OF, SF);
	u_2180:1 = BOOL_OR(ZF, u_2160:1);
	CBRANCH(A_0010069f:8, u_2180:1);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd8);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	CF = INT_LESS(EAX, 0x1);
	OF = INT_SBORROW(EAX, 0x1);
	EAX = INT_SUB(EAX, 0x1);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(EAX, 0x0);
	ZF = INT_EQUAL(EAX, 0x0);
	RAX = INT_SEXT(EAX);
	u_6f0:8 = INT_ADD(0xffffffffffffffe0, RBP);
	u_700:8 = INT_MULT(RAX, 0x4);
	u_720:8 = INT_ADD(u_6f0:8, u_700:8);
	u_1f50:4 = LOAD(0x131, u_720:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xfffffffffffffff8);
	u_1f70:8 = LOAD(0x131, u_620:8);
	RCX = COPY(u_1f70:8);
	u_960:8 = INT_ADD(FS_OFFSET, 0x28);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_1f70:8 = LOAD(0x131, u_960:8);
	RCX = INT_XOR(RCX, u_1f70:8);
	SF = INT_SLESS(RCX, 0x0);
	ZF = INT_EQUAL(RCX, 0x0);
	CBRANCH(A_001006ee:8, ZF);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x1006ee);
	CALL(A_00100540:8);
	RSP = COPY(RBP);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	u_2480:8 = COPY(R15);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	u_2480:8 = COPY(R14);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R15 = COPY(RDX);
	u_2480:8 = COPY(R13);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	u_2480:8 = COPY(R12);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R12 = COPY(0x300db8);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(0x300dc0);
	u_2480:8 = COPY(RBX);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R13D = COPY(EDI);
	R13 = INT_ZEXT(R13D);
	R14 = COPY(RSI);
	CF = INT_LESS(RBP, R12);
	OF = INT_SBORROW(RBP, R12);
	RBP = INT_SUB(RBP, R12);
	SF = INT_SLESS(RBP, 0x0);
	ZF = INT_EQUAL(RBP, 0x0);
	CF = INT_LESS(RSP, 0x8);
	OF = INT_SBORROW(RSP, 0x8);
	RSP = INT_SUB(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	u_ac20:4 = INT_AND(0x3, 0x3f);
	u_ac30:8 = COPY(RBP);
	RBP = INT_SRIGHT(RBP, u_ac20:4);
	u_32f0:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_3300:4 = INT_SUB(u_ac20:4, 0x1);
	u_3310:8 = INT_SRIGHT(u_ac30:8, u_3300:4);
	u_3320:8 = INT_AND(u_3310:8, 0x1);
	u_3340:1 = INT_NOTEQUAL(u_3320:8, 0x0);
	u_3350:1 = BOOL_NEGATE(u_32f0:1);
	u_3360:1 = INT_AND(u_3350:1, CF);
	u_3370:1 = INT_AND(u_32f0:1, u_3340:1);
	CF = INT_OR(u_3360:1, u_3370:1);
	u_33a0:1 = INT_EQUAL(u_ac20:4, 0x1);
	u_33b0:1 = BOOL_NEGATE(u_33a0:1);
	OF = INT_AND(u_33b0:1, OF);
	u_2e00:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_2e20:1 = INT_SLESS(RBP, 0x0);
	u_2e30:1 = BOOL_NEGATE(u_2e00:1);
	u_2e40:1 = INT_AND(u_2e30:1, SF);
	u_2e50:1 = INT_AND(u_2e00:1, u_2e20:1);
	SF = INT_OR(u_2e40:1, u_2e50:1);
	u_2e80:1 = INT_EQUAL(RBP, 0x0);
	u_2e90:1 = BOOL_NEGATE(u_2e00:1);
	u_2ea0:1 = INT_AND(u_2e90:1, ZF);
	u_2eb0:1 = INT_AND(u_2e00:1, u_2e80:1);
	ZF = INT_OR(u_2ea0:1, u_2eb0:1);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x100721);
	CALL(A_00100510:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_bb10:8 = INT_AND(RBP, RBP);
	SF = INT_SLESS(u_bb10:8, 0x0);
	ZF = INT_EQUAL(u_bb10:8, 0x0);
	CBRANCH(A_00100746:8, ZF);
	CF = COPY(0x0);
	OF = COPY(0x0);
	EBX = INT_XOR(EBX, EBX);
	RBX = INT_ZEXT(EBX);
	SF = INT_SLESS(EBX, 0x0);
	ZF = INT_EQUAL(EBX, 0x0);
	u_7e0:8 = INT_MULT(RAX, 0x1);
	u_800:8 = INT_ADD(RAX, u_7e0:8);
	RDX = COPY(R15);
	RSI = COPY(R14);
	EDI = COPY(R13D);
	RDI = INT_ZEXT(EDI);
	u_660:8 = INT_MULT(RBX, 0x8);
	u_680:8 = INT_ADD(R12, u_660:8);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x10073d);
	u_1f70:8 = LOAD(0x131, u_680:8);
	CALLIND(u_1f70:8);
	CF = INT_CARRY(RBX, 0x1);
	OF = INT_SCARRY(RBX, 0x1);
	RBX = INT_ADD(RBX, 0x1);
	SF = INT_SLESS(RBX, 0x0);
	ZF = INT_EQUAL(RBX, 0x0);
	CF = INT_LESS(RBP, RBX);
	OF = INT_SBORROW(RBP, RBX);
	u_5960:8 = INT_SUB(RBP, RBX);
	SF = INT_SLESS(u_5960:8, 0x0);
	ZF = INT_EQUAL(u_5960:8, 0x0);
	u_2080:1 = BOOL_NEGATE(ZF);
	CBRANCH(A_00100730:8, u_2080:1);
	CF = INT_CARRY(RSP, 0x8);
	OF = INT_SCARRY(RSP, 0x8);
	RSP = INT_ADD(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	RBX = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R12 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R13 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R14 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R15 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	CF = INT_LESS(RSP, 0x8);
	OF = INT_SBORROW(RSP, 0x8);
	RSP = INT_SUB(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	CF = INT_CARRY(RSP, 0x8);
	OF = INT_SCARRY(RSP, 0x8);
	RSP = INT_ADD(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);

undefined __cxa_finalize():
	BRANCHIND(A_00300ff8:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	EBP = INT_XOR(EBP, EBP);
	RBP = INT_ZEXT(EBP);
	SF = INT_SLESS(EBP, 0x0);
	ZF = INT_EQUAL(EBP, 0x0);
	R9 = COPY(RDX);
	RSI = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RDX = COPY(RSP);
	CF = COPY(0x0);
	OF = COPY(0x0);
	RSP = INT_AND(RSP, 0xfffffffffffffff0);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	u_2480:8 = COPY(RAX);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	u_2480:8 = COPY(RSP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R8 = COPY(0x100760);
	RCX = COPY(0x1006f0);
	RDI = COPY(0x10066a);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x10058a);
	CALLIND(A_00300fe0:8);
	BRANCH(A_0010058a:8);
	RDI = COPY(0x301010);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RAX = COPY(0x301010);
	CF = INT_LESS(RAX, RDI);
	OF = INT_SBORROW(RAX, RDI);
	u_5960:8 = INT_SUB(RAX, RDI);
	SF = INT_SLESS(u_5960:8, 0x0);
	ZF = INT_EQUAL(u_5960:8, 0x0);
	RBP = COPY(RSP);
	CBRANCH(A_001005c0:8, ZF);
	RAX = COPY(A_00300fd8:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_bb10:8 = INT_AND(RAX, RAX);
	SF = INT_SLESS(u_bb10:8, 0x0);
	ZF = INT_EQUAL(u_bb10:8, 0x0);
	CBRANCH(A_001005c0:8, ZF);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	BRANCHIND(RAX);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	RDI = COPY(0x301010);
	RSI = COPY(0x301010);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	CF = INT_LESS(RSI, RDI);
	OF = INT_SBORROW(RSI, RDI);
	RSI = INT_SUB(RSI, RDI);
	SF = INT_SLESS(RSI, 0x0);
	ZF = INT_EQUAL(RSI, 0x0);
	RBP = COPY(RSP);
	u_ac20:4 = INT_AND(0x3, 0x3f);
	u_ac30:8 = COPY(RSI);
	RSI = INT_SRIGHT(RSI, u_ac20:4);
	u_32f0:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_3300:4 = INT_SUB(u_ac20:4, 0x1);
	u_3310:8 = INT_SRIGHT(u_ac30:8, u_3300:4);
	u_3320:8 = INT_AND(u_3310:8, 0x1);
	u_3340:1 = INT_NOTEQUAL(u_3320:8, 0x0);
	u_3350:1 = BOOL_NEGATE(u_32f0:1);
	u_3360:1 = INT_AND(u_3350:1, CF);
	u_3370:1 = INT_AND(u_32f0:1, u_3340:1);
	CF = INT_OR(u_3360:1, u_3370:1);
	u_33a0:1 = INT_EQUAL(u_ac20:4, 0x1);
	u_33b0:1 = BOOL_NEGATE(u_33a0:1);
	OF = INT_AND(u_33b0:1, OF);
	u_2e00:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_2e20:1 = INT_SLESS(RSI, 0x0);
	u_2e30:1 = BOOL_NEGATE(u_2e00:1);
	u_2e40:1 = INT_AND(u_2e30:1, SF);
	u_2e50:1 = INT_AND(u_2e00:1, u_2e20:1);
	SF = INT_OR(u_2e40:1, u_2e50:1);
	u_2e80:1 = INT_EQUAL(RSI, 0x0);
	u_2e90:1 = BOOL_NEGATE(u_2e00:1);
	u_2ea0:1 = INT_AND(u_2e90:1, ZF);
	u_2eb0:1 = INT_AND(u_2e00:1, u_2e80:1);
	ZF = INT_OR(u_2ea0:1, u_2eb0:1);
	RAX = COPY(RSI);
	u_b7c0:4 = INT_AND(0x3f, 0x3f);
	u_b7d0:8 = COPY(RAX);
	RAX = INT_RIGHT(RAX, u_b7c0:4);
	u_33e0:1 = INT_NOTEQUAL(u_b7c0:4, 0x0);
	u_33f0:4 = INT_SUB(u_b7c0:4, 0x1);
	u_3400:8 = INT_RIGHT(u_b7d0:8, u_33f0:4);
	u_3410:8 = INT_AND(u_3400:8, 0x1);
	u_3430:1 = INT_NOTEQUAL(u_3410:8, 0x0);
	u_3440:1 = BOOL_NEGATE(u_33e0:1);
	u_3450:1 = INT_AND(u_3440:1, CF);
	u_3460:1 = INT_AND(u_33e0:1, u_3430:1);
	CF = INT_OR(u_3450:1, u_3460:1);
	u_3490:1 = INT_EQUAL(u_b7c0:4, 0x1);
	u_34b0:1 = INT_SLESS(u_b7d0:8, 0x0);
	u_34c0:1 = BOOL_NEGATE(u_3490:1);
	u_34d0:1 = INT_AND(u_34c0:1, OF);
	u_34e0:1 = INT_AND(u_3490:1, u_34b0:1);
	OF = INT_OR(u_34d0:1, u_34e0:1);
	u_2e00:1 = INT_NOTEQUAL(u_b7c0:4, 0x0);
	u_2e20:1 = INT_SLESS(RAX, 0x0);
	u_2e30:1 = BOOL_NEGATE(u_2e00:1);
	u_2e40:1 = INT_AND(u_2e30:1, SF);
	u_2e50:1 = INT_AND(u_2e00:1, u_2e20:1);
	SF = INT_OR(u_2e40:1, u_2e50:1);
	u_2e80:1 = INT_EQUAL(RAX, 0x0);
	u_2e90:1 = BOOL_NEGATE(u_2e00:1);
	u_2ea0:1 = INT_AND(u_2e90:1, ZF);
	u_2eb0:1 = INT_AND(u_2e00:1, u_2e80:1);
	ZF = INT_OR(u_2ea0:1, u_2eb0:1);
	CF = INT_CARRY(RSI, RAX);
	OF = INT_SCARRY(RSI, RAX);
	RSI = INT_ADD(RSI, RAX);
	SF = INT_SLESS(RSI, 0x0);
	ZF = INT_EQUAL(RSI, 0x0);
	u_1f90:1 = COPY(0x1);
	u_aba0:8 = INT_AND(RSI, 0x1);
	CF = INT_NOTEQUAL(u_aba0:8, 0x0);
	OF = COPY(0x0);
	RSI = INT_SRIGHT(RSI, 0x1);
	SF = INT_SLESS(RSI, 0x0);
	ZF = INT_EQUAL(RSI, 0x0);
	CBRANCH(A_00100610:8, ZF);
	RAX = COPY(A_00300ff0:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_bb10:8 = INT_AND(RAX, RAX);
	SF = INT_SLESS(u_bb10:8, 0x0);
	ZF = INT_EQUAL(u_bb10:8, 0x0);
	CBRANCH(A_00100610:8, ZF);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	BRANCHIND(RAX);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	CF = INT_LESS(A_00301010:1, 0x0);
	OF = INT_SBORROW(A_00301010:1, 0x0);
	u_5820:1 = INT_SUB(A_00301010:1, 0x0);
	SF = INT_SLESS(u_5820:1, 0x0);
	ZF = INT_EQUAL(u_5820:1, 0x0);
	u_2080:1 = BOOL_NEGATE(ZF);
	CBRANCH(A_00100658:8, u_2080:1);
	CF = INT_LESS(A_00300ff8:8, 0x0);
	OF = INT_SBORROW(A_00300ff8:8, 0x0);
	u_58e0:8 = INT_SUB(A_00300ff8:8, 0x0);
	SF = INT_SLESS(u_58e0:8, 0x0);
	ZF = INT_EQUAL(u_58e0:8, 0x0);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(RSP);
	CBRANCH(A_00100643:8, ZF);
	RDI = COPY(A_00301008:8);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x100643);
	CALL(A_00100550:8);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x100648);
	CALL(A_00100590:8);
	A_00301010:1 = COPY(0x1);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(RSP);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	BRANCH(A_001005d0:8);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(RSP);
	CF = INT_LESS(RSP, 0x40);
	OF = INT_SBORROW(RSP, 0x40);
	RSP = INT_SUB(RSP, 0x40);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	u_960:8 = INT_ADD(FS_OFFSET, 0x28);
	u_1f70:8 = LOAD(0x131, u_960:8);
	RAX = COPY(u_1f70:8);
	u_620:8 = INT_ADD(RBP, 0xfffffffffffffff8);
	u_1f70:8 = COPY(RAX);
	STORE(0x131, u_620:8, u_1f70:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	EAX = INT_XOR(EAX, EAX);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(EAX, 0x0);
	ZF = INT_EQUAL(EAX, 0x0);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd0);
	u_1f60:4 = COPY(0x0);
	STORE(0x131, u_620:8, u_1f60:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f60:4 = COPY(0x1);
	STORE(0x131, u_620:8, u_1f60:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd8);
	u_1f60:4 = COPY(0x5);
	STORE(0x131, u_620:8, u_1f60:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f60:4 = COPY(0x1);
	STORE(0x131, u_620:8, u_1f60:4);
	BRANCH(A_001006c6:8);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd0);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EDX = COPY(u_1f50:4);
	RDX = INT_ZEXT(EDX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	CF = INT_CARRY(EAX, EDX);
	OF = INT_SCARRY(EAX, EDX);
	EAX = INT_ADD(EAX, EDX);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(EAX, 0x0);
	ZF = INT_EQUAL(EAX, 0x0);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffdc);
	u_1f50:4 = COPY(EAX);
	STORE(0x131, u_620:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd0);
	u_1f50:4 = COPY(EAX);
	STORE(0x131, u_620:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffdc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f50:4 = COPY(EAX);
	STORE(0x131, u_620:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	RAX = INT_SEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffdc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EDX = COPY(u_1f50:4);
	RDX = INT_ZEXT(EDX);
	u_6f0:8 = INT_ADD(0xffffffffffffffe0, RBP);
	u_700:8 = INT_MULT(RAX, 0x4);
	u_720:8 = INT_ADD(u_6f0:8, u_700:8);
	u_1f50:4 = COPY(EDX);
	STORE(0x131, u_720:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f60:4 = LOAD(0x131, u_620:8);
	CF = INT_CARRY(u_1f60:4, 0x1);
	u_1f60:4 = LOAD(0x131, u_620:8);
	OF = INT_SCARRY(u_1f60:4, 0x1);
	u_1f60:4 = LOAD(0x131, u_620:8);
	u_1f60:4 = INT_ADD(u_1f60:4, 0x1);
	STORE(0x131, u_620:8, u_1f60:4);
	u_1f60:4 = LOAD(0x131, u_620:8);
	SF = INT_SLESS(u_1f60:4, 0x0);
	u_1f60:4 = LOAD(0x131, u_620:8);
	ZF = INT_EQUAL(u_1f60:4, 0x0);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd8);
	u_1f50:4 = LOAD(0x131, u_620:8);
	CF = INT_LESS(EAX, u_1f50:4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	OF = INT_SBORROW(EAX, u_1f50:4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	u_59c0:4 = INT_SUB(EAX, u_1f50:4);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(u_59c0:4, 0x0);
	ZF = INT_EQUAL(u_59c0:4, 0x0);
	u_2160:1 = INT_NOTEQUAL(OF, SF);
	u_2180:1 = BOOL_OR(ZF, u_2160:1);
	CBRANCH(A_0010069f:8, u_2180:1);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd8);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	CF = INT_LESS(EAX, 0x1);
	OF = INT_SBORROW(EAX, 0x1);
	EAX = INT_SUB(EAX, 0x1);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(EAX, 0x0);
	ZF = INT_EQUAL(EAX, 0x0);
	RAX = INT_SEXT(EAX);
	u_6f0:8 = INT_ADD(0xffffffffffffffe0, RBP);
	u_700:8 = INT_MULT(RAX, 0x4);
	u_720:8 = INT_ADD(u_6f0:8, u_700:8);
	u_1f50:4 = LOAD(0x131, u_720:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xfffffffffffffff8);
	u_1f70:8 = LOAD(0x131, u_620:8);
	RCX = COPY(u_1f70:8);
	u_960:8 = INT_ADD(FS_OFFSET, 0x28);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_1f70:8 = LOAD(0x131, u_960:8);
	RCX = INT_XOR(RCX, u_1f70:8);
	SF = INT_SLESS(RCX, 0x0);
	ZF = INT_EQUAL(RCX, 0x0);
	CBRANCH(A_001006ee:8, ZF);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x1006ee);
	CALL(A_00100540:8);
	RSP = COPY(RBP);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	u_2480:8 = COPY(R15);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	u_2480:8 = COPY(R14);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R15 = COPY(RDX);
	u_2480:8 = COPY(R13);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	u_2480:8 = COPY(R12);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R12 = COPY(0x300db8);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(0x300dc0);
	u_2480:8 = COPY(RBX);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R13D = COPY(EDI);
	R13 = INT_ZEXT(R13D);
	R14 = COPY(RSI);
	CF = INT_LESS(RBP, R12);
	OF = INT_SBORROW(RBP, R12);
	RBP = INT_SUB(RBP, R12);
	SF = INT_SLESS(RBP, 0x0);
	ZF = INT_EQUAL(RBP, 0x0);
	CF = INT_LESS(RSP, 0x8);
	OF = INT_SBORROW(RSP, 0x8);
	RSP = INT_SUB(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	u_ac20:4 = INT_AND(0x3, 0x3f);
	u_ac30:8 = COPY(RBP);
	RBP = INT_SRIGHT(RBP, u_ac20:4);
	u_32f0:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_3300:4 = INT_SUB(u_ac20:4, 0x1);
	u_3310:8 = INT_SRIGHT(u_ac30:8, u_3300:4);
	u_3320:8 = INT_AND(u_3310:8, 0x1);
	u_3340:1 = INT_NOTEQUAL(u_3320:8, 0x0);
	u_3350:1 = BOOL_NEGATE(u_32f0:1);
	u_3360:1 = INT_AND(u_3350:1, CF);
	u_3370:1 = INT_AND(u_32f0:1, u_3340:1);
	CF = INT_OR(u_3360:1, u_3370:1);
	u_33a0:1 = INT_EQUAL(u_ac20:4, 0x1);
	u_33b0:1 = BOOL_NEGATE(u_33a0:1);
	OF = INT_AND(u_33b0:1, OF);
	u_2e00:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_2e20:1 = INT_SLESS(RBP, 0x0);
	u_2e30:1 = BOOL_NEGATE(u_2e00:1);
	u_2e40:1 = INT_AND(u_2e30:1, SF);
	u_2e50:1 = INT_AND(u_2e00:1, u_2e20:1);
	SF = INT_OR(u_2e40:1, u_2e50:1);
	u_2e80:1 = INT_EQUAL(RBP, 0x0);
	u_2e90:1 = BOOL_NEGATE(u_2e00:1);
	u_2ea0:1 = INT_AND(u_2e90:1, ZF);
	u_2eb0:1 = INT_AND(u_2e00:1, u_2e80:1);
	ZF = INT_OR(u_2ea0:1, u_2eb0:1);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x100721);
	CALL(A_00100510:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_bb10:8 = INT_AND(RBP, RBP);
	SF = INT_SLESS(u_bb10:8, 0x0);
	ZF = INT_EQUAL(u_bb10:8, 0x0);
	CBRANCH(A_00100746:8, ZF);
	CF = COPY(0x0);
	OF = COPY(0x0);
	EBX = INT_XOR(EBX, EBX);
	RBX = INT_ZEXT(EBX);
	SF = INT_SLESS(EBX, 0x0);
	ZF = INT_EQUAL(EBX, 0x0);
	u_7e0:8 = INT_MULT(RAX, 0x1);
	u_800:8 = INT_ADD(RAX, u_7e0:8);
	RDX = COPY(R15);
	RSI = COPY(R14);
	EDI = COPY(R13D);
	RDI = INT_ZEXT(EDI);
	u_660:8 = INT_MULT(RBX, 0x8);
	u_680:8 = INT_ADD(R12, u_660:8);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x10073d);
	u_1f70:8 = LOAD(0x131, u_680:8);
	CALLIND(u_1f70:8);
	CF = INT_CARRY(RBX, 0x1);
	OF = INT_SCARRY(RBX, 0x1);
	RBX = INT_ADD(RBX, 0x1);
	SF = INT_SLESS(RBX, 0x0);
	ZF = INT_EQUAL(RBX, 0x0);
	CF = INT_LESS(RBP, RBX);
	OF = INT_SBORROW(RBP, RBX);
	u_5960:8 = INT_SUB(RBP, RBX);
	SF = INT_SLESS(u_5960:8, 0x0);
	ZF = INT_EQUAL(u_5960:8, 0x0);
	u_2080:1 = BOOL_NEGATE(ZF);
	CBRANCH(A_00100730:8, u_2080:1);
	CF = INT_CARRY(RSP, 0x8);
	OF = INT_SCARRY(RSP, 0x8);
	RSP = INT_ADD(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	RBX = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R12 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R13 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R14 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R15 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	CF = INT_LESS(RSP, 0x8);
	OF = INT_SBORROW(RSP, 0x8);
	RSP = INT_SUB(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	CF = INT_CARRY(RSP, 0x8);
	OF = INT_SCARRY(RSP, 0x8);
	RSP = INT_ADD(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);

undefined _start():
	CF = COPY(0x0);
	OF = COPY(0x0);
	EBP = INT_XOR(EBP, EBP);
	RBP = INT_ZEXT(EBP);
	SF = INT_SLESS(EBP, 0x0);
	ZF = INT_EQUAL(EBP, 0x0);
	R9 = COPY(RDX);
	RSI = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RDX = COPY(RSP);
	CF = COPY(0x0);
	OF = COPY(0x0);
	RSP = INT_AND(RSP, 0xfffffffffffffff0);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	u_2480:8 = COPY(RAX);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	u_2480:8 = COPY(RSP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R8 = COPY(0x100760);
	RCX = COPY(0x1006f0);
	RDI = COPY(0x10066a);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x10058a);
	CALLIND(A_00300fe0:8);
	BRANCH(A_0010058a:8);
	RDI = COPY(0x301010);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RAX = COPY(0x301010);
	CF = INT_LESS(RAX, RDI);
	OF = INT_SBORROW(RAX, RDI);
	u_5960:8 = INT_SUB(RAX, RDI);
	SF = INT_SLESS(u_5960:8, 0x0);
	ZF = INT_EQUAL(u_5960:8, 0x0);
	RBP = COPY(RSP);
	CBRANCH(A_001005c0:8, ZF);
	RAX = COPY(A_00300fd8:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_bb10:8 = INT_AND(RAX, RAX);
	SF = INT_SLESS(u_bb10:8, 0x0);
	ZF = INT_EQUAL(u_bb10:8, 0x0);
	CBRANCH(A_001005c0:8, ZF);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	BRANCHIND(RAX);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	RDI = COPY(0x301010);
	RSI = COPY(0x301010);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	CF = INT_LESS(RSI, RDI);
	OF = INT_SBORROW(RSI, RDI);
	RSI = INT_SUB(RSI, RDI);
	SF = INT_SLESS(RSI, 0x0);
	ZF = INT_EQUAL(RSI, 0x0);
	RBP = COPY(RSP);
	u_ac20:4 = INT_AND(0x3, 0x3f);
	u_ac30:8 = COPY(RSI);
	RSI = INT_SRIGHT(RSI, u_ac20:4);
	u_32f0:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_3300:4 = INT_SUB(u_ac20:4, 0x1);
	u_3310:8 = INT_SRIGHT(u_ac30:8, u_3300:4);
	u_3320:8 = INT_AND(u_3310:8, 0x1);
	u_3340:1 = INT_NOTEQUAL(u_3320:8, 0x0);
	u_3350:1 = BOOL_NEGATE(u_32f0:1);
	u_3360:1 = INT_AND(u_3350:1, CF);
	u_3370:1 = INT_AND(u_32f0:1, u_3340:1);
	CF = INT_OR(u_3360:1, u_3370:1);
	u_33a0:1 = INT_EQUAL(u_ac20:4, 0x1);
	u_33b0:1 = BOOL_NEGATE(u_33a0:1);
	OF = INT_AND(u_33b0:1, OF);
	u_2e00:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_2e20:1 = INT_SLESS(RSI, 0x0);
	u_2e30:1 = BOOL_NEGATE(u_2e00:1);
	u_2e40:1 = INT_AND(u_2e30:1, SF);
	u_2e50:1 = INT_AND(u_2e00:1, u_2e20:1);
	SF = INT_OR(u_2e40:1, u_2e50:1);
	u_2e80:1 = INT_EQUAL(RSI, 0x0);
	u_2e90:1 = BOOL_NEGATE(u_2e00:1);
	u_2ea0:1 = INT_AND(u_2e90:1, ZF);
	u_2eb0:1 = INT_AND(u_2e00:1, u_2e80:1);
	ZF = INT_OR(u_2ea0:1, u_2eb0:1);
	RAX = COPY(RSI);
	u_b7c0:4 = INT_AND(0x3f, 0x3f);
	u_b7d0:8 = COPY(RAX);
	RAX = INT_RIGHT(RAX, u_b7c0:4);
	u_33e0:1 = INT_NOTEQUAL(u_b7c0:4, 0x0);
	u_33f0:4 = INT_SUB(u_b7c0:4, 0x1);
	u_3400:8 = INT_RIGHT(u_b7d0:8, u_33f0:4);
	u_3410:8 = INT_AND(u_3400:8, 0x1);
	u_3430:1 = INT_NOTEQUAL(u_3410:8, 0x0);
	u_3440:1 = BOOL_NEGATE(u_33e0:1);
	u_3450:1 = INT_AND(u_3440:1, CF);
	u_3460:1 = INT_AND(u_33e0:1, u_3430:1);
	CF = INT_OR(u_3450:1, u_3460:1);
	u_3490:1 = INT_EQUAL(u_b7c0:4, 0x1);
	u_34b0:1 = INT_SLESS(u_b7d0:8, 0x0);
	u_34c0:1 = BOOL_NEGATE(u_3490:1);
	u_34d0:1 = INT_AND(u_34c0:1, OF);
	u_34e0:1 = INT_AND(u_3490:1, u_34b0:1);
	OF = INT_OR(u_34d0:1, u_34e0:1);
	u_2e00:1 = INT_NOTEQUAL(u_b7c0:4, 0x0);
	u_2e20:1 = INT_SLESS(RAX, 0x0);
	u_2e30:1 = BOOL_NEGATE(u_2e00:1);
	u_2e40:1 = INT_AND(u_2e30:1, SF);
	u_2e50:1 = INT_AND(u_2e00:1, u_2e20:1);
	SF = INT_OR(u_2e40:1, u_2e50:1);
	u_2e80:1 = INT_EQUAL(RAX, 0x0);
	u_2e90:1 = BOOL_NEGATE(u_2e00:1);
	u_2ea0:1 = INT_AND(u_2e90:1, ZF);
	u_2eb0:1 = INT_AND(u_2e00:1, u_2e80:1);
	ZF = INT_OR(u_2ea0:1, u_2eb0:1);
	CF = INT_CARRY(RSI, RAX);
	OF = INT_SCARRY(RSI, RAX);
	RSI = INT_ADD(RSI, RAX);
	SF = INT_SLESS(RSI, 0x0);
	ZF = INT_EQUAL(RSI, 0x0);
	u_1f90:1 = COPY(0x1);
	u_aba0:8 = INT_AND(RSI, 0x1);
	CF = INT_NOTEQUAL(u_aba0:8, 0x0);
	OF = COPY(0x0);
	RSI = INT_SRIGHT(RSI, 0x1);
	SF = INT_SLESS(RSI, 0x0);
	ZF = INT_EQUAL(RSI, 0x0);
	CBRANCH(A_00100610:8, ZF);
	RAX = COPY(A_00300ff0:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_bb10:8 = INT_AND(RAX, RAX);
	SF = INT_SLESS(u_bb10:8, 0x0);
	ZF = INT_EQUAL(u_bb10:8, 0x0);
	CBRANCH(A_00100610:8, ZF);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	BRANCHIND(RAX);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	CF = INT_LESS(A_00301010:1, 0x0);
	OF = INT_SBORROW(A_00301010:1, 0x0);
	u_5820:1 = INT_SUB(A_00301010:1, 0x0);
	SF = INT_SLESS(u_5820:1, 0x0);
	ZF = INT_EQUAL(u_5820:1, 0x0);
	u_2080:1 = BOOL_NEGATE(ZF);
	CBRANCH(A_00100658:8, u_2080:1);
	CF = INT_LESS(A_00300ff8:8, 0x0);
	OF = INT_SBORROW(A_00300ff8:8, 0x0);
	u_58e0:8 = INT_SUB(A_00300ff8:8, 0x0);
	SF = INT_SLESS(u_58e0:8, 0x0);
	ZF = INT_EQUAL(u_58e0:8, 0x0);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(RSP);
	CBRANCH(A_00100643:8, ZF);
	RDI = COPY(A_00301008:8);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x100643);
	CALL(A_00100550:8);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x100648);
	CALL(A_00100590:8);
	A_00301010:1 = COPY(0x1);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(RSP);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	BRANCH(A_001005d0:8);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(RSP);
	CF = INT_LESS(RSP, 0x40);
	OF = INT_SBORROW(RSP, 0x40);
	RSP = INT_SUB(RSP, 0x40);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	u_960:8 = INT_ADD(FS_OFFSET, 0x28);
	u_1f70:8 = LOAD(0x131, u_960:8);
	RAX = COPY(u_1f70:8);
	u_620:8 = INT_ADD(RBP, 0xfffffffffffffff8);
	u_1f70:8 = COPY(RAX);
	STORE(0x131, u_620:8, u_1f70:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	EAX = INT_XOR(EAX, EAX);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(EAX, 0x0);
	ZF = INT_EQUAL(EAX, 0x0);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd0);
	u_1f60:4 = COPY(0x0);
	STORE(0x131, u_620:8, u_1f60:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f60:4 = COPY(0x1);
	STORE(0x131, u_620:8, u_1f60:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd8);
	u_1f60:4 = COPY(0x5);
	STORE(0x131, u_620:8, u_1f60:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f60:4 = COPY(0x1);
	STORE(0x131, u_620:8, u_1f60:4);
	BRANCH(A_001006c6:8);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd0);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EDX = COPY(u_1f50:4);
	RDX = INT_ZEXT(EDX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	CF = INT_CARRY(EAX, EDX);
	OF = INT_SCARRY(EAX, EDX);
	EAX = INT_ADD(EAX, EDX);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(EAX, 0x0);
	ZF = INT_EQUAL(EAX, 0x0);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffdc);
	u_1f50:4 = COPY(EAX);
	STORE(0x131, u_620:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd0);
	u_1f50:4 = COPY(EAX);
	STORE(0x131, u_620:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffdc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f50:4 = COPY(EAX);
	STORE(0x131, u_620:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	RAX = INT_SEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffdc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EDX = COPY(u_1f50:4);
	RDX = INT_ZEXT(EDX);
	u_6f0:8 = INT_ADD(0xffffffffffffffe0, RBP);
	u_700:8 = INT_MULT(RAX, 0x4);
	u_720:8 = INT_ADD(u_6f0:8, u_700:8);
	u_1f50:4 = COPY(EDX);
	STORE(0x131, u_720:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f60:4 = LOAD(0x131, u_620:8);
	CF = INT_CARRY(u_1f60:4, 0x1);
	u_1f60:4 = LOAD(0x131, u_620:8);
	OF = INT_SCARRY(u_1f60:4, 0x1);
	u_1f60:4 = LOAD(0x131, u_620:8);
	u_1f60:4 = INT_ADD(u_1f60:4, 0x1);
	STORE(0x131, u_620:8, u_1f60:4);
	u_1f60:4 = LOAD(0x131, u_620:8);
	SF = INT_SLESS(u_1f60:4, 0x0);
	u_1f60:4 = LOAD(0x131, u_620:8);
	ZF = INT_EQUAL(u_1f60:4, 0x0);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd8);
	u_1f50:4 = LOAD(0x131, u_620:8);
	CF = INT_LESS(EAX, u_1f50:4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	OF = INT_SBORROW(EAX, u_1f50:4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	u_59c0:4 = INT_SUB(EAX, u_1f50:4);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(u_59c0:4, 0x0);
	ZF = INT_EQUAL(u_59c0:4, 0x0);
	u_2160:1 = INT_NOTEQUAL(OF, SF);
	u_2180:1 = BOOL_OR(ZF, u_2160:1);
	CBRANCH(A_0010069f:8, u_2180:1);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd8);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	CF = INT_LESS(EAX, 0x1);
	OF = INT_SBORROW(EAX, 0x1);
	EAX = INT_SUB(EAX, 0x1);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(EAX, 0x0);
	ZF = INT_EQUAL(EAX, 0x0);
	RAX = INT_SEXT(EAX);
	u_6f0:8 = INT_ADD(0xffffffffffffffe0, RBP);
	u_700:8 = INT_MULT(RAX, 0x4);
	u_720:8 = INT_ADD(u_6f0:8, u_700:8);
	u_1f50:4 = LOAD(0x131, u_720:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xfffffffffffffff8);
	u_1f70:8 = LOAD(0x131, u_620:8);
	RCX = COPY(u_1f70:8);
	u_960:8 = INT_ADD(FS_OFFSET, 0x28);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_1f70:8 = LOAD(0x131, u_960:8);
	RCX = INT_XOR(RCX, u_1f70:8);
	SF = INT_SLESS(RCX, 0x0);
	ZF = INT_EQUAL(RCX, 0x0);
	CBRANCH(A_001006ee:8, ZF);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x1006ee);
	CALL(A_00100540:8);
	RSP = COPY(RBP);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	u_2480:8 = COPY(R15);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	u_2480:8 = COPY(R14);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R15 = COPY(RDX);
	u_2480:8 = COPY(R13);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	u_2480:8 = COPY(R12);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R12 = COPY(0x300db8);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(0x300dc0);
	u_2480:8 = COPY(RBX);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R13D = COPY(EDI);
	R13 = INT_ZEXT(R13D);
	R14 = COPY(RSI);
	CF = INT_LESS(RBP, R12);
	OF = INT_SBORROW(RBP, R12);
	RBP = INT_SUB(RBP, R12);
	SF = INT_SLESS(RBP, 0x0);
	ZF = INT_EQUAL(RBP, 0x0);
	CF = INT_LESS(RSP, 0x8);
	OF = INT_SBORROW(RSP, 0x8);
	RSP = INT_SUB(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	u_ac20:4 = INT_AND(0x3, 0x3f);
	u_ac30:8 = COPY(RBP);
	RBP = INT_SRIGHT(RBP, u_ac20:4);
	u_32f0:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_3300:4 = INT_SUB(u_ac20:4, 0x1);
	u_3310:8 = INT_SRIGHT(u_ac30:8, u_3300:4);
	u_3320:8 = INT_AND(u_3310:8, 0x1);
	u_3340:1 = INT_NOTEQUAL(u_3320:8, 0x0);
	u_3350:1 = BOOL_NEGATE(u_32f0:1);
	u_3360:1 = INT_AND(u_3350:1, CF);
	u_3370:1 = INT_AND(u_32f0:1, u_3340:1);
	CF = INT_OR(u_3360:1, u_3370:1);
	u_33a0:1 = INT_EQUAL(u_ac20:4, 0x1);
	u_33b0:1 = BOOL_NEGATE(u_33a0:1);
	OF = INT_AND(u_33b0:1, OF);
	u_2e00:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_2e20:1 = INT_SLESS(RBP, 0x0);
	u_2e30:1 = BOOL_NEGATE(u_2e00:1);
	u_2e40:1 = INT_AND(u_2e30:1, SF);
	u_2e50:1 = INT_AND(u_2e00:1, u_2e20:1);
	SF = INT_OR(u_2e40:1, u_2e50:1);
	u_2e80:1 = INT_EQUAL(RBP, 0x0);
	u_2e90:1 = BOOL_NEGATE(u_2e00:1);
	u_2ea0:1 = INT_AND(u_2e90:1, ZF);
	u_2eb0:1 = INT_AND(u_2e00:1, u_2e80:1);
	ZF = INT_OR(u_2ea0:1, u_2eb0:1);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x100721);
	CALL(A_00100510:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_bb10:8 = INT_AND(RBP, RBP);
	SF = INT_SLESS(u_bb10:8, 0x0);
	ZF = INT_EQUAL(u_bb10:8, 0x0);
	CBRANCH(A_00100746:8, ZF);
	CF = COPY(0x0);
	OF = COPY(0x0);
	EBX = INT_XOR(EBX, EBX);
	RBX = INT_ZEXT(EBX);
	SF = INT_SLESS(EBX, 0x0);
	ZF = INT_EQUAL(EBX, 0x0);
	u_7e0:8 = INT_MULT(RAX, 0x1);
	u_800:8 = INT_ADD(RAX, u_7e0:8);
	RDX = COPY(R15);
	RSI = COPY(R14);
	EDI = COPY(R13D);
	RDI = INT_ZEXT(EDI);
	u_660:8 = INT_MULT(RBX, 0x8);
	u_680:8 = INT_ADD(R12, u_660:8);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x10073d);
	u_1f70:8 = LOAD(0x131, u_680:8);
	CALLIND(u_1f70:8);
	CF = INT_CARRY(RBX, 0x1);
	OF = INT_SCARRY(RBX, 0x1);
	RBX = INT_ADD(RBX, 0x1);
	SF = INT_SLESS(RBX, 0x0);
	ZF = INT_EQUAL(RBX, 0x0);
	CF = INT_LESS(RBP, RBX);
	OF = INT_SBORROW(RBP, RBX);
	u_5960:8 = INT_SUB(RBP, RBX);
	SF = INT_SLESS(u_5960:8, 0x0);
	ZF = INT_EQUAL(u_5960:8, 0x0);
	u_2080:1 = BOOL_NEGATE(ZF);
	CBRANCH(A_00100730:8, u_2080:1);
	CF = INT_CARRY(RSP, 0x8);
	OF = INT_SCARRY(RSP, 0x8);
	RSP = INT_ADD(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	RBX = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R12 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R13 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R14 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R15 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	CF = INT_LESS(RSP, 0x8);
	OF = INT_SBORROW(RSP, 0x8);
	RSP = INT_SUB(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	CF = INT_CARRY(RSP, 0x8);
	OF = INT_SCARRY(RSP, 0x8);
	RSP = INT_ADD(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);

undefined deregister_tm_clones():
	RDI = COPY(0x301010);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RAX = COPY(0x301010);
	CF = INT_LESS(RAX, RDI);
	OF = INT_SBORROW(RAX, RDI);
	u_5960:8 = INT_SUB(RAX, RDI);
	SF = INT_SLESS(u_5960:8, 0x0);
	ZF = INT_EQUAL(u_5960:8, 0x0);
	RBP = COPY(RSP);
	CBRANCH(A_001005c0:8, ZF);
	RAX = COPY(A_00300fd8:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_bb10:8 = INT_AND(RAX, RAX);
	SF = INT_SLESS(u_bb10:8, 0x0);
	ZF = INT_EQUAL(u_bb10:8, 0x0);
	CBRANCH(A_001005c0:8, ZF);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	BRANCHIND(RAX);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	RDI = COPY(0x301010);
	RSI = COPY(0x301010);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	CF = INT_LESS(RSI, RDI);
	OF = INT_SBORROW(RSI, RDI);
	RSI = INT_SUB(RSI, RDI);
	SF = INT_SLESS(RSI, 0x0);
	ZF = INT_EQUAL(RSI, 0x0);
	RBP = COPY(RSP);
	u_ac20:4 = INT_AND(0x3, 0x3f);
	u_ac30:8 = COPY(RSI);
	RSI = INT_SRIGHT(RSI, u_ac20:4);
	u_32f0:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_3300:4 = INT_SUB(u_ac20:4, 0x1);
	u_3310:8 = INT_SRIGHT(u_ac30:8, u_3300:4);
	u_3320:8 = INT_AND(u_3310:8, 0x1);
	u_3340:1 = INT_NOTEQUAL(u_3320:8, 0x0);
	u_3350:1 = BOOL_NEGATE(u_32f0:1);
	u_3360:1 = INT_AND(u_3350:1, CF);
	u_3370:1 = INT_AND(u_32f0:1, u_3340:1);
	CF = INT_OR(u_3360:1, u_3370:1);
	u_33a0:1 = INT_EQUAL(u_ac20:4, 0x1);
	u_33b0:1 = BOOL_NEGATE(u_33a0:1);
	OF = INT_AND(u_33b0:1, OF);
	u_2e00:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_2e20:1 = INT_SLESS(RSI, 0x0);
	u_2e30:1 = BOOL_NEGATE(u_2e00:1);
	u_2e40:1 = INT_AND(u_2e30:1, SF);
	u_2e50:1 = INT_AND(u_2e00:1, u_2e20:1);
	SF = INT_OR(u_2e40:1, u_2e50:1);
	u_2e80:1 = INT_EQUAL(RSI, 0x0);
	u_2e90:1 = BOOL_NEGATE(u_2e00:1);
	u_2ea0:1 = INT_AND(u_2e90:1, ZF);
	u_2eb0:1 = INT_AND(u_2e00:1, u_2e80:1);
	ZF = INT_OR(u_2ea0:1, u_2eb0:1);
	RAX = COPY(RSI);
	u_b7c0:4 = INT_AND(0x3f, 0x3f);
	u_b7d0:8 = COPY(RAX);
	RAX = INT_RIGHT(RAX, u_b7c0:4);
	u_33e0:1 = INT_NOTEQUAL(u_b7c0:4, 0x0);
	u_33f0:4 = INT_SUB(u_b7c0:4, 0x1);
	u_3400:8 = INT_RIGHT(u_b7d0:8, u_33f0:4);
	u_3410:8 = INT_AND(u_3400:8, 0x1);
	u_3430:1 = INT_NOTEQUAL(u_3410:8, 0x0);
	u_3440:1 = BOOL_NEGATE(u_33e0:1);
	u_3450:1 = INT_AND(u_3440:1, CF);
	u_3460:1 = INT_AND(u_33e0:1, u_3430:1);
	CF = INT_OR(u_3450:1, u_3460:1);
	u_3490:1 = INT_EQUAL(u_b7c0:4, 0x1);
	u_34b0:1 = INT_SLESS(u_b7d0:8, 0x0);
	u_34c0:1 = BOOL_NEGATE(u_3490:1);
	u_34d0:1 = INT_AND(u_34c0:1, OF);
	u_34e0:1 = INT_AND(u_3490:1, u_34b0:1);
	OF = INT_OR(u_34d0:1, u_34e0:1);
	u_2e00:1 = INT_NOTEQUAL(u_b7c0:4, 0x0);
	u_2e20:1 = INT_SLESS(RAX, 0x0);
	u_2e30:1 = BOOL_NEGATE(u_2e00:1);
	u_2e40:1 = INT_AND(u_2e30:1, SF);
	u_2e50:1 = INT_AND(u_2e00:1, u_2e20:1);
	SF = INT_OR(u_2e40:1, u_2e50:1);
	u_2e80:1 = INT_EQUAL(RAX, 0x0);
	u_2e90:1 = BOOL_NEGATE(u_2e00:1);
	u_2ea0:1 = INT_AND(u_2e90:1, ZF);
	u_2eb0:1 = INT_AND(u_2e00:1, u_2e80:1);
	ZF = INT_OR(u_2ea0:1, u_2eb0:1);
	CF = INT_CARRY(RSI, RAX);
	OF = INT_SCARRY(RSI, RAX);
	RSI = INT_ADD(RSI, RAX);
	SF = INT_SLESS(RSI, 0x0);
	ZF = INT_EQUAL(RSI, 0x0);
	u_1f90:1 = COPY(0x1);
	u_aba0:8 = INT_AND(RSI, 0x1);
	CF = INT_NOTEQUAL(u_aba0:8, 0x0);
	OF = COPY(0x0);
	RSI = INT_SRIGHT(RSI, 0x1);
	SF = INT_SLESS(RSI, 0x0);
	ZF = INT_EQUAL(RSI, 0x0);
	CBRANCH(A_00100610:8, ZF);
	RAX = COPY(A_00300ff0:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_bb10:8 = INT_AND(RAX, RAX);
	SF = INT_SLESS(u_bb10:8, 0x0);
	ZF = INT_EQUAL(u_bb10:8, 0x0);
	CBRANCH(A_00100610:8, ZF);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	BRANCHIND(RAX);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	CF = INT_LESS(A_00301010:1, 0x0);
	OF = INT_SBORROW(A_00301010:1, 0x0);
	u_5820:1 = INT_SUB(A_00301010:1, 0x0);
	SF = INT_SLESS(u_5820:1, 0x0);
	ZF = INT_EQUAL(u_5820:1, 0x0);
	u_2080:1 = BOOL_NEGATE(ZF);
	CBRANCH(A_00100658:8, u_2080:1);
	CF = INT_LESS(A_00300ff8:8, 0x0);
	OF = INT_SBORROW(A_00300ff8:8, 0x0);
	u_58e0:8 = INT_SUB(A_00300ff8:8, 0x0);
	SF = INT_SLESS(u_58e0:8, 0x0);
	ZF = INT_EQUAL(u_58e0:8, 0x0);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(RSP);
	CBRANCH(A_00100643:8, ZF);
	RDI = COPY(A_00301008:8);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x100643);
	CALL(A_00100550:8);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x100648);
	CALL(A_00100590:8);
	A_00301010:1 = COPY(0x1);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(RSP);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	BRANCH(A_001005d0:8);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(RSP);
	CF = INT_LESS(RSP, 0x40);
	OF = INT_SBORROW(RSP, 0x40);
	RSP = INT_SUB(RSP, 0x40);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	u_960:8 = INT_ADD(FS_OFFSET, 0x28);
	u_1f70:8 = LOAD(0x131, u_960:8);
	RAX = COPY(u_1f70:8);
	u_620:8 = INT_ADD(RBP, 0xfffffffffffffff8);
	u_1f70:8 = COPY(RAX);
	STORE(0x131, u_620:8, u_1f70:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	EAX = INT_XOR(EAX, EAX);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(EAX, 0x0);
	ZF = INT_EQUAL(EAX, 0x0);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd0);
	u_1f60:4 = COPY(0x0);
	STORE(0x131, u_620:8, u_1f60:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f60:4 = COPY(0x1);
	STORE(0x131, u_620:8, u_1f60:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd8);
	u_1f60:4 = COPY(0x5);
	STORE(0x131, u_620:8, u_1f60:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f60:4 = COPY(0x1);
	STORE(0x131, u_620:8, u_1f60:4);
	BRANCH(A_001006c6:8);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd0);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EDX = COPY(u_1f50:4);
	RDX = INT_ZEXT(EDX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	CF = INT_CARRY(EAX, EDX);
	OF = INT_SCARRY(EAX, EDX);
	EAX = INT_ADD(EAX, EDX);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(EAX, 0x0);
	ZF = INT_EQUAL(EAX, 0x0);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffdc);
	u_1f50:4 = COPY(EAX);
	STORE(0x131, u_620:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd0);
	u_1f50:4 = COPY(EAX);
	STORE(0x131, u_620:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffdc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f50:4 = COPY(EAX);
	STORE(0x131, u_620:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	RAX = INT_SEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffdc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EDX = COPY(u_1f50:4);
	RDX = INT_ZEXT(EDX);
	u_6f0:8 = INT_ADD(0xffffffffffffffe0, RBP);
	u_700:8 = INT_MULT(RAX, 0x4);
	u_720:8 = INT_ADD(u_6f0:8, u_700:8);
	u_1f50:4 = COPY(EDX);
	STORE(0x131, u_720:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f60:4 = LOAD(0x131, u_620:8);
	CF = INT_CARRY(u_1f60:4, 0x1);
	u_1f60:4 = LOAD(0x131, u_620:8);
	OF = INT_SCARRY(u_1f60:4, 0x1);
	u_1f60:4 = LOAD(0x131, u_620:8);
	u_1f60:4 = INT_ADD(u_1f60:4, 0x1);
	STORE(0x131, u_620:8, u_1f60:4);
	u_1f60:4 = LOAD(0x131, u_620:8);
	SF = INT_SLESS(u_1f60:4, 0x0);
	u_1f60:4 = LOAD(0x131, u_620:8);
	ZF = INT_EQUAL(u_1f60:4, 0x0);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd8);
	u_1f50:4 = LOAD(0x131, u_620:8);
	CF = INT_LESS(EAX, u_1f50:4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	OF = INT_SBORROW(EAX, u_1f50:4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	u_59c0:4 = INT_SUB(EAX, u_1f50:4);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(u_59c0:4, 0x0);
	ZF = INT_EQUAL(u_59c0:4, 0x0);
	u_2160:1 = INT_NOTEQUAL(OF, SF);
	u_2180:1 = BOOL_OR(ZF, u_2160:1);
	CBRANCH(A_0010069f:8, u_2180:1);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd8);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	CF = INT_LESS(EAX, 0x1);
	OF = INT_SBORROW(EAX, 0x1);
	EAX = INT_SUB(EAX, 0x1);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(EAX, 0x0);
	ZF = INT_EQUAL(EAX, 0x0);
	RAX = INT_SEXT(EAX);
	u_6f0:8 = INT_ADD(0xffffffffffffffe0, RBP);
	u_700:8 = INT_MULT(RAX, 0x4);
	u_720:8 = INT_ADD(u_6f0:8, u_700:8);
	u_1f50:4 = LOAD(0x131, u_720:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xfffffffffffffff8);
	u_1f70:8 = LOAD(0x131, u_620:8);
	RCX = COPY(u_1f70:8);
	u_960:8 = INT_ADD(FS_OFFSET, 0x28);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_1f70:8 = LOAD(0x131, u_960:8);
	RCX = INT_XOR(RCX, u_1f70:8);
	SF = INT_SLESS(RCX, 0x0);
	ZF = INT_EQUAL(RCX, 0x0);
	CBRANCH(A_001006ee:8, ZF);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x1006ee);
	CALL(A_00100540:8);
	RSP = COPY(RBP);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	u_2480:8 = COPY(R15);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	u_2480:8 = COPY(R14);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R15 = COPY(RDX);
	u_2480:8 = COPY(R13);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	u_2480:8 = COPY(R12);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R12 = COPY(0x300db8);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(0x300dc0);
	u_2480:8 = COPY(RBX);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R13D = COPY(EDI);
	R13 = INT_ZEXT(R13D);
	R14 = COPY(RSI);
	CF = INT_LESS(RBP, R12);
	OF = INT_SBORROW(RBP, R12);
	RBP = INT_SUB(RBP, R12);
	SF = INT_SLESS(RBP, 0x0);
	ZF = INT_EQUAL(RBP, 0x0);
	CF = INT_LESS(RSP, 0x8);
	OF = INT_SBORROW(RSP, 0x8);
	RSP = INT_SUB(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	u_ac20:4 = INT_AND(0x3, 0x3f);
	u_ac30:8 = COPY(RBP);
	RBP = INT_SRIGHT(RBP, u_ac20:4);
	u_32f0:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_3300:4 = INT_SUB(u_ac20:4, 0x1);
	u_3310:8 = INT_SRIGHT(u_ac30:8, u_3300:4);
	u_3320:8 = INT_AND(u_3310:8, 0x1);
	u_3340:1 = INT_NOTEQUAL(u_3320:8, 0x0);
	u_3350:1 = BOOL_NEGATE(u_32f0:1);
	u_3360:1 = INT_AND(u_3350:1, CF);
	u_3370:1 = INT_AND(u_32f0:1, u_3340:1);
	CF = INT_OR(u_3360:1, u_3370:1);
	u_33a0:1 = INT_EQUAL(u_ac20:4, 0x1);
	u_33b0:1 = BOOL_NEGATE(u_33a0:1);
	OF = INT_AND(u_33b0:1, OF);
	u_2e00:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_2e20:1 = INT_SLESS(RBP, 0x0);
	u_2e30:1 = BOOL_NEGATE(u_2e00:1);
	u_2e40:1 = INT_AND(u_2e30:1, SF);
	u_2e50:1 = INT_AND(u_2e00:1, u_2e20:1);
	SF = INT_OR(u_2e40:1, u_2e50:1);
	u_2e80:1 = INT_EQUAL(RBP, 0x0);
	u_2e90:1 = BOOL_NEGATE(u_2e00:1);
	u_2ea0:1 = INT_AND(u_2e90:1, ZF);
	u_2eb0:1 = INT_AND(u_2e00:1, u_2e80:1);
	ZF = INT_OR(u_2ea0:1, u_2eb0:1);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x100721);
	CALL(A_00100510:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_bb10:8 = INT_AND(RBP, RBP);
	SF = INT_SLESS(u_bb10:8, 0x0);
	ZF = INT_EQUAL(u_bb10:8, 0x0);
	CBRANCH(A_00100746:8, ZF);
	CF = COPY(0x0);
	OF = COPY(0x0);
	EBX = INT_XOR(EBX, EBX);
	RBX = INT_ZEXT(EBX);
	SF = INT_SLESS(EBX, 0x0);
	ZF = INT_EQUAL(EBX, 0x0);
	u_7e0:8 = INT_MULT(RAX, 0x1);
	u_800:8 = INT_ADD(RAX, u_7e0:8);
	RDX = COPY(R15);
	RSI = COPY(R14);
	EDI = COPY(R13D);
	RDI = INT_ZEXT(EDI);
	u_660:8 = INT_MULT(RBX, 0x8);
	u_680:8 = INT_ADD(R12, u_660:8);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x10073d);
	u_1f70:8 = LOAD(0x131, u_680:8);
	CALLIND(u_1f70:8);
	CF = INT_CARRY(RBX, 0x1);
	OF = INT_SCARRY(RBX, 0x1);
	RBX = INT_ADD(RBX, 0x1);
	SF = INT_SLESS(RBX, 0x0);
	ZF = INT_EQUAL(RBX, 0x0);
	CF = INT_LESS(RBP, RBX);
	OF = INT_SBORROW(RBP, RBX);
	u_5960:8 = INT_SUB(RBP, RBX);
	SF = INT_SLESS(u_5960:8, 0x0);
	ZF = INT_EQUAL(u_5960:8, 0x0);
	u_2080:1 = BOOL_NEGATE(ZF);
	CBRANCH(A_00100730:8, u_2080:1);
	CF = INT_CARRY(RSP, 0x8);
	OF = INT_SCARRY(RSP, 0x8);
	RSP = INT_ADD(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	RBX = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R12 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R13 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R14 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R15 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	CF = INT_LESS(RSP, 0x8);
	OF = INT_SBORROW(RSP, 0x8);
	RSP = INT_SUB(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	CF = INT_CARRY(RSP, 0x8);
	OF = INT_SCARRY(RSP, 0x8);
	RSP = INT_ADD(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);

undefined register_tm_clones():
	RDI = COPY(0x301010);
	RSI = COPY(0x301010);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	CF = INT_LESS(RSI, RDI);
	OF = INT_SBORROW(RSI, RDI);
	RSI = INT_SUB(RSI, RDI);
	SF = INT_SLESS(RSI, 0x0);
	ZF = INT_EQUAL(RSI, 0x0);
	RBP = COPY(RSP);
	u_ac20:4 = INT_AND(0x3, 0x3f);
	u_ac30:8 = COPY(RSI);
	RSI = INT_SRIGHT(RSI, u_ac20:4);
	u_32f0:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_3300:4 = INT_SUB(u_ac20:4, 0x1);
	u_3310:8 = INT_SRIGHT(u_ac30:8, u_3300:4);
	u_3320:8 = INT_AND(u_3310:8, 0x1);
	u_3340:1 = INT_NOTEQUAL(u_3320:8, 0x0);
	u_3350:1 = BOOL_NEGATE(u_32f0:1);
	u_3360:1 = INT_AND(u_3350:1, CF);
	u_3370:1 = INT_AND(u_32f0:1, u_3340:1);
	CF = INT_OR(u_3360:1, u_3370:1);
	u_33a0:1 = INT_EQUAL(u_ac20:4, 0x1);
	u_33b0:1 = BOOL_NEGATE(u_33a0:1);
	OF = INT_AND(u_33b0:1, OF);
	u_2e00:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_2e20:1 = INT_SLESS(RSI, 0x0);
	u_2e30:1 = BOOL_NEGATE(u_2e00:1);
	u_2e40:1 = INT_AND(u_2e30:1, SF);
	u_2e50:1 = INT_AND(u_2e00:1, u_2e20:1);
	SF = INT_OR(u_2e40:1, u_2e50:1);
	u_2e80:1 = INT_EQUAL(RSI, 0x0);
	u_2e90:1 = BOOL_NEGATE(u_2e00:1);
	u_2ea0:1 = INT_AND(u_2e90:1, ZF);
	u_2eb0:1 = INT_AND(u_2e00:1, u_2e80:1);
	ZF = INT_OR(u_2ea0:1, u_2eb0:1);
	RAX = COPY(RSI);
	u_b7c0:4 = INT_AND(0x3f, 0x3f);
	u_b7d0:8 = COPY(RAX);
	RAX = INT_RIGHT(RAX, u_b7c0:4);
	u_33e0:1 = INT_NOTEQUAL(u_b7c0:4, 0x0);
	u_33f0:4 = INT_SUB(u_b7c0:4, 0x1);
	u_3400:8 = INT_RIGHT(u_b7d0:8, u_33f0:4);
	u_3410:8 = INT_AND(u_3400:8, 0x1);
	u_3430:1 = INT_NOTEQUAL(u_3410:8, 0x0);
	u_3440:1 = BOOL_NEGATE(u_33e0:1);
	u_3450:1 = INT_AND(u_3440:1, CF);
	u_3460:1 = INT_AND(u_33e0:1, u_3430:1);
	CF = INT_OR(u_3450:1, u_3460:1);
	u_3490:1 = INT_EQUAL(u_b7c0:4, 0x1);
	u_34b0:1 = INT_SLESS(u_b7d0:8, 0x0);
	u_34c0:1 = BOOL_NEGATE(u_3490:1);
	u_34d0:1 = INT_AND(u_34c0:1, OF);
	u_34e0:1 = INT_AND(u_3490:1, u_34b0:1);
	OF = INT_OR(u_34d0:1, u_34e0:1);
	u_2e00:1 = INT_NOTEQUAL(u_b7c0:4, 0x0);
	u_2e20:1 = INT_SLESS(RAX, 0x0);
	u_2e30:1 = BOOL_NEGATE(u_2e00:1);
	u_2e40:1 = INT_AND(u_2e30:1, SF);
	u_2e50:1 = INT_AND(u_2e00:1, u_2e20:1);
	SF = INT_OR(u_2e40:1, u_2e50:1);
	u_2e80:1 = INT_EQUAL(RAX, 0x0);
	u_2e90:1 = BOOL_NEGATE(u_2e00:1);
	u_2ea0:1 = INT_AND(u_2e90:1, ZF);
	u_2eb0:1 = INT_AND(u_2e00:1, u_2e80:1);
	ZF = INT_OR(u_2ea0:1, u_2eb0:1);
	CF = INT_CARRY(RSI, RAX);
	OF = INT_SCARRY(RSI, RAX);
	RSI = INT_ADD(RSI, RAX);
	SF = INT_SLESS(RSI, 0x0);
	ZF = INT_EQUAL(RSI, 0x0);
	u_1f90:1 = COPY(0x1);
	u_aba0:8 = INT_AND(RSI, 0x1);
	CF = INT_NOTEQUAL(u_aba0:8, 0x0);
	OF = COPY(0x0);
	RSI = INT_SRIGHT(RSI, 0x1);
	SF = INT_SLESS(RSI, 0x0);
	ZF = INT_EQUAL(RSI, 0x0);
	CBRANCH(A_00100610:8, ZF);
	RAX = COPY(A_00300ff0:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_bb10:8 = INT_AND(RAX, RAX);
	SF = INT_SLESS(u_bb10:8, 0x0);
	ZF = INT_EQUAL(u_bb10:8, 0x0);
	CBRANCH(A_00100610:8, ZF);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	BRANCHIND(RAX);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	CF = INT_LESS(A_00301010:1, 0x0);
	OF = INT_SBORROW(A_00301010:1, 0x0);
	u_5820:1 = INT_SUB(A_00301010:1, 0x0);
	SF = INT_SLESS(u_5820:1, 0x0);
	ZF = INT_EQUAL(u_5820:1, 0x0);
	u_2080:1 = BOOL_NEGATE(ZF);
	CBRANCH(A_00100658:8, u_2080:1);
	CF = INT_LESS(A_00300ff8:8, 0x0);
	OF = INT_SBORROW(A_00300ff8:8, 0x0);
	u_58e0:8 = INT_SUB(A_00300ff8:8, 0x0);
	SF = INT_SLESS(u_58e0:8, 0x0);
	ZF = INT_EQUAL(u_58e0:8, 0x0);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(RSP);
	CBRANCH(A_00100643:8, ZF);
	RDI = COPY(A_00301008:8);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x100643);
	CALL(A_00100550:8);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x100648);
	CALL(A_00100590:8);
	A_00301010:1 = COPY(0x1);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(RSP);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	BRANCH(A_001005d0:8);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(RSP);
	CF = INT_LESS(RSP, 0x40);
	OF = INT_SBORROW(RSP, 0x40);
	RSP = INT_SUB(RSP, 0x40);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	u_960:8 = INT_ADD(FS_OFFSET, 0x28);
	u_1f70:8 = LOAD(0x131, u_960:8);
	RAX = COPY(u_1f70:8);
	u_620:8 = INT_ADD(RBP, 0xfffffffffffffff8);
	u_1f70:8 = COPY(RAX);
	STORE(0x131, u_620:8, u_1f70:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	EAX = INT_XOR(EAX, EAX);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(EAX, 0x0);
	ZF = INT_EQUAL(EAX, 0x0);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd0);
	u_1f60:4 = COPY(0x0);
	STORE(0x131, u_620:8, u_1f60:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f60:4 = COPY(0x1);
	STORE(0x131, u_620:8, u_1f60:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd8);
	u_1f60:4 = COPY(0x5);
	STORE(0x131, u_620:8, u_1f60:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f60:4 = COPY(0x1);
	STORE(0x131, u_620:8, u_1f60:4);
	BRANCH(A_001006c6:8);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd0);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EDX = COPY(u_1f50:4);
	RDX = INT_ZEXT(EDX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	CF = INT_CARRY(EAX, EDX);
	OF = INT_SCARRY(EAX, EDX);
	EAX = INT_ADD(EAX, EDX);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(EAX, 0x0);
	ZF = INT_EQUAL(EAX, 0x0);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffdc);
	u_1f50:4 = COPY(EAX);
	STORE(0x131, u_620:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd0);
	u_1f50:4 = COPY(EAX);
	STORE(0x131, u_620:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffdc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f50:4 = COPY(EAX);
	STORE(0x131, u_620:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	RAX = INT_SEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffdc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EDX = COPY(u_1f50:4);
	RDX = INT_ZEXT(EDX);
	u_6f0:8 = INT_ADD(0xffffffffffffffe0, RBP);
	u_700:8 = INT_MULT(RAX, 0x4);
	u_720:8 = INT_ADD(u_6f0:8, u_700:8);
	u_1f50:4 = COPY(EDX);
	STORE(0x131, u_720:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f60:4 = LOAD(0x131, u_620:8);
	CF = INT_CARRY(u_1f60:4, 0x1);
	u_1f60:4 = LOAD(0x131, u_620:8);
	OF = INT_SCARRY(u_1f60:4, 0x1);
	u_1f60:4 = LOAD(0x131, u_620:8);
	u_1f60:4 = INT_ADD(u_1f60:4, 0x1);
	STORE(0x131, u_620:8, u_1f60:4);
	u_1f60:4 = LOAD(0x131, u_620:8);
	SF = INT_SLESS(u_1f60:4, 0x0);
	u_1f60:4 = LOAD(0x131, u_620:8);
	ZF = INT_EQUAL(u_1f60:4, 0x0);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd8);
	u_1f50:4 = LOAD(0x131, u_620:8);
	CF = INT_LESS(EAX, u_1f50:4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	OF = INT_SBORROW(EAX, u_1f50:4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	u_59c0:4 = INT_SUB(EAX, u_1f50:4);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(u_59c0:4, 0x0);
	ZF = INT_EQUAL(u_59c0:4, 0x0);
	u_2160:1 = INT_NOTEQUAL(OF, SF);
	u_2180:1 = BOOL_OR(ZF, u_2160:1);
	CBRANCH(A_0010069f:8, u_2180:1);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd8);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	CF = INT_LESS(EAX, 0x1);
	OF = INT_SBORROW(EAX, 0x1);
	EAX = INT_SUB(EAX, 0x1);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(EAX, 0x0);
	ZF = INT_EQUAL(EAX, 0x0);
	RAX = INT_SEXT(EAX);
	u_6f0:8 = INT_ADD(0xffffffffffffffe0, RBP);
	u_700:8 = INT_MULT(RAX, 0x4);
	u_720:8 = INT_ADD(u_6f0:8, u_700:8);
	u_1f50:4 = LOAD(0x131, u_720:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xfffffffffffffff8);
	u_1f70:8 = LOAD(0x131, u_620:8);
	RCX = COPY(u_1f70:8);
	u_960:8 = INT_ADD(FS_OFFSET, 0x28);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_1f70:8 = LOAD(0x131, u_960:8);
	RCX = INT_XOR(RCX, u_1f70:8);
	SF = INT_SLESS(RCX, 0x0);
	ZF = INT_EQUAL(RCX, 0x0);
	CBRANCH(A_001006ee:8, ZF);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x1006ee);
	CALL(A_00100540:8);
	RSP = COPY(RBP);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	u_2480:8 = COPY(R15);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	u_2480:8 = COPY(R14);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R15 = COPY(RDX);
	u_2480:8 = COPY(R13);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	u_2480:8 = COPY(R12);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R12 = COPY(0x300db8);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(0x300dc0);
	u_2480:8 = COPY(RBX);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R13D = COPY(EDI);
	R13 = INT_ZEXT(R13D);
	R14 = COPY(RSI);
	CF = INT_LESS(RBP, R12);
	OF = INT_SBORROW(RBP, R12);
	RBP = INT_SUB(RBP, R12);
	SF = INT_SLESS(RBP, 0x0);
	ZF = INT_EQUAL(RBP, 0x0);
	CF = INT_LESS(RSP, 0x8);
	OF = INT_SBORROW(RSP, 0x8);
	RSP = INT_SUB(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	u_ac20:4 = INT_AND(0x3, 0x3f);
	u_ac30:8 = COPY(RBP);
	RBP = INT_SRIGHT(RBP, u_ac20:4);
	u_32f0:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_3300:4 = INT_SUB(u_ac20:4, 0x1);
	u_3310:8 = INT_SRIGHT(u_ac30:8, u_3300:4);
	u_3320:8 = INT_AND(u_3310:8, 0x1);
	u_3340:1 = INT_NOTEQUAL(u_3320:8, 0x0);
	u_3350:1 = BOOL_NEGATE(u_32f0:1);
	u_3360:1 = INT_AND(u_3350:1, CF);
	u_3370:1 = INT_AND(u_32f0:1, u_3340:1);
	CF = INT_OR(u_3360:1, u_3370:1);
	u_33a0:1 = INT_EQUAL(u_ac20:4, 0x1);
	u_33b0:1 = BOOL_NEGATE(u_33a0:1);
	OF = INT_AND(u_33b0:1, OF);
	u_2e00:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_2e20:1 = INT_SLESS(RBP, 0x0);
	u_2e30:1 = BOOL_NEGATE(u_2e00:1);
	u_2e40:1 = INT_AND(u_2e30:1, SF);
	u_2e50:1 = INT_AND(u_2e00:1, u_2e20:1);
	SF = INT_OR(u_2e40:1, u_2e50:1);
	u_2e80:1 = INT_EQUAL(RBP, 0x0);
	u_2e90:1 = BOOL_NEGATE(u_2e00:1);
	u_2ea0:1 = INT_AND(u_2e90:1, ZF);
	u_2eb0:1 = INT_AND(u_2e00:1, u_2e80:1);
	ZF = INT_OR(u_2ea0:1, u_2eb0:1);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x100721);
	CALL(A_00100510:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_bb10:8 = INT_AND(RBP, RBP);
	SF = INT_SLESS(u_bb10:8, 0x0);
	ZF = INT_EQUAL(u_bb10:8, 0x0);
	CBRANCH(A_00100746:8, ZF);
	CF = COPY(0x0);
	OF = COPY(0x0);
	EBX = INT_XOR(EBX, EBX);
	RBX = INT_ZEXT(EBX);
	SF = INT_SLESS(EBX, 0x0);
	ZF = INT_EQUAL(EBX, 0x0);
	u_7e0:8 = INT_MULT(RAX, 0x1);
	u_800:8 = INT_ADD(RAX, u_7e0:8);
	RDX = COPY(R15);
	RSI = COPY(R14);
	EDI = COPY(R13D);
	RDI = INT_ZEXT(EDI);
	u_660:8 = INT_MULT(RBX, 0x8);
	u_680:8 = INT_ADD(R12, u_660:8);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x10073d);
	u_1f70:8 = LOAD(0x131, u_680:8);
	CALLIND(u_1f70:8);
	CF = INT_CARRY(RBX, 0x1);
	OF = INT_SCARRY(RBX, 0x1);
	RBX = INT_ADD(RBX, 0x1);
	SF = INT_SLESS(RBX, 0x0);
	ZF = INT_EQUAL(RBX, 0x0);
	CF = INT_LESS(RBP, RBX);
	OF = INT_SBORROW(RBP, RBX);
	u_5960:8 = INT_SUB(RBP, RBX);
	SF = INT_SLESS(u_5960:8, 0x0);
	ZF = INT_EQUAL(u_5960:8, 0x0);
	u_2080:1 = BOOL_NEGATE(ZF);
	CBRANCH(A_00100730:8, u_2080:1);
	CF = INT_CARRY(RSP, 0x8);
	OF = INT_SCARRY(RSP, 0x8);
	RSP = INT_ADD(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	RBX = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R12 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R13 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R14 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R15 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	CF = INT_LESS(RSP, 0x8);
	OF = INT_SBORROW(RSP, 0x8);
	RSP = INT_SUB(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	CF = INT_CARRY(RSP, 0x8);
	OF = INT_SCARRY(RSP, 0x8);
	RSP = INT_ADD(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);

undefined __do_global_dtors_aux():
	CF = INT_LESS(A_00301010:1, 0x0);
	OF = INT_SBORROW(A_00301010:1, 0x0);
	u_5820:1 = INT_SUB(A_00301010:1, 0x0);
	SF = INT_SLESS(u_5820:1, 0x0);
	ZF = INT_EQUAL(u_5820:1, 0x0);
	u_2080:1 = BOOL_NEGATE(ZF);
	CBRANCH(A_00100658:8, u_2080:1);
	CF = INT_LESS(A_00300ff8:8, 0x0);
	OF = INT_SBORROW(A_00300ff8:8, 0x0);
	u_58e0:8 = INT_SUB(A_00300ff8:8, 0x0);
	SF = INT_SLESS(u_58e0:8, 0x0);
	ZF = INT_EQUAL(u_58e0:8, 0x0);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(RSP);
	CBRANCH(A_00100643:8, ZF);
	RDI = COPY(A_00301008:8);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x100643);
	CALL(A_00100550:8);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x100648);
	CALL(A_00100590:8);
	A_00301010:1 = COPY(0x1);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(RSP);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	BRANCH(A_001005d0:8);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(RSP);
	CF = INT_LESS(RSP, 0x40);
	OF = INT_SBORROW(RSP, 0x40);
	RSP = INT_SUB(RSP, 0x40);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	u_960:8 = INT_ADD(FS_OFFSET, 0x28);
	u_1f70:8 = LOAD(0x131, u_960:8);
	RAX = COPY(u_1f70:8);
	u_620:8 = INT_ADD(RBP, 0xfffffffffffffff8);
	u_1f70:8 = COPY(RAX);
	STORE(0x131, u_620:8, u_1f70:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	EAX = INT_XOR(EAX, EAX);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(EAX, 0x0);
	ZF = INT_EQUAL(EAX, 0x0);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd0);
	u_1f60:4 = COPY(0x0);
	STORE(0x131, u_620:8, u_1f60:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f60:4 = COPY(0x1);
	STORE(0x131, u_620:8, u_1f60:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd8);
	u_1f60:4 = COPY(0x5);
	STORE(0x131, u_620:8, u_1f60:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f60:4 = COPY(0x1);
	STORE(0x131, u_620:8, u_1f60:4);
	BRANCH(A_001006c6:8);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd0);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EDX = COPY(u_1f50:4);
	RDX = INT_ZEXT(EDX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	CF = INT_CARRY(EAX, EDX);
	OF = INT_SCARRY(EAX, EDX);
	EAX = INT_ADD(EAX, EDX);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(EAX, 0x0);
	ZF = INT_EQUAL(EAX, 0x0);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffdc);
	u_1f50:4 = COPY(EAX);
	STORE(0x131, u_620:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd0);
	u_1f50:4 = COPY(EAX);
	STORE(0x131, u_620:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffdc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f50:4 = COPY(EAX);
	STORE(0x131, u_620:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	RAX = INT_SEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffdc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EDX = COPY(u_1f50:4);
	RDX = INT_ZEXT(EDX);
	u_6f0:8 = INT_ADD(0xffffffffffffffe0, RBP);
	u_700:8 = INT_MULT(RAX, 0x4);
	u_720:8 = INT_ADD(u_6f0:8, u_700:8);
	u_1f50:4 = COPY(EDX);
	STORE(0x131, u_720:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f60:4 = LOAD(0x131, u_620:8);
	CF = INT_CARRY(u_1f60:4, 0x1);
	u_1f60:4 = LOAD(0x131, u_620:8);
	OF = INT_SCARRY(u_1f60:4, 0x1);
	u_1f60:4 = LOAD(0x131, u_620:8);
	u_1f60:4 = INT_ADD(u_1f60:4, 0x1);
	STORE(0x131, u_620:8, u_1f60:4);
	u_1f60:4 = LOAD(0x131, u_620:8);
	SF = INT_SLESS(u_1f60:4, 0x0);
	u_1f60:4 = LOAD(0x131, u_620:8);
	ZF = INT_EQUAL(u_1f60:4, 0x0);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd8);
	u_1f50:4 = LOAD(0x131, u_620:8);
	CF = INT_LESS(EAX, u_1f50:4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	OF = INT_SBORROW(EAX, u_1f50:4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	u_59c0:4 = INT_SUB(EAX, u_1f50:4);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(u_59c0:4, 0x0);
	ZF = INT_EQUAL(u_59c0:4, 0x0);
	u_2160:1 = INT_NOTEQUAL(OF, SF);
	u_2180:1 = BOOL_OR(ZF, u_2160:1);
	CBRANCH(A_0010069f:8, u_2180:1);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd8);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	CF = INT_LESS(EAX, 0x1);
	OF = INT_SBORROW(EAX, 0x1);
	EAX = INT_SUB(EAX, 0x1);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(EAX, 0x0);
	ZF = INT_EQUAL(EAX, 0x0);
	RAX = INT_SEXT(EAX);
	u_6f0:8 = INT_ADD(0xffffffffffffffe0, RBP);
	u_700:8 = INT_MULT(RAX, 0x4);
	u_720:8 = INT_ADD(u_6f0:8, u_700:8);
	u_1f50:4 = LOAD(0x131, u_720:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xfffffffffffffff8);
	u_1f70:8 = LOAD(0x131, u_620:8);
	RCX = COPY(u_1f70:8);
	u_960:8 = INT_ADD(FS_OFFSET, 0x28);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_1f70:8 = LOAD(0x131, u_960:8);
	RCX = INT_XOR(RCX, u_1f70:8);
	SF = INT_SLESS(RCX, 0x0);
	ZF = INT_EQUAL(RCX, 0x0);
	CBRANCH(A_001006ee:8, ZF);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x1006ee);
	CALL(A_00100540:8);
	RSP = COPY(RBP);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	u_2480:8 = COPY(R15);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	u_2480:8 = COPY(R14);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R15 = COPY(RDX);
	u_2480:8 = COPY(R13);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	u_2480:8 = COPY(R12);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R12 = COPY(0x300db8);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(0x300dc0);
	u_2480:8 = COPY(RBX);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R13D = COPY(EDI);
	R13 = INT_ZEXT(R13D);
	R14 = COPY(RSI);
	CF = INT_LESS(RBP, R12);
	OF = INT_SBORROW(RBP, R12);
	RBP = INT_SUB(RBP, R12);
	SF = INT_SLESS(RBP, 0x0);
	ZF = INT_EQUAL(RBP, 0x0);
	CF = INT_LESS(RSP, 0x8);
	OF = INT_SBORROW(RSP, 0x8);
	RSP = INT_SUB(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	u_ac20:4 = INT_AND(0x3, 0x3f);
	u_ac30:8 = COPY(RBP);
	RBP = INT_SRIGHT(RBP, u_ac20:4);
	u_32f0:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_3300:4 = INT_SUB(u_ac20:4, 0x1);
	u_3310:8 = INT_SRIGHT(u_ac30:8, u_3300:4);
	u_3320:8 = INT_AND(u_3310:8, 0x1);
	u_3340:1 = INT_NOTEQUAL(u_3320:8, 0x0);
	u_3350:1 = BOOL_NEGATE(u_32f0:1);
	u_3360:1 = INT_AND(u_3350:1, CF);
	u_3370:1 = INT_AND(u_32f0:1, u_3340:1);
	CF = INT_OR(u_3360:1, u_3370:1);
	u_33a0:1 = INT_EQUAL(u_ac20:4, 0x1);
	u_33b0:1 = BOOL_NEGATE(u_33a0:1);
	OF = INT_AND(u_33b0:1, OF);
	u_2e00:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_2e20:1 = INT_SLESS(RBP, 0x0);
	u_2e30:1 = BOOL_NEGATE(u_2e00:1);
	u_2e40:1 = INT_AND(u_2e30:1, SF);
	u_2e50:1 = INT_AND(u_2e00:1, u_2e20:1);
	SF = INT_OR(u_2e40:1, u_2e50:1);
	u_2e80:1 = INT_EQUAL(RBP, 0x0);
	u_2e90:1 = BOOL_NEGATE(u_2e00:1);
	u_2ea0:1 = INT_AND(u_2e90:1, ZF);
	u_2eb0:1 = INT_AND(u_2e00:1, u_2e80:1);
	ZF = INT_OR(u_2ea0:1, u_2eb0:1);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x100721);
	CALL(A_00100510:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_bb10:8 = INT_AND(RBP, RBP);
	SF = INT_SLESS(u_bb10:8, 0x0);
	ZF = INT_EQUAL(u_bb10:8, 0x0);
	CBRANCH(A_00100746:8, ZF);
	CF = COPY(0x0);
	OF = COPY(0x0);
	EBX = INT_XOR(EBX, EBX);
	RBX = INT_ZEXT(EBX);
	SF = INT_SLESS(EBX, 0x0);
	ZF = INT_EQUAL(EBX, 0x0);
	u_7e0:8 = INT_MULT(RAX, 0x1);
	u_800:8 = INT_ADD(RAX, u_7e0:8);
	RDX = COPY(R15);
	RSI = COPY(R14);
	EDI = COPY(R13D);
	RDI = INT_ZEXT(EDI);
	u_660:8 = INT_MULT(RBX, 0x8);
	u_680:8 = INT_ADD(R12, u_660:8);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x10073d);
	u_1f70:8 = LOAD(0x131, u_680:8);
	CALLIND(u_1f70:8);
	CF = INT_CARRY(RBX, 0x1);
	OF = INT_SCARRY(RBX, 0x1);
	RBX = INT_ADD(RBX, 0x1);
	SF = INT_SLESS(RBX, 0x0);
	ZF = INT_EQUAL(RBX, 0x0);
	CF = INT_LESS(RBP, RBX);
	OF = INT_SBORROW(RBP, RBX);
	u_5960:8 = INT_SUB(RBP, RBX);
	SF = INT_SLESS(u_5960:8, 0x0);
	ZF = INT_EQUAL(u_5960:8, 0x0);
	u_2080:1 = BOOL_NEGATE(ZF);
	CBRANCH(A_00100730:8, u_2080:1);
	CF = INT_CARRY(RSP, 0x8);
	OF = INT_SCARRY(RSP, 0x8);
	RSP = INT_ADD(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	RBX = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R12 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R13 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R14 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R15 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	CF = INT_LESS(RSP, 0x8);
	OF = INT_SBORROW(RSP, 0x8);
	RSP = INT_SUB(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	CF = INT_CARRY(RSP, 0x8);
	OF = INT_SCARRY(RSP, 0x8);
	RSP = INT_ADD(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);

undefined frame_dummy():
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(RSP);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	BRANCH(A_001005d0:8);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(RSP);
	CF = INT_LESS(RSP, 0x40);
	OF = INT_SBORROW(RSP, 0x40);
	RSP = INT_SUB(RSP, 0x40);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	u_960:8 = INT_ADD(FS_OFFSET, 0x28);
	u_1f70:8 = LOAD(0x131, u_960:8);
	RAX = COPY(u_1f70:8);
	u_620:8 = INT_ADD(RBP, 0xfffffffffffffff8);
	u_1f70:8 = COPY(RAX);
	STORE(0x131, u_620:8, u_1f70:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	EAX = INT_XOR(EAX, EAX);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(EAX, 0x0);
	ZF = INT_EQUAL(EAX, 0x0);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd0);
	u_1f60:4 = COPY(0x0);
	STORE(0x131, u_620:8, u_1f60:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f60:4 = COPY(0x1);
	STORE(0x131, u_620:8, u_1f60:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd8);
	u_1f60:4 = COPY(0x5);
	STORE(0x131, u_620:8, u_1f60:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f60:4 = COPY(0x1);
	STORE(0x131, u_620:8, u_1f60:4);
	BRANCH(A_001006c6:8);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd0);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EDX = COPY(u_1f50:4);
	RDX = INT_ZEXT(EDX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	CF = INT_CARRY(EAX, EDX);
	OF = INT_SCARRY(EAX, EDX);
	EAX = INT_ADD(EAX, EDX);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(EAX, 0x0);
	ZF = INT_EQUAL(EAX, 0x0);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffdc);
	u_1f50:4 = COPY(EAX);
	STORE(0x131, u_620:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd0);
	u_1f50:4 = COPY(EAX);
	STORE(0x131, u_620:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffdc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f50:4 = COPY(EAX);
	STORE(0x131, u_620:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	RAX = INT_SEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffdc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EDX = COPY(u_1f50:4);
	RDX = INT_ZEXT(EDX);
	u_6f0:8 = INT_ADD(0xffffffffffffffe0, RBP);
	u_700:8 = INT_MULT(RAX, 0x4);
	u_720:8 = INT_ADD(u_6f0:8, u_700:8);
	u_1f50:4 = COPY(EDX);
	STORE(0x131, u_720:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f60:4 = LOAD(0x131, u_620:8);
	CF = INT_CARRY(u_1f60:4, 0x1);
	u_1f60:4 = LOAD(0x131, u_620:8);
	OF = INT_SCARRY(u_1f60:4, 0x1);
	u_1f60:4 = LOAD(0x131, u_620:8);
	u_1f60:4 = INT_ADD(u_1f60:4, 0x1);
	STORE(0x131, u_620:8, u_1f60:4);
	u_1f60:4 = LOAD(0x131, u_620:8);
	SF = INT_SLESS(u_1f60:4, 0x0);
	u_1f60:4 = LOAD(0x131, u_620:8);
	ZF = INT_EQUAL(u_1f60:4, 0x0);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd8);
	u_1f50:4 = LOAD(0x131, u_620:8);
	CF = INT_LESS(EAX, u_1f50:4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	OF = INT_SBORROW(EAX, u_1f50:4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	u_59c0:4 = INT_SUB(EAX, u_1f50:4);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(u_59c0:4, 0x0);
	ZF = INT_EQUAL(u_59c0:4, 0x0);
	u_2160:1 = INT_NOTEQUAL(OF, SF);
	u_2180:1 = BOOL_OR(ZF, u_2160:1);
	CBRANCH(A_0010069f:8, u_2180:1);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd8);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	CF = INT_LESS(EAX, 0x1);
	OF = INT_SBORROW(EAX, 0x1);
	EAX = INT_SUB(EAX, 0x1);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(EAX, 0x0);
	ZF = INT_EQUAL(EAX, 0x0);
	RAX = INT_SEXT(EAX);
	u_6f0:8 = INT_ADD(0xffffffffffffffe0, RBP);
	u_700:8 = INT_MULT(RAX, 0x4);
	u_720:8 = INT_ADD(u_6f0:8, u_700:8);
	u_1f50:4 = LOAD(0x131, u_720:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xfffffffffffffff8);
	u_1f70:8 = LOAD(0x131, u_620:8);
	RCX = COPY(u_1f70:8);
	u_960:8 = INT_ADD(FS_OFFSET, 0x28);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_1f70:8 = LOAD(0x131, u_960:8);
	RCX = INT_XOR(RCX, u_1f70:8);
	SF = INT_SLESS(RCX, 0x0);
	ZF = INT_EQUAL(RCX, 0x0);
	CBRANCH(A_001006ee:8, ZF);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x1006ee);
	CALL(A_00100540:8);
	RSP = COPY(RBP);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	u_2480:8 = COPY(R15);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	u_2480:8 = COPY(R14);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R15 = COPY(RDX);
	u_2480:8 = COPY(R13);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	u_2480:8 = COPY(R12);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R12 = COPY(0x300db8);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(0x300dc0);
	u_2480:8 = COPY(RBX);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R13D = COPY(EDI);
	R13 = INT_ZEXT(R13D);
	R14 = COPY(RSI);
	CF = INT_LESS(RBP, R12);
	OF = INT_SBORROW(RBP, R12);
	RBP = INT_SUB(RBP, R12);
	SF = INT_SLESS(RBP, 0x0);
	ZF = INT_EQUAL(RBP, 0x0);
	CF = INT_LESS(RSP, 0x8);
	OF = INT_SBORROW(RSP, 0x8);
	RSP = INT_SUB(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	u_ac20:4 = INT_AND(0x3, 0x3f);
	u_ac30:8 = COPY(RBP);
	RBP = INT_SRIGHT(RBP, u_ac20:4);
	u_32f0:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_3300:4 = INT_SUB(u_ac20:4, 0x1);
	u_3310:8 = INT_SRIGHT(u_ac30:8, u_3300:4);
	u_3320:8 = INT_AND(u_3310:8, 0x1);
	u_3340:1 = INT_NOTEQUAL(u_3320:8, 0x0);
	u_3350:1 = BOOL_NEGATE(u_32f0:1);
	u_3360:1 = INT_AND(u_3350:1, CF);
	u_3370:1 = INT_AND(u_32f0:1, u_3340:1);
	CF = INT_OR(u_3360:1, u_3370:1);
	u_33a0:1 = INT_EQUAL(u_ac20:4, 0x1);
	u_33b0:1 = BOOL_NEGATE(u_33a0:1);
	OF = INT_AND(u_33b0:1, OF);
	u_2e00:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_2e20:1 = INT_SLESS(RBP, 0x0);
	u_2e30:1 = BOOL_NEGATE(u_2e00:1);
	u_2e40:1 = INT_AND(u_2e30:1, SF);
	u_2e50:1 = INT_AND(u_2e00:1, u_2e20:1);
	SF = INT_OR(u_2e40:1, u_2e50:1);
	u_2e80:1 = INT_EQUAL(RBP, 0x0);
	u_2e90:1 = BOOL_NEGATE(u_2e00:1);
	u_2ea0:1 = INT_AND(u_2e90:1, ZF);
	u_2eb0:1 = INT_AND(u_2e00:1, u_2e80:1);
	ZF = INT_OR(u_2ea0:1, u_2eb0:1);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x100721);
	CALL(A_00100510:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_bb10:8 = INT_AND(RBP, RBP);
	SF = INT_SLESS(u_bb10:8, 0x0);
	ZF = INT_EQUAL(u_bb10:8, 0x0);
	CBRANCH(A_00100746:8, ZF);
	CF = COPY(0x0);
	OF = COPY(0x0);
	EBX = INT_XOR(EBX, EBX);
	RBX = INT_ZEXT(EBX);
	SF = INT_SLESS(EBX, 0x0);
	ZF = INT_EQUAL(EBX, 0x0);
	u_7e0:8 = INT_MULT(RAX, 0x1);
	u_800:8 = INT_ADD(RAX, u_7e0:8);
	RDX = COPY(R15);
	RSI = COPY(R14);
	EDI = COPY(R13D);
	RDI = INT_ZEXT(EDI);
	u_660:8 = INT_MULT(RBX, 0x8);
	u_680:8 = INT_ADD(R12, u_660:8);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x10073d);
	u_1f70:8 = LOAD(0x131, u_680:8);
	CALLIND(u_1f70:8);
	CF = INT_CARRY(RBX, 0x1);
	OF = INT_SCARRY(RBX, 0x1);
	RBX = INT_ADD(RBX, 0x1);
	SF = INT_SLESS(RBX, 0x0);
	ZF = INT_EQUAL(RBX, 0x0);
	CF = INT_LESS(RBP, RBX);
	OF = INT_SBORROW(RBP, RBX);
	u_5960:8 = INT_SUB(RBP, RBX);
	SF = INT_SLESS(u_5960:8, 0x0);
	ZF = INT_EQUAL(u_5960:8, 0x0);
	u_2080:1 = BOOL_NEGATE(ZF);
	CBRANCH(A_00100730:8, u_2080:1);
	CF = INT_CARRY(RSP, 0x8);
	OF = INT_SCARRY(RSP, 0x8);
	RSP = INT_ADD(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	RBX = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R12 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R13 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R14 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R15 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	CF = INT_LESS(RSP, 0x8);
	OF = INT_SBORROW(RSP, 0x8);
	RSP = INT_SUB(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	CF = INT_CARRY(RSP, 0x8);
	OF = INT_SCARRY(RSP, 0x8);
	RSP = INT_ADD(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);

undefined main():
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(RSP);
	CF = INT_LESS(RSP, 0x40);
	OF = INT_SBORROW(RSP, 0x40);
	RSP = INT_SUB(RSP, 0x40);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	u_960:8 = INT_ADD(FS_OFFSET, 0x28);
	u_1f70:8 = LOAD(0x131, u_960:8);
	RAX = COPY(u_1f70:8);
	u_620:8 = INT_ADD(RBP, 0xfffffffffffffff8);
	u_1f70:8 = COPY(RAX);
	STORE(0x131, u_620:8, u_1f70:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	EAX = INT_XOR(EAX, EAX);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(EAX, 0x0);
	ZF = INT_EQUAL(EAX, 0x0);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd0);
	u_1f60:4 = COPY(0x0);
	STORE(0x131, u_620:8, u_1f60:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f60:4 = COPY(0x1);
	STORE(0x131, u_620:8, u_1f60:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd8);
	u_1f60:4 = COPY(0x5);
	STORE(0x131, u_620:8, u_1f60:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f60:4 = COPY(0x1);
	STORE(0x131, u_620:8, u_1f60:4);
	BRANCH(A_001006c6:8);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd0);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EDX = COPY(u_1f50:4);
	RDX = INT_ZEXT(EDX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	CF = INT_CARRY(EAX, EDX);
	OF = INT_SCARRY(EAX, EDX);
	EAX = INT_ADD(EAX, EDX);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(EAX, 0x0);
	ZF = INT_EQUAL(EAX, 0x0);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffdc);
	u_1f50:4 = COPY(EAX);
	STORE(0x131, u_620:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd0);
	u_1f50:4 = COPY(EAX);
	STORE(0x131, u_620:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffdc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd4);
	u_1f50:4 = COPY(EAX);
	STORE(0x131, u_620:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	RAX = INT_SEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffdc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EDX = COPY(u_1f50:4);
	RDX = INT_ZEXT(EDX);
	u_6f0:8 = INT_ADD(0xffffffffffffffe0, RBP);
	u_700:8 = INT_MULT(RAX, 0x4);
	u_720:8 = INT_ADD(u_6f0:8, u_700:8);
	u_1f50:4 = COPY(EDX);
	STORE(0x131, u_720:8, u_1f50:4);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f60:4 = LOAD(0x131, u_620:8);
	CF = INT_CARRY(u_1f60:4, 0x1);
	u_1f60:4 = LOAD(0x131, u_620:8);
	OF = INT_SCARRY(u_1f60:4, 0x1);
	u_1f60:4 = LOAD(0x131, u_620:8);
	u_1f60:4 = INT_ADD(u_1f60:4, 0x1);
	STORE(0x131, u_620:8, u_1f60:4);
	u_1f60:4 = LOAD(0x131, u_620:8);
	SF = INT_SLESS(u_1f60:4, 0x0);
	u_1f60:4 = LOAD(0x131, u_620:8);
	ZF = INT_EQUAL(u_1f60:4, 0x0);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffcc);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd8);
	u_1f50:4 = LOAD(0x131, u_620:8);
	CF = INT_LESS(EAX, u_1f50:4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	OF = INT_SBORROW(EAX, u_1f50:4);
	u_1f50:4 = LOAD(0x131, u_620:8);
	u_59c0:4 = INT_SUB(EAX, u_1f50:4);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(u_59c0:4, 0x0);
	ZF = INT_EQUAL(u_59c0:4, 0x0);
	u_2160:1 = INT_NOTEQUAL(OF, SF);
	u_2180:1 = BOOL_OR(ZF, u_2160:1);
	CBRANCH(A_0010069f:8, u_2180:1);
	u_620:8 = INT_ADD(RBP, 0xffffffffffffffd8);
	u_1f50:4 = LOAD(0x131, u_620:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	CF = INT_LESS(EAX, 0x1);
	OF = INT_SBORROW(EAX, 0x1);
	EAX = INT_SUB(EAX, 0x1);
	RAX = INT_ZEXT(EAX);
	SF = INT_SLESS(EAX, 0x0);
	ZF = INT_EQUAL(EAX, 0x0);
	RAX = INT_SEXT(EAX);
	u_6f0:8 = INT_ADD(0xffffffffffffffe0, RBP);
	u_700:8 = INT_MULT(RAX, 0x4);
	u_720:8 = INT_ADD(u_6f0:8, u_700:8);
	u_1f50:4 = LOAD(0x131, u_720:8);
	EAX = COPY(u_1f50:4);
	RAX = INT_ZEXT(EAX);
	u_620:8 = INT_ADD(RBP, 0xfffffffffffffff8);
	u_1f70:8 = LOAD(0x131, u_620:8);
	RCX = COPY(u_1f70:8);
	u_960:8 = INT_ADD(FS_OFFSET, 0x28);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_1f70:8 = LOAD(0x131, u_960:8);
	RCX = INT_XOR(RCX, u_1f70:8);
	SF = INT_SLESS(RCX, 0x0);
	ZF = INT_EQUAL(RCX, 0x0);
	CBRANCH(A_001006ee:8, ZF);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x1006ee);
	CALL(A_00100540:8);
	RSP = COPY(RBP);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	u_2480:8 = COPY(R15);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	u_2480:8 = COPY(R14);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R15 = COPY(RDX);
	u_2480:8 = COPY(R13);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	u_2480:8 = COPY(R12);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R12 = COPY(0x300db8);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(0x300dc0);
	u_2480:8 = COPY(RBX);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R13D = COPY(EDI);
	R13 = INT_ZEXT(R13D);
	R14 = COPY(RSI);
	CF = INT_LESS(RBP, R12);
	OF = INT_SBORROW(RBP, R12);
	RBP = INT_SUB(RBP, R12);
	SF = INT_SLESS(RBP, 0x0);
	ZF = INT_EQUAL(RBP, 0x0);
	CF = INT_LESS(RSP, 0x8);
	OF = INT_SBORROW(RSP, 0x8);
	RSP = INT_SUB(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	u_ac20:4 = INT_AND(0x3, 0x3f);
	u_ac30:8 = COPY(RBP);
	RBP = INT_SRIGHT(RBP, u_ac20:4);
	u_32f0:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_3300:4 = INT_SUB(u_ac20:4, 0x1);
	u_3310:8 = INT_SRIGHT(u_ac30:8, u_3300:4);
	u_3320:8 = INT_AND(u_3310:8, 0x1);
	u_3340:1 = INT_NOTEQUAL(u_3320:8, 0x0);
	u_3350:1 = BOOL_NEGATE(u_32f0:1);
	u_3360:1 = INT_AND(u_3350:1, CF);
	u_3370:1 = INT_AND(u_32f0:1, u_3340:1);
	CF = INT_OR(u_3360:1, u_3370:1);
	u_33a0:1 = INT_EQUAL(u_ac20:4, 0x1);
	u_33b0:1 = BOOL_NEGATE(u_33a0:1);
	OF = INT_AND(u_33b0:1, OF);
	u_2e00:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_2e20:1 = INT_SLESS(RBP, 0x0);
	u_2e30:1 = BOOL_NEGATE(u_2e00:1);
	u_2e40:1 = INT_AND(u_2e30:1, SF);
	u_2e50:1 = INT_AND(u_2e00:1, u_2e20:1);
	SF = INT_OR(u_2e40:1, u_2e50:1);
	u_2e80:1 = INT_EQUAL(RBP, 0x0);
	u_2e90:1 = BOOL_NEGATE(u_2e00:1);
	u_2ea0:1 = INT_AND(u_2e90:1, ZF);
	u_2eb0:1 = INT_AND(u_2e00:1, u_2e80:1);
	ZF = INT_OR(u_2ea0:1, u_2eb0:1);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x100721);
	CALL(A_00100510:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_bb10:8 = INT_AND(RBP, RBP);
	SF = INT_SLESS(u_bb10:8, 0x0);
	ZF = INT_EQUAL(u_bb10:8, 0x0);
	CBRANCH(A_00100746:8, ZF);
	CF = COPY(0x0);
	OF = COPY(0x0);
	EBX = INT_XOR(EBX, EBX);
	RBX = INT_ZEXT(EBX);
	SF = INT_SLESS(EBX, 0x0);
	ZF = INT_EQUAL(EBX, 0x0);
	u_7e0:8 = INT_MULT(RAX, 0x1);
	u_800:8 = INT_ADD(RAX, u_7e0:8);
	RDX = COPY(R15);
	RSI = COPY(R14);
	EDI = COPY(R13D);
	RDI = INT_ZEXT(EDI);
	u_660:8 = INT_MULT(RBX, 0x8);
	u_680:8 = INT_ADD(R12, u_660:8);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x10073d);
	u_1f70:8 = LOAD(0x131, u_680:8);
	CALLIND(u_1f70:8);
	CF = INT_CARRY(RBX, 0x1);
	OF = INT_SCARRY(RBX, 0x1);
	RBX = INT_ADD(RBX, 0x1);
	SF = INT_SLESS(RBX, 0x0);
	ZF = INT_EQUAL(RBX, 0x0);
	CF = INT_LESS(RBP, RBX);
	OF = INT_SBORROW(RBP, RBX);
	u_5960:8 = INT_SUB(RBP, RBX);
	SF = INT_SLESS(u_5960:8, 0x0);
	ZF = INT_EQUAL(u_5960:8, 0x0);
	u_2080:1 = BOOL_NEGATE(ZF);
	CBRANCH(A_00100730:8, u_2080:1);
	CF = INT_CARRY(RSP, 0x8);
	OF = INT_SCARRY(RSP, 0x8);
	RSP = INT_ADD(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	RBX = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R12 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R13 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R14 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R15 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	CF = INT_LESS(RSP, 0x8);
	OF = INT_SBORROW(RSP, 0x8);
	RSP = INT_SUB(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	CF = INT_CARRY(RSP, 0x8);
	OF = INT_SCARRY(RSP, 0x8);
	RSP = INT_ADD(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);

undefined __libc_csu_init():
	u_2480:8 = COPY(R15);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	u_2480:8 = COPY(R14);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R15 = COPY(RDX);
	u_2480:8 = COPY(R13);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	u_2480:8 = COPY(R12);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R12 = COPY(0x300db8);
	u_2480:8 = COPY(RBP);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	RBP = COPY(0x300dc0);
	u_2480:8 = COPY(RBX);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, u_2480:8);
	R13D = COPY(EDI);
	R13 = INT_ZEXT(R13D);
	R14 = COPY(RSI);
	CF = INT_LESS(RBP, R12);
	OF = INT_SBORROW(RBP, R12);
	RBP = INT_SUB(RBP, R12);
	SF = INT_SLESS(RBP, 0x0);
	ZF = INT_EQUAL(RBP, 0x0);
	CF = INT_LESS(RSP, 0x8);
	OF = INT_SBORROW(RSP, 0x8);
	RSP = INT_SUB(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	u_ac20:4 = INT_AND(0x3, 0x3f);
	u_ac30:8 = COPY(RBP);
	RBP = INT_SRIGHT(RBP, u_ac20:4);
	u_32f0:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_3300:4 = INT_SUB(u_ac20:4, 0x1);
	u_3310:8 = INT_SRIGHT(u_ac30:8, u_3300:4);
	u_3320:8 = INT_AND(u_3310:8, 0x1);
	u_3340:1 = INT_NOTEQUAL(u_3320:8, 0x0);
	u_3350:1 = BOOL_NEGATE(u_32f0:1);
	u_3360:1 = INT_AND(u_3350:1, CF);
	u_3370:1 = INT_AND(u_32f0:1, u_3340:1);
	CF = INT_OR(u_3360:1, u_3370:1);
	u_33a0:1 = INT_EQUAL(u_ac20:4, 0x1);
	u_33b0:1 = BOOL_NEGATE(u_33a0:1);
	OF = INT_AND(u_33b0:1, OF);
	u_2e00:1 = INT_NOTEQUAL(u_ac20:4, 0x0);
	u_2e20:1 = INT_SLESS(RBP, 0x0);
	u_2e30:1 = BOOL_NEGATE(u_2e00:1);
	u_2e40:1 = INT_AND(u_2e30:1, SF);
	u_2e50:1 = INT_AND(u_2e00:1, u_2e20:1);
	SF = INT_OR(u_2e40:1, u_2e50:1);
	u_2e80:1 = INT_EQUAL(RBP, 0x0);
	u_2e90:1 = BOOL_NEGATE(u_2e00:1);
	u_2ea0:1 = INT_AND(u_2e90:1, ZF);
	u_2eb0:1 = INT_AND(u_2e00:1, u_2e80:1);
	ZF = INT_OR(u_2ea0:1, u_2eb0:1);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x100721);
	CALL(A_00100510:8);
	CF = COPY(0x0);
	OF = COPY(0x0);
	u_bb10:8 = INT_AND(RBP, RBP);
	SF = INT_SLESS(u_bb10:8, 0x0);
	ZF = INT_EQUAL(u_bb10:8, 0x0);
	CBRANCH(A_00100746:8, ZF);
	CF = COPY(0x0);
	OF = COPY(0x0);
	EBX = INT_XOR(EBX, EBX);
	RBX = INT_ZEXT(EBX);
	SF = INT_SLESS(EBX, 0x0);
	ZF = INT_EQUAL(EBX, 0x0);
	u_7e0:8 = INT_MULT(RAX, 0x1);
	u_800:8 = INT_ADD(RAX, u_7e0:8);
	RDX = COPY(R15);
	RSI = COPY(R14);
	EDI = COPY(R13D);
	RDI = INT_ZEXT(EDI);
	u_660:8 = INT_MULT(RBX, 0x8);
	u_680:8 = INT_ADD(R12, u_660:8);
	RSP = INT_SUB(RSP, 0x8);
	STORE(0x131, RSP, 0x10073d);
	u_1f70:8 = LOAD(0x131, u_680:8);
	CALLIND(u_1f70:8);
	CF = INT_CARRY(RBX, 0x1);
	OF = INT_SCARRY(RBX, 0x1);
	RBX = INT_ADD(RBX, 0x1);
	SF = INT_SLESS(RBX, 0x0);
	ZF = INT_EQUAL(RBX, 0x0);
	CF = INT_LESS(RBP, RBX);
	OF = INT_SBORROW(RBP, RBX);
	u_5960:8 = INT_SUB(RBP, RBX);
	SF = INT_SLESS(u_5960:8, 0x0);
	ZF = INT_EQUAL(u_5960:8, 0x0);
	u_2080:1 = BOOL_NEGATE(ZF);
	CBRANCH(A_00100730:8, u_2080:1);
	CF = INT_CARRY(RSP, 0x8);
	OF = INT_SCARRY(RSP, 0x8);
	RSP = INT_ADD(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	RBX = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RBP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R12 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R13 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R14 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	R15 = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	CF = INT_LESS(RSP, 0x8);
	OF = INT_SBORROW(RSP, 0x8);
	RSP = INT_SUB(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	CF = INT_CARRY(RSP, 0x8);
	OF = INT_SCARRY(RSP, 0x8);
	RSP = INT_ADD(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);

undefined __libc_csu_fini():
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);
	CF = INT_LESS(RSP, 0x8);
	OF = INT_SBORROW(RSP, 0x8);
	RSP = INT_SUB(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	CF = INT_CARRY(RSP, 0x8);
	OF = INT_SCARRY(RSP, 0x8);
	RSP = INT_ADD(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);

undefined _fini():
	CF = INT_LESS(RSP, 0x8);
	OF = INT_SBORROW(RSP, 0x8);
	RSP = INT_SUB(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	CF = INT_CARRY(RSP, 0x8);
	OF = INT_SCARRY(RSP, 0x8);
	RSP = INT_ADD(RSP, 0x8);
	SF = INT_SLESS(RSP, 0x0);
	ZF = INT_EQUAL(RSP, 0x0);
	RIP = LOAD(0x131, RSP);
	RSP = INT_ADD(RSP, 0x8);
	RETURN(RIP);

undefined _ITM_deregisterTMCloneTable():

void __stack_chk_fail():

undefined __libc_start_main():

undefined __gmon_start__():

undefined _ITM_registerTMCloneTable():

undefined __cxa_finalize():
