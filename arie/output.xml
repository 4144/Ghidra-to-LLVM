<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<program>
	<globals>
		<register name="CF" size="1"/>
		<register name="RSP" size="8"/>
		<register name="OF" size="1"/>
		<register name="SF" size="1"/>
		<register name="ZF" size="1"/>
		<register name="RAX" size="8"/>
		<register name="RIP" size="8"/>
		<register name="EBP" size="4"/>
		<register name="RBP" size="8"/>
		<register name="R9" size="8"/>
		<register name="RDX" size="8"/>
		<register name="RSI" size="8"/>
		<register name="R8" size="8"/>
		<register name="RCX" size="8"/>
		<register name="RDI" size="8"/>
		<register name="EDI" size="4"/>
		<register name="EAX" size="4"/>
		<register name="R15" size="8"/>
		<register name="R14" size="8"/>
		<register name="R13" size="8"/>
		<register name="R12" size="8"/>
		<register name="RBX" size="8"/>
		<register name="R13D" size="4"/>
		<register name="EBX" size="4"/>
	</globals>
	<memory>
		<memory name="A_00600ff8:8" size="8"/>
		<memory name="A_00400382:8" size="8"/>
		<memory name="A_00600ff0:8" size="8"/>
		<memory name="A_004003ba:8" size="8"/>
		<memory name="A_004003f8:8" size="8"/>
		<memory name="A_00400438:8" size="8"/>
		<memory name="A_00601028:1" size="1"/>
		<memory name="A_00400460:8" size="8"/>
		<memory name="A_004003d0:8" size="8"/>
		<memory name="A_00400400:8" size="8"/>
		<memory name="A_0040049d:8" size="8"/>
		<memory name="A_004004a4:8" size="8"/>
		<memory name="A_00400480:8" size="8"/>
		<memory name="A_00400370:8" size="8"/>
		<memory name="A_00400536:8" size="8"/>
		<memory name="A_00400520:8" size="8"/>
	</memory>
	<function address="00400370" name="_init">
		<basic_blocks>
			<block_0 end="00400386" start="00400370"/>
		</basic_blocks>
		<output type="int"/>
		<input name="ctx" type="EVP_PKEY_CTX *"/>
		<instructions>
			<instruction_0>
				<address>00400370</address>
				<pcodes>
					<pcode_0>
						<output size="1" storage="register">CF</output>
						<name>INT_LESS</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_0>
					<pcode_1>
						<output size="1" storage="register">OF</output>
						<name>INT_SBORROW</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<output size="8" storage="register">RSP</output>
						<name>INT_SUB</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_2>
					<pcode_3>
						<output size="1" storage="register">SF</output>
						<name>INT_SLESS</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_3>
					<pcode_4>
						<output size="1" storage="register">ZF</output>
						<name>INT_EQUAL</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_4>
				</pcodes>
			</instruction_0>
			<instruction_1>
				<address>00400374</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RAX</output>
						<name>COPY</name>
						<input_0 size="8" storage="memory">A_00600ff8:8</input_0>
					</pcode_0>
				</pcodes>
			</instruction_1>
			<instruction_2>
				<address>0040037b</address>
				<pcodes>
					<pcode_0>
						<output size="1" storage="register">CF</output>
						<name>COPY</name>
						<input_0 size="1" storage="constant">0x0</input_0>
					</pcode_0>
					<pcode_1>
						<output size="1" storage="register">OF</output>
						<name>COPY</name>
						<input_0 size="1" storage="constant">0x0</input_0>
					</pcode_1>
					<pcode_2>
						<output size="8" storage="unique">u_bbe0:8</output>
						<name>INT_AND</name>
						<input_0 size="8" storage="register">RAX</input_0>
						<input_1 size="8" storage="register">RAX</input_1>
					</pcode_2>
					<pcode_3>
						<output size="1" storage="register">SF</output>
						<name>INT_SLESS</name>
						<input_0 size="8" storage="unique">u_bbe0:8</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_3>
					<pcode_4>
						<output size="1" storage="register">ZF</output>
						<name>INT_EQUAL</name>
						<input_0 size="8" storage="unique">u_bbe0:8</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_4>
				</pcodes>
			</instruction_2>
			<instruction_3>
				<address>0040037e</address>
				<pcodes>
					<pcode_0>
						<name>CBRANCH</name>
						<input_0 size="8" storage="memory">A_00400382:8</input_0>
						<input_1 size="1" storage="register">ZF</input_1>
					</pcode_0>
				</pcodes>
			</instruction_3>
			<instruction_4>
				<address>00400380</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RSP</output>
						<name>INT_SUB</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_0>
					<pcode_1>
						<name>STORE</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
						<input_2 size="8" storage="constant">0x400382</input_2>
					</pcode_1>
					<pcode_2>
						<name>CALLIND</name>
						<input_0 size="8" storage="register">RAX</input_0>
					</pcode_2>
				</pcodes>
			</instruction_4>
			<instruction_5>
				<address>00400382</address>
				<pcodes>
					<pcode_0>
						<output size="1" storage="register">CF</output>
						<name>INT_CARRY</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_0>
					<pcode_1>
						<output size="1" storage="register">OF</output>
						<name>INT_SCARRY</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_2>
					<pcode_3>
						<output size="1" storage="register">SF</output>
						<name>INT_SLESS</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_3>
					<pcode_4>
						<output size="1" storage="register">ZF</output>
						<name>INT_EQUAL</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_4>
				</pcodes>
			</instruction_5>
			<instruction_6>
				<address>00400386</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RIP</output>
						<name>LOAD</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<name>RETURN</name>
						<input_0 size="8" storage="register">RIP</input_0>
					</pcode_2>
				</pcodes>
			</instruction_6>
		</instructions>
	</function>
	<function address="00400390" name="_start">
		<basic_blocks>
			<block_0 end="004003b4" start="00400390"/>
			<block_1 end="004003ba" start="004003ba"/>
		</basic_blocks>
		<output type="undefined"/>
		<instructions>
			<instruction_0>
				<address>00400390</address>
				<pcodes>
					<pcode_0>
						<output size="1" storage="register">CF</output>
						<name>COPY</name>
						<input_0 size="1" storage="constant">0x0</input_0>
					</pcode_0>
					<pcode_1>
						<output size="1" storage="register">OF</output>
						<name>COPY</name>
						<input_0 size="1" storage="constant">0x0</input_0>
					</pcode_1>
					<pcode_2>
						<output size="4" storage="register">EBP</output>
						<name>INT_XOR</name>
						<input_0 size="4" storage="register">EBP</input_0>
						<input_1 size="4" storage="register">EBP</input_1>
					</pcode_2>
					<pcode_3>
						<output size="8" storage="register">RBP</output>
						<name>INT_ZEXT</name>
						<input_0 size="4" storage="register">EBP</input_0>
					</pcode_3>
					<pcode_4>
						<output size="1" storage="register">SF</output>
						<name>INT_SLESS</name>
						<input_0 size="4" storage="register">EBP</input_0>
						<input_1 size="4" storage="constant">0x0</input_1>
					</pcode_4>
					<pcode_5>
						<output size="1" storage="register">ZF</output>
						<name>INT_EQUAL</name>
						<input_0 size="4" storage="register">EBP</input_0>
						<input_1 size="4" storage="constant">0x0</input_1>
					</pcode_5>
				</pcodes>
			</instruction_0>
			<instruction_1>
				<address>00400392</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">R9</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">RDX</input_0>
					</pcode_0>
				</pcodes>
			</instruction_1>
			<instruction_2>
				<address>00400395</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RSI</output>
						<name>LOAD</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
				</pcodes>
			</instruction_2>
			<instruction_3>
				<address>00400396</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RDX</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">RSP</input_0>
					</pcode_0>
				</pcodes>
			</instruction_3>
			<instruction_4>
				<address>00400399</address>
				<pcodes>
					<pcode_0>
						<output size="1" storage="register">CF</output>
						<name>COPY</name>
						<input_0 size="1" storage="constant">0x0</input_0>
					</pcode_0>
					<pcode_1>
						<output size="1" storage="register">OF</output>
						<name>COPY</name>
						<input_0 size="1" storage="constant">0x0</input_0>
					</pcode_1>
					<pcode_2>
						<output size="8" storage="register">RSP</output>
						<name>INT_AND</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0xfffffffffffffff0</input_1>
					</pcode_2>
					<pcode_3>
						<output size="1" storage="register">SF</output>
						<name>INT_SLESS</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_3>
					<pcode_4>
						<output size="1" storage="register">ZF</output>
						<name>INT_EQUAL</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_4>
				</pcodes>
			</instruction_4>
			<instruction_5>
				<address>0040039d</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_2510:8</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">RAX</input_0>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_SUB</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<name>STORE</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
						<input_2 size="8" storage="unique">u_2510:8</input_2>
					</pcode_2>
				</pcodes>
			</instruction_5>
			<instruction_6>
				<address>0040039e</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_2510:8</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">RSP</input_0>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_SUB</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<name>STORE</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
						<input_2 size="8" storage="unique">u_2510:8</input_2>
					</pcode_2>
				</pcodes>
			</instruction_6>
			<instruction_7>
				<address>0040039f</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">R8</output>
						<name>COPY</name>
						<input_0 size="8" storage="constant">0x400550</input_0>
					</pcode_0>
				</pcodes>
			</instruction_7>
			<instruction_8>
				<address>004003a6</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RCX</output>
						<name>COPY</name>
						<input_0 size="8" storage="constant">0x4004e0</input_0>
					</pcode_0>
				</pcodes>
			</instruction_8>
			<instruction_9>
				<address>004003ad</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RDI</output>
						<name>COPY</name>
						<input_0 size="8" storage="constant">0x4004b0</input_0>
					</pcode_0>
				</pcodes>
			</instruction_9>
			<instruction_10>
				<address>004003b4</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RSP</output>
						<name>INT_SUB</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_0>
					<pcode_1>
						<name>STORE</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
						<input_2 size="8" storage="constant">0x4003ba</input_2>
					</pcode_1>
					<pcode_2>
						<name>CALLIND</name>
						<input_0 size="8" storage="memory">A_00600ff0:8</input_0>
					</pcode_2>
				</pcodes>
			</instruction_10>
			<instruction_11>
				<address>004003ba</address>
				<pcodes>
					<pcode_0>
						<name>BRANCH</name>
						<input_0 size="8" storage="memory">A_004003ba:8</input_0>
					</pcode_0>
				</pcodes>
			</instruction_11>
			<instruction_12>
				<address>004003c0</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RIP</output>
						<name>LOAD</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<name>RETURN</name>
						<input_0 size="8" storage="register">RIP</input_0>
					</pcode_2>
				</pcodes>
			</instruction_12>
		</instructions>
	</function>
	<function address="004003c0" name="_dl_relocate_static_pie">
		<basic_blocks>
			<block_0 end="004003c0" start="004003c0"/>
		</basic_blocks>
		<output type="undefined"/>
		<instructions>
			<instruction_0>
				<address>004003c0</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RIP</output>
						<name>LOAD</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<name>RETURN</name>
						<input_0 size="8" storage="register">RIP</input_0>
					</pcode_2>
				</pcodes>
			</instruction_0>
		</instructions>
	</function>
	<function address="004003d0" name="deregister_tm_clones">
		<basic_blocks>
			<block_0 end="004003f9" start="004003d0"/>
		</basic_blocks>
		<output type="undefined"/>
		<instructions>
			<instruction_0>
				<address>004003d0</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_2510:8</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">RBP</input_0>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_SUB</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<name>STORE</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
						<input_2 size="8" storage="unique">u_2510:8</input_2>
					</pcode_2>
				</pcodes>
			</instruction_0>
			<instruction_1>
				<address>004003d1</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RAX</output>
						<name>COPY</name>
						<input_0 size="8" storage="constant">0x601028</input_0>
					</pcode_0>
				</pcodes>
			</instruction_1>
			<instruction_2>
				<address>004003d6</address>
				<pcodes>
					<pcode_0>
						<output size="1" storage="register">CF</output>
						<name>INT_LESS</name>
						<input_0 size="8" storage="register">RAX</input_0>
						<input_1 size="8" storage="constant">0x601028</input_1>
					</pcode_0>
					<pcode_1>
						<output size="1" storage="register">OF</output>
						<name>INT_SBORROW</name>
						<input_0 size="8" storage="register">RAX</input_0>
						<input_1 size="8" storage="constant">0x601028</input_1>
					</pcode_1>
					<pcode_2>
						<output size="8" storage="unique">u_5890:8</output>
						<name>INT_SUB</name>
						<input_0 size="8" storage="register">RAX</input_0>
						<input_1 size="8" storage="constant">0x601028</input_1>
					</pcode_2>
					<pcode_3>
						<output size="1" storage="register">SF</output>
						<name>INT_SLESS</name>
						<input_0 size="8" storage="unique">u_5890:8</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_3>
					<pcode_4>
						<output size="1" storage="register">ZF</output>
						<name>INT_EQUAL</name>
						<input_0 size="8" storage="unique">u_5890:8</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_4>
				</pcodes>
			</instruction_2>
			<instruction_3>
				<address>004003dc</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RBP</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">RSP</input_0>
					</pcode_0>
				</pcodes>
			</instruction_3>
			<instruction_4>
				<address>004003df</address>
				<pcodes>
					<pcode_0>
						<name>CBRANCH</name>
						<input_0 size="8" storage="memory">A_004003f8:8</input_0>
						<input_1 size="1" storage="register">ZF</input_1>
					</pcode_0>
				</pcodes>
			</instruction_4>
			<instruction_5>
				<address>004003e1</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RAX</output>
						<name>COPY</name>
						<input_0 size="8" storage="constant">0x0</input_0>
					</pcode_0>
				</pcodes>
			</instruction_5>
			<instruction_6>
				<address>004003e6</address>
				<pcodes>
					<pcode_0>
						<output size="1" storage="register">CF</output>
						<name>COPY</name>
						<input_0 size="1" storage="constant">0x0</input_0>
					</pcode_0>
					<pcode_1>
						<output size="1" storage="register">OF</output>
						<name>COPY</name>
						<input_0 size="1" storage="constant">0x0</input_0>
					</pcode_1>
					<pcode_2>
						<output size="8" storage="unique">u_bbe0:8</output>
						<name>INT_AND</name>
						<input_0 size="8" storage="register">RAX</input_0>
						<input_1 size="8" storage="register">RAX</input_1>
					</pcode_2>
					<pcode_3>
						<output size="1" storage="register">SF</output>
						<name>INT_SLESS</name>
						<input_0 size="8" storage="unique">u_bbe0:8</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_3>
					<pcode_4>
						<output size="1" storage="register">ZF</output>
						<name>INT_EQUAL</name>
						<input_0 size="8" storage="unique">u_bbe0:8</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_4>
				</pcodes>
			</instruction_6>
			<instruction_7>
				<address>004003e9</address>
				<pcodes>
					<pcode_0>
						<name>CBRANCH</name>
						<input_0 size="8" storage="memory">A_004003f8:8</input_0>
						<input_1 size="1" storage="register">ZF</input_1>
					</pcode_0>
				</pcodes>
			</instruction_7>
			<instruction_8>
				<address>004003eb</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RBP</output>
						<name>LOAD</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
				</pcodes>
			</instruction_8>
			<instruction_9>
				<address>004003ec</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RDI</output>
						<name>COPY</name>
						<input_0 size="8" storage="constant">0x601028</input_0>
					</pcode_0>
				</pcodes>
			</instruction_9>
			<instruction_10>
				<address>004003f1</address>
				<pcodes>
					<pcode_0>
						<name>BRANCHIND</name>
						<input_0 size="8" storage="register">RAX</input_0>
					</pcode_0>
				</pcodes>
			</instruction_10>
			<instruction_11>
				<address>004003f8</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RBP</output>
						<name>LOAD</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
				</pcodes>
			</instruction_11>
			<instruction_12>
				<address>004003f9</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RIP</output>
						<name>LOAD</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<name>RETURN</name>
						<input_0 size="8" storage="register">RIP</input_0>
					</pcode_2>
				</pcodes>
			</instruction_12>
		</instructions>
	</function>
	<function address="00400400" name="register_tm_clones">
		<basic_blocks>
			<block_0 end="00400439" start="00400400"/>
		</basic_blocks>
		<output type="undefined"/>
		<instructions>
			<instruction_0>
				<address>00400400</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RSI</output>
						<name>COPY</name>
						<input_0 size="8" storage="constant">0x601028</input_0>
					</pcode_0>
				</pcodes>
			</instruction_0>
			<instruction_1>
				<address>00400405</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_2510:8</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">RBP</input_0>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_SUB</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<name>STORE</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
						<input_2 size="8" storage="unique">u_2510:8</input_2>
					</pcode_2>
				</pcodes>
			</instruction_1>
			<instruction_2>
				<address>00400406</address>
				<pcodes>
					<pcode_0>
						<output size="1" storage="register">CF</output>
						<name>INT_LESS</name>
						<input_0 size="8" storage="register">RSI</input_0>
						<input_1 size="8" storage="constant">0x601028</input_1>
					</pcode_0>
					<pcode_1>
						<output size="1" storage="register">OF</output>
						<name>INT_SBORROW</name>
						<input_0 size="8" storage="register">RSI</input_0>
						<input_1 size="8" storage="constant">0x601028</input_1>
					</pcode_1>
					<pcode_2>
						<output size="8" storage="register">RSI</output>
						<name>INT_SUB</name>
						<input_0 size="8" storage="register">RSI</input_0>
						<input_1 size="8" storage="constant">0x601028</input_1>
					</pcode_2>
					<pcode_3>
						<output size="1" storage="register">SF</output>
						<name>INT_SLESS</name>
						<input_0 size="8" storage="register">RSI</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_3>
					<pcode_4>
						<output size="1" storage="register">ZF</output>
						<name>INT_EQUAL</name>
						<input_0 size="8" storage="register">RSI</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_4>
				</pcodes>
			</instruction_2>
			<instruction_3>
				<address>0040040d</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RBP</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">RSP</input_0>
					</pcode_0>
				</pcodes>
			</instruction_3>
			<instruction_4>
				<address>00400410</address>
				<pcodes>
					<pcode_0>
						<output size="4" storage="unique">u_acf0:4</output>
						<name>INT_AND</name>
						<input_0 size="4" storage="constant">0x3</input_0>
						<input_1 size="4" storage="constant">0x3f</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="unique">u_ad00:8</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">RSI</input_0>
					</pcode_1>
					<pcode_2>
						<output size="8" storage="register">RSI</output>
						<name>INT_SRIGHT</name>
						<input_0 size="8" storage="register">RSI</input_0>
						<input_1 size="4" storage="unique">u_acf0:4</input_1>
					</pcode_2>
					<pcode_3>
						<output size="1" storage="unique">u_3380:1</output>
						<name>INT_NOTEQUAL</name>
						<input_0 size="4" storage="unique">u_acf0:4</input_0>
						<input_1 size="4" storage="constant">0x0</input_1>
					</pcode_3>
					<pcode_4>
						<output size="4" storage="unique">u_3390:4</output>
						<name>INT_SUB</name>
						<input_0 size="4" storage="unique">u_acf0:4</input_0>
						<input_1 size="4" storage="constant">0x1</input_1>
					</pcode_4>
					<pcode_5>
						<output size="8" storage="unique">u_33a0:8</output>
						<name>INT_SRIGHT</name>
						<input_0 size="8" storage="unique">u_ad00:8</input_0>
						<input_1 size="4" storage="unique">u_3390:4</input_1>
					</pcode_5>
					<pcode_6>
						<output size="8" storage="unique">u_33b0:8</output>
						<name>INT_AND</name>
						<input_0 size="8" storage="unique">u_33a0:8</input_0>
						<input_1 size="8" storage="constant">0x1</input_1>
					</pcode_6>
					<pcode_7>
						<output size="1" storage="unique">u_33d0:1</output>
						<name>INT_NOTEQUAL</name>
						<input_0 size="8" storage="unique">u_33b0:8</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_7>
					<pcode_8>
						<output size="1" storage="unique">u_33e0:1</output>
						<name>BOOL_NEGATE</name>
						<input_0 size="1" storage="unique">u_3380:1</input_0>
					</pcode_8>
					<pcode_9>
						<output size="1" storage="unique">u_33f0:1</output>
						<name>INT_AND</name>
						<input_0 size="1" storage="unique">u_33e0:1</input_0>
						<input_1 size="1" storage="register">CF</input_1>
					</pcode_9>
					<pcode_10>
						<output size="1" storage="unique">u_3400:1</output>
						<name>INT_AND</name>
						<input_0 size="1" storage="unique">u_3380:1</input_0>
						<input_1 size="1" storage="unique">u_33d0:1</input_1>
					</pcode_10>
					<pcode_11>
						<output size="1" storage="register">CF</output>
						<name>INT_OR</name>
						<input_0 size="1" storage="unique">u_33f0:1</input_0>
						<input_1 size="1" storage="unique">u_3400:1</input_1>
					</pcode_11>
					<pcode_12>
						<output size="1" storage="unique">u_3430:1</output>
						<name>INT_EQUAL</name>
						<input_0 size="4" storage="unique">u_acf0:4</input_0>
						<input_1 size="4" storage="constant">0x1</input_1>
					</pcode_12>
					<pcode_13>
						<output size="1" storage="unique">u_3440:1</output>
						<name>BOOL_NEGATE</name>
						<input_0 size="1" storage="unique">u_3430:1</input_0>
					</pcode_13>
					<pcode_14>
						<output size="1" storage="register">OF</output>
						<name>INT_AND</name>
						<input_0 size="1" storage="unique">u_3440:1</input_0>
						<input_1 size="1" storage="register">OF</input_1>
					</pcode_14>
					<pcode_15>
						<output size="1" storage="unique">u_2e90:1</output>
						<name>INT_NOTEQUAL</name>
						<input_0 size="4" storage="unique">u_acf0:4</input_0>
						<input_1 size="4" storage="constant">0x0</input_1>
					</pcode_15>
					<pcode_16>
						<output size="1" storage="unique">u_2eb0:1</output>
						<name>INT_SLESS</name>
						<input_0 size="8" storage="register">RSI</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_16>
					<pcode_17>
						<output size="1" storage="unique">u_2ec0:1</output>
						<name>BOOL_NEGATE</name>
						<input_0 size="1" storage="unique">u_2e90:1</input_0>
					</pcode_17>
					<pcode_18>
						<output size="1" storage="unique">u_2ed0:1</output>
						<name>INT_AND</name>
						<input_0 size="1" storage="unique">u_2ec0:1</input_0>
						<input_1 size="1" storage="register">SF</input_1>
					</pcode_18>
					<pcode_19>
						<output size="1" storage="unique">u_2ee0:1</output>
						<name>INT_AND</name>
						<input_0 size="1" storage="unique">u_2e90:1</input_0>
						<input_1 size="1" storage="unique">u_2eb0:1</input_1>
					</pcode_19>
					<pcode_20>
						<output size="1" storage="register">SF</output>
						<name>INT_OR</name>
						<input_0 size="1" storage="unique">u_2ed0:1</input_0>
						<input_1 size="1" storage="unique">u_2ee0:1</input_1>
					</pcode_20>
					<pcode_21>
						<output size="1" storage="unique">u_2f10:1</output>
						<name>INT_EQUAL</name>
						<input_0 size="8" storage="register">RSI</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_21>
					<pcode_22>
						<output size="1" storage="unique">u_2f20:1</output>
						<name>BOOL_NEGATE</name>
						<input_0 size="1" storage="unique">u_2e90:1</input_0>
					</pcode_22>
					<pcode_23>
						<output size="1" storage="unique">u_2f30:1</output>
						<name>INT_AND</name>
						<input_0 size="1" storage="unique">u_2f20:1</input_0>
						<input_1 size="1" storage="register">ZF</input_1>
					</pcode_23>
					<pcode_24>
						<output size="1" storage="unique">u_2f40:1</output>
						<name>INT_AND</name>
						<input_0 size="1" storage="unique">u_2e90:1</input_0>
						<input_1 size="1" storage="unique">u_2f10:1</input_1>
					</pcode_24>
					<pcode_25>
						<output size="1" storage="register">ZF</output>
						<name>INT_OR</name>
						<input_0 size="1" storage="unique">u_2f30:1</input_0>
						<input_1 size="1" storage="unique">u_2f40:1</input_1>
					</pcode_25>
				</pcodes>
			</instruction_4>
			<instruction_5>
				<address>00400414</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RAX</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">RSI</input_0>
					</pcode_0>
				</pcodes>
			</instruction_5>
			<instruction_6>
				<address>00400417</address>
				<pcodes>
					<pcode_0>
						<output size="4" storage="unique">u_b890:4</output>
						<name>INT_AND</name>
						<input_0 size="4" storage="constant">0x3f</input_0>
						<input_1 size="4" storage="constant">0x3f</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="unique">u_b8a0:8</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">RAX</input_0>
					</pcode_1>
					<pcode_2>
						<output size="8" storage="register">RAX</output>
						<name>INT_RIGHT</name>
						<input_0 size="8" storage="register">RAX</input_0>
						<input_1 size="4" storage="unique">u_b890:4</input_1>
					</pcode_2>
					<pcode_3>
						<output size="1" storage="unique">u_3470:1</output>
						<name>INT_NOTEQUAL</name>
						<input_0 size="4" storage="unique">u_b890:4</input_0>
						<input_1 size="4" storage="constant">0x0</input_1>
					</pcode_3>
					<pcode_4>
						<output size="4" storage="unique">u_3480:4</output>
						<name>INT_SUB</name>
						<input_0 size="4" storage="unique">u_b890:4</input_0>
						<input_1 size="4" storage="constant">0x1</input_1>
					</pcode_4>
					<pcode_5>
						<output size="8" storage="unique">u_3490:8</output>
						<name>INT_RIGHT</name>
						<input_0 size="8" storage="unique">u_b8a0:8</input_0>
						<input_1 size="4" storage="unique">u_3480:4</input_1>
					</pcode_5>
					<pcode_6>
						<output size="8" storage="unique">u_34a0:8</output>
						<name>INT_AND</name>
						<input_0 size="8" storage="unique">u_3490:8</input_0>
						<input_1 size="8" storage="constant">0x1</input_1>
					</pcode_6>
					<pcode_7>
						<output size="1" storage="unique">u_34c0:1</output>
						<name>INT_NOTEQUAL</name>
						<input_0 size="8" storage="unique">u_34a0:8</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_7>
					<pcode_8>
						<output size="1" storage="unique">u_34d0:1</output>
						<name>BOOL_NEGATE</name>
						<input_0 size="1" storage="unique">u_3470:1</input_0>
					</pcode_8>
					<pcode_9>
						<output size="1" storage="unique">u_34e0:1</output>
						<name>INT_AND</name>
						<input_0 size="1" storage="unique">u_34d0:1</input_0>
						<input_1 size="1" storage="register">CF</input_1>
					</pcode_9>
					<pcode_10>
						<output size="1" storage="unique">u_34f0:1</output>
						<name>INT_AND</name>
						<input_0 size="1" storage="unique">u_3470:1</input_0>
						<input_1 size="1" storage="unique">u_34c0:1</input_1>
					</pcode_10>
					<pcode_11>
						<output size="1" storage="register">CF</output>
						<name>INT_OR</name>
						<input_0 size="1" storage="unique">u_34e0:1</input_0>
						<input_1 size="1" storage="unique">u_34f0:1</input_1>
					</pcode_11>
					<pcode_12>
						<output size="1" storage="unique">u_3520:1</output>
						<name>INT_EQUAL</name>
						<input_0 size="4" storage="unique">u_b890:4</input_0>
						<input_1 size="4" storage="constant">0x1</input_1>
					</pcode_12>
					<pcode_13>
						<output size="1" storage="unique">u_3540:1</output>
						<name>INT_SLESS</name>
						<input_0 size="8" storage="unique">u_b8a0:8</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_13>
					<pcode_14>
						<output size="1" storage="unique">u_3550:1</output>
						<name>BOOL_NEGATE</name>
						<input_0 size="1" storage="unique">u_3520:1</input_0>
					</pcode_14>
					<pcode_15>
						<output size="1" storage="unique">u_3560:1</output>
						<name>INT_AND</name>
						<input_0 size="1" storage="unique">u_3550:1</input_0>
						<input_1 size="1" storage="register">OF</input_1>
					</pcode_15>
					<pcode_16>
						<output size="1" storage="unique">u_3570:1</output>
						<name>INT_AND</name>
						<input_0 size="1" storage="unique">u_3520:1</input_0>
						<input_1 size="1" storage="unique">u_3540:1</input_1>
					</pcode_16>
					<pcode_17>
						<output size="1" storage="register">OF</output>
						<name>INT_OR</name>
						<input_0 size="1" storage="unique">u_3560:1</input_0>
						<input_1 size="1" storage="unique">u_3570:1</input_1>
					</pcode_17>
					<pcode_18>
						<output size="1" storage="unique">u_2e90:1</output>
						<name>INT_NOTEQUAL</name>
						<input_0 size="4" storage="unique">u_b890:4</input_0>
						<input_1 size="4" storage="constant">0x0</input_1>
					</pcode_18>
					<pcode_19>
						<output size="1" storage="unique">u_2eb0:1</output>
						<name>INT_SLESS</name>
						<input_0 size="8" storage="register">RAX</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_19>
					<pcode_20>
						<output size="1" storage="unique">u_2ec0:1</output>
						<name>BOOL_NEGATE</name>
						<input_0 size="1" storage="unique">u_2e90:1</input_0>
					</pcode_20>
					<pcode_21>
						<output size="1" storage="unique">u_2ed0:1</output>
						<name>INT_AND</name>
						<input_0 size="1" storage="unique">u_2ec0:1</input_0>
						<input_1 size="1" storage="register">SF</input_1>
					</pcode_21>
					<pcode_22>
						<output size="1" storage="unique">u_2ee0:1</output>
						<name>INT_AND</name>
						<input_0 size="1" storage="unique">u_2e90:1</input_0>
						<input_1 size="1" storage="unique">u_2eb0:1</input_1>
					</pcode_22>
					<pcode_23>
						<output size="1" storage="register">SF</output>
						<name>INT_OR</name>
						<input_0 size="1" storage="unique">u_2ed0:1</input_0>
						<input_1 size="1" storage="unique">u_2ee0:1</input_1>
					</pcode_23>
					<pcode_24>
						<output size="1" storage="unique">u_2f10:1</output>
						<name>INT_EQUAL</name>
						<input_0 size="8" storage="register">RAX</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_24>
					<pcode_25>
						<output size="1" storage="unique">u_2f20:1</output>
						<name>BOOL_NEGATE</name>
						<input_0 size="1" storage="unique">u_2e90:1</input_0>
					</pcode_25>
					<pcode_26>
						<output size="1" storage="unique">u_2f30:1</output>
						<name>INT_AND</name>
						<input_0 size="1" storage="unique">u_2f20:1</input_0>
						<input_1 size="1" storage="register">ZF</input_1>
					</pcode_26>
					<pcode_27>
						<output size="1" storage="unique">u_2f40:1</output>
						<name>INT_AND</name>
						<input_0 size="1" storage="unique">u_2e90:1</input_0>
						<input_1 size="1" storage="unique">u_2f10:1</input_1>
					</pcode_27>
					<pcode_28>
						<output size="1" storage="register">ZF</output>
						<name>INT_OR</name>
						<input_0 size="1" storage="unique">u_2f30:1</input_0>
						<input_1 size="1" storage="unique">u_2f40:1</input_1>
					</pcode_28>
				</pcodes>
			</instruction_6>
			<instruction_7>
				<address>0040041b</address>
				<pcodes>
					<pcode_0>
						<output size="1" storage="register">CF</output>
						<name>INT_CARRY</name>
						<input_0 size="8" storage="register">RSI</input_0>
						<input_1 size="8" storage="register">RAX</input_1>
					</pcode_0>
					<pcode_1>
						<output size="1" storage="register">OF</output>
						<name>INT_SCARRY</name>
						<input_0 size="8" storage="register">RSI</input_0>
						<input_1 size="8" storage="register">RAX</input_1>
					</pcode_1>
					<pcode_2>
						<output size="8" storage="register">RSI</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSI</input_0>
						<input_1 size="8" storage="register">RAX</input_1>
					</pcode_2>
					<pcode_3>
						<output size="1" storage="register">SF</output>
						<name>INT_SLESS</name>
						<input_0 size="8" storage="register">RSI</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_3>
					<pcode_4>
						<output size="1" storage="register">ZF</output>
						<name>INT_EQUAL</name>
						<input_0 size="8" storage="register">RSI</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_4>
				</pcodes>
			</instruction_7>
			<instruction_8>
				<address>0040041e</address>
				<pcodes>
					<pcode_0>
						<output size="1" storage="unique">u_2010:1</output>
						<name>COPY</name>
						<input_0 size="1" storage="constant">0x1</input_0>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="unique">u_ac70:8</output>
						<name>INT_AND</name>
						<input_0 size="8" storage="register">RSI</input_0>
						<input_1 size="8" storage="constant">0x1</input_1>
					</pcode_1>
					<pcode_2>
						<output size="1" storage="register">CF</output>
						<name>INT_NOTEQUAL</name>
						<input_0 size="8" storage="unique">u_ac70:8</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_2>
					<pcode_3>
						<output size="1" storage="register">OF</output>
						<name>COPY</name>
						<input_0 size="1" storage="constant">0x0</input_0>
					</pcode_3>
					<pcode_4>
						<output size="8" storage="register">RSI</output>
						<name>INT_SRIGHT</name>
						<input_0 size="8" storage="register">RSI</input_0>
						<input_1 size="4" storage="constant">0x1</input_1>
					</pcode_4>
					<pcode_5>
						<output size="1" storage="register">SF</output>
						<name>INT_SLESS</name>
						<input_0 size="8" storage="register">RSI</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_5>
					<pcode_6>
						<output size="1" storage="register">ZF</output>
						<name>INT_EQUAL</name>
						<input_0 size="8" storage="register">RSI</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_6>
				</pcodes>
			</instruction_8>
			<instruction_9>
				<address>00400421</address>
				<pcodes>
					<pcode_0>
						<name>CBRANCH</name>
						<input_0 size="8" storage="memory">A_00400438:8</input_0>
						<input_1 size="1" storage="register">ZF</input_1>
					</pcode_0>
				</pcodes>
			</instruction_9>
			<instruction_10>
				<address>00400423</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RAX</output>
						<name>COPY</name>
						<input_0 size="8" storage="constant">0x0</input_0>
					</pcode_0>
				</pcodes>
			</instruction_10>
			<instruction_11>
				<address>00400428</address>
				<pcodes>
					<pcode_0>
						<output size="1" storage="register">CF</output>
						<name>COPY</name>
						<input_0 size="1" storage="constant">0x0</input_0>
					</pcode_0>
					<pcode_1>
						<output size="1" storage="register">OF</output>
						<name>COPY</name>
						<input_0 size="1" storage="constant">0x0</input_0>
					</pcode_1>
					<pcode_2>
						<output size="8" storage="unique">u_bbe0:8</output>
						<name>INT_AND</name>
						<input_0 size="8" storage="register">RAX</input_0>
						<input_1 size="8" storage="register">RAX</input_1>
					</pcode_2>
					<pcode_3>
						<output size="1" storage="register">SF</output>
						<name>INT_SLESS</name>
						<input_0 size="8" storage="unique">u_bbe0:8</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_3>
					<pcode_4>
						<output size="1" storage="register">ZF</output>
						<name>INT_EQUAL</name>
						<input_0 size="8" storage="unique">u_bbe0:8</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_4>
				</pcodes>
			</instruction_11>
			<instruction_12>
				<address>0040042b</address>
				<pcodes>
					<pcode_0>
						<name>CBRANCH</name>
						<input_0 size="8" storage="memory">A_00400438:8</input_0>
						<input_1 size="1" storage="register">ZF</input_1>
					</pcode_0>
				</pcodes>
			</instruction_12>
			<instruction_13>
				<address>0040042d</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RBP</output>
						<name>LOAD</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
				</pcodes>
			</instruction_13>
			<instruction_14>
				<address>0040042e</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RDI</output>
						<name>COPY</name>
						<input_0 size="8" storage="constant">0x601028</input_0>
					</pcode_0>
				</pcodes>
			</instruction_14>
			<instruction_15>
				<address>00400433</address>
				<pcodes>
					<pcode_0>
						<name>BRANCHIND</name>
						<input_0 size="8" storage="register">RAX</input_0>
					</pcode_0>
				</pcodes>
			</instruction_15>
			<instruction_16>
				<address>00400438</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RBP</output>
						<name>LOAD</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
				</pcodes>
			</instruction_16>
			<instruction_17>
				<address>00400439</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RIP</output>
						<name>LOAD</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<name>RETURN</name>
						<input_0 size="8" storage="register">RIP</input_0>
					</pcode_2>
				</pcodes>
			</instruction_17>
		</instructions>
	</function>
	<function address="00400440" name="__do_global_dtors_aux">
		<basic_blocks>
			<block_0 end="00400447" start="00400440"/>
			<block_1 end="00400460" start="00400460"/>
			<block_2 end="0040045a" start="00400449"/>
		</basic_blocks>
		<output type="undefined"/>
		<instructions>
			<instruction_0>
				<address>00400440</address>
				<pcodes>
					<pcode_0>
						<output size="1" storage="register">CF</output>
						<name>INT_LESS</name>
						<input_0 size="1" storage="memory">A_00601028:1</input_0>
						<input_1 size="1" storage="constant">0x0</input_1>
					</pcode_0>
					<pcode_1>
						<output size="1" storage="register">OF</output>
						<name>INT_SBORROW</name>
						<input_0 size="1" storage="memory">A_00601028:1</input_0>
						<input_1 size="1" storage="constant">0x0</input_1>
					</pcode_1>
					<pcode_2>
						<output size="1" storage="unique">u_58b0:1</output>
						<name>INT_SUB</name>
						<input_0 size="1" storage="memory">A_00601028:1</input_0>
						<input_1 size="1" storage="constant">0x0</input_1>
					</pcode_2>
					<pcode_3>
						<output size="1" storage="register">SF</output>
						<name>INT_SLESS</name>
						<input_0 size="1" storage="unique">u_58b0:1</input_0>
						<input_1 size="1" storage="constant">0x0</input_1>
					</pcode_3>
					<pcode_4>
						<output size="1" storage="register">ZF</output>
						<name>INT_EQUAL</name>
						<input_0 size="1" storage="unique">u_58b0:1</input_0>
						<input_1 size="1" storage="constant">0x0</input_1>
					</pcode_4>
				</pcodes>
			</instruction_0>
			<instruction_1>
				<address>00400447</address>
				<pcodes>
					<pcode_0>
						<output size="1" storage="unique">u_2110:1</output>
						<name>BOOL_NEGATE</name>
						<input_0 size="1" storage="register">ZF</input_0>
					</pcode_0>
					<pcode_1>
						<name>CBRANCH</name>
						<input_0 size="8" storage="memory">A_00400460:8</input_0>
						<input_1 size="1" storage="unique">u_2110:1</input_1>
					</pcode_1>
				</pcodes>
			</instruction_1>
			<instruction_2>
				<address>00400449</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_2510:8</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">RBP</input_0>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_SUB</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<name>STORE</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
						<input_2 size="8" storage="unique">u_2510:8</input_2>
					</pcode_2>
				</pcodes>
			</instruction_2>
			<instruction_3>
				<address>0040044a</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RBP</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">RSP</input_0>
					</pcode_0>
				</pcodes>
			</instruction_3>
			<instruction_4>
				<address>0040044d</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RSP</output>
						<name>INT_SUB</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_0>
					<pcode_1>
						<name>STORE</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
						<input_2 size="8" storage="constant">0x400452</input_2>
					</pcode_1>
					<pcode_2>
						<name>CALL</name>
						<input_0 size="8" storage="memory">A_004003d0:8</input_0>
					</pcode_2>
				</pcodes>
			</instruction_4>
			<instruction_5>
				<address>00400452</address>
				<pcodes>
					<pcode_0>
						<output size="1" storage="memory">A_00601028:1</output>
						<name>COPY</name>
						<input_0 size="1" storage="constant">0x1</input_0>
					</pcode_0>
				</pcodes>
			</instruction_5>
			<instruction_6>
				<address>00400459</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RBP</output>
						<name>LOAD</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
				</pcodes>
			</instruction_6>
			<instruction_7>
				<address>0040045a</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RIP</output>
						<name>LOAD</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<name>RETURN</name>
						<input_0 size="8" storage="register">RIP</input_0>
					</pcode_2>
				</pcodes>
			</instruction_7>
		</instructions>
	</function>
	<function address="00400470" name="frame_dummy">
		<basic_blocks>
			<block_0 end="00400475" start="00400470"/>
		</basic_blocks>
		<output type="undefined"/>
		<instructions>
			<instruction_0>
				<address>00400470</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_2510:8</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">RBP</input_0>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_SUB</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<name>STORE</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
						<input_2 size="8" storage="unique">u_2510:8</input_2>
					</pcode_2>
				</pcodes>
			</instruction_0>
			<instruction_1>
				<address>00400471</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RBP</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">RSP</input_0>
					</pcode_0>
				</pcodes>
			</instruction_1>
			<instruction_2>
				<address>00400474</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RBP</output>
						<name>LOAD</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
				</pcodes>
			</instruction_2>
			<instruction_3>
				<address>00400475</address>
				<pcodes>
					<pcode_0>
						<name>BRANCH</name>
						<input_0 size="8" storage="memory">A_00400400:8</input_0>
					</pcode_0>
				</pcodes>
			</instruction_3>
			<instruction_4>
				<address>00400480</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_2510:8</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">RBP</input_0>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_SUB</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<name>STORE</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
						<input_2 size="8" storage="unique">u_2510:8</input_2>
					</pcode_2>
				</pcodes>
			</instruction_4>
			<instruction_5>
				<address>00400481</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RBP</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">RSP</input_0>
					</pcode_0>
				</pcodes>
			</instruction_5>
			<instruction_6>
				<address>00400484</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_620:8</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RBP</input_0>
						<input_1 size="8" storage="constant">0xfffffffffffffff8</input_1>
					</pcode_0>
					<pcode_1>
						<output size="4" storage="unique">u_1fd0:4</output>
						<name>COPY</name>
						<input_0 size="4" storage="register">EDI</input_0>
					</pcode_1>
					<pcode_2>
						<name>STORE</name>
						<input_0 size="4" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="unique">u_620:8</input_1>
						<input_2 size="4" storage="unique">u_1fd0:4</input_2>
					</pcode_2>
				</pcodes>
			</instruction_6>
			<instruction_7>
				<address>00400487</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_620:8</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RBP</input_0>
						<input_1 size="8" storage="constant">0xfffffffffffffff8</input_1>
					</pcode_0>
					<pcode_1>
						<output size="4" storage="unique">u_1fe0:4</output>
						<name>LOAD</name>
						<input_0 size="4" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="unique">u_620:8</input_1>
					</pcode_1>
					<pcode_2>
						<output size="1" storage="register">CF</output>
						<name>INT_LESS</name>
						<input_0 size="4" storage="unique">u_1fe0:4</input_0>
						<input_1 size="4" storage="constant">0x5</input_1>
					</pcode_2>
					<pcode_3>
						<output size="4" storage="unique">u_1fe0:4</output>
						<name>LOAD</name>
						<input_0 size="4" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="unique">u_620:8</input_1>
					</pcode_3>
					<pcode_4>
						<output size="1" storage="register">OF</output>
						<name>INT_SBORROW</name>
						<input_0 size="4" storage="unique">u_1fe0:4</input_0>
						<input_1 size="4" storage="constant">0x5</input_1>
					</pcode_4>
					<pcode_5>
						<output size="4" storage="unique">u_1fe0:4</output>
						<name>LOAD</name>
						<input_0 size="4" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="unique">u_620:8</input_1>
					</pcode_5>
					<pcode_6>
						<output size="4" storage="unique">u_5950:4</output>
						<name>INT_SUB</name>
						<input_0 size="4" storage="unique">u_1fe0:4</input_0>
						<input_1 size="4" storage="constant">0x5</input_1>
					</pcode_6>
					<pcode_7>
						<output size="1" storage="register">SF</output>
						<name>INT_SLESS</name>
						<input_0 size="4" storage="unique">u_5950:4</input_0>
						<input_1 size="4" storage="constant">0x0</input_1>
					</pcode_7>
					<pcode_8>
						<output size="1" storage="register">ZF</output>
						<name>INT_EQUAL</name>
						<input_0 size="4" storage="unique">u_5950:4</input_0>
						<input_1 size="4" storage="constant">0x0</input_1>
					</pcode_8>
				</pcodes>
			</instruction_7>
			<instruction_8>
				<address>0040048b</address>
				<pcodes>
					<pcode_0>
						<output size="1" storage="unique">u_2110:1</output>
						<name>BOOL_NEGATE</name>
						<input_0 size="1" storage="register">ZF</input_0>
					</pcode_0>
					<pcode_1>
						<name>CBRANCH</name>
						<input_0 size="8" storage="memory">A_0040049d:8</input_0>
						<input_1 size="1" storage="unique">u_2110:1</input_1>
					</pcode_1>
				</pcodes>
			</instruction_8>
			<instruction_9>
				<address>00400491</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_620:8</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RBP</input_0>
						<input_1 size="8" storage="constant">0xfffffffffffffffc</input_1>
					</pcode_0>
					<pcode_1>
						<output size="4" storage="unique">u_1fe0:4</output>
						<name>COPY</name>
						<input_0 size="4" storage="constant">0xf423f</input_0>
					</pcode_1>
					<pcode_2>
						<name>STORE</name>
						<input_0 size="4" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="unique">u_620:8</input_1>
						<input_2 size="4" storage="unique">u_1fe0:4</input_2>
					</pcode_2>
				</pcodes>
			</instruction_9>
			<instruction_10>
				<address>00400498</address>
				<pcodes>
					<pcode_0>
						<name>BRANCH</name>
						<input_0 size="8" storage="memory">A_004004a4:8</input_0>
					</pcode_0>
				</pcodes>
			</instruction_10>
			<instruction_11>
				<address>0040049d</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_620:8</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RBP</input_0>
						<input_1 size="8" storage="constant">0xfffffffffffffffc</input_1>
					</pcode_0>
					<pcode_1>
						<output size="4" storage="unique">u_1fe0:4</output>
						<name>COPY</name>
						<input_0 size="4" storage="constant">0xd9038</input_0>
					</pcode_1>
					<pcode_2>
						<name>STORE</name>
						<input_0 size="4" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="unique">u_620:8</input_1>
						<input_2 size="4" storage="unique">u_1fe0:4</input_2>
					</pcode_2>
				</pcodes>
			</instruction_11>
			<instruction_12>
				<address>004004a4</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_620:8</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RBP</input_0>
						<input_1 size="8" storage="constant">0xfffffffffffffffc</input_1>
					</pcode_0>
					<pcode_1>
						<output size="4" storage="unique">u_1fd0:4</output>
						<name>LOAD</name>
						<input_0 size="4" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="unique">u_620:8</input_1>
					</pcode_1>
					<pcode_2>
						<output size="4" storage="register">EAX</output>
						<name>COPY</name>
						<input_0 size="4" storage="unique">u_1fd0:4</input_0>
					</pcode_2>
					<pcode_3>
						<output size="8" storage="register">RAX</output>
						<name>INT_ZEXT</name>
						<input_0 size="4" storage="register">EAX</input_0>
					</pcode_3>
				</pcodes>
			</instruction_12>
			<instruction_13>
				<address>004004a7</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RBP</output>
						<name>LOAD</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
				</pcodes>
			</instruction_13>
			<instruction_14>
				<address>004004a8</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RIP</output>
						<name>LOAD</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<name>RETURN</name>
						<input_0 size="8" storage="register">RIP</input_0>
					</pcode_2>
				</pcodes>
			</instruction_14>
		</instructions>
	</function>
	<function address="00400480" name="return_val">
		<basic_blocks>
			<block_0 end="0040048b" start="00400480"/>
			<block_1 end="0040049d" start="0040049d"/>
			<block_2 end="00400498" start="00400491"/>
			<block_3 end="004004a8" start="004004a4"/>
		</basic_blocks>
		<output type="undefined"/>
		<instructions>
			<instruction_0>
				<address>00400480</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_2510:8</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">RBP</input_0>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_SUB</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<name>STORE</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
						<input_2 size="8" storage="unique">u_2510:8</input_2>
					</pcode_2>
				</pcodes>
			</instruction_0>
			<instruction_1>
				<address>00400481</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RBP</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">RSP</input_0>
					</pcode_0>
				</pcodes>
			</instruction_1>
			<instruction_2>
				<address>00400484</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_620:8</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RBP</input_0>
						<input_1 size="8" storage="constant">0xfffffffffffffff8</input_1>
					</pcode_0>
					<pcode_1>
						<output size="4" storage="unique">u_1fd0:4</output>
						<name>COPY</name>
						<input_0 size="4" storage="register">EDI</input_0>
					</pcode_1>
					<pcode_2>
						<name>STORE</name>
						<input_0 size="4" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="unique">u_620:8</input_1>
						<input_2 size="4" storage="unique">u_1fd0:4</input_2>
					</pcode_2>
				</pcodes>
			</instruction_2>
			<instruction_3>
				<address>00400487</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_620:8</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RBP</input_0>
						<input_1 size="8" storage="constant">0xfffffffffffffff8</input_1>
					</pcode_0>
					<pcode_1>
						<output size="4" storage="unique">u_1fe0:4</output>
						<name>LOAD</name>
						<input_0 size="4" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="unique">u_620:8</input_1>
					</pcode_1>
					<pcode_2>
						<output size="1" storage="register">CF</output>
						<name>INT_LESS</name>
						<input_0 size="4" storage="unique">u_1fe0:4</input_0>
						<input_1 size="4" storage="constant">0x5</input_1>
					</pcode_2>
					<pcode_3>
						<output size="4" storage="unique">u_1fe0:4</output>
						<name>LOAD</name>
						<input_0 size="4" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="unique">u_620:8</input_1>
					</pcode_3>
					<pcode_4>
						<output size="1" storage="register">OF</output>
						<name>INT_SBORROW</name>
						<input_0 size="4" storage="unique">u_1fe0:4</input_0>
						<input_1 size="4" storage="constant">0x5</input_1>
					</pcode_4>
					<pcode_5>
						<output size="4" storage="unique">u_1fe0:4</output>
						<name>LOAD</name>
						<input_0 size="4" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="unique">u_620:8</input_1>
					</pcode_5>
					<pcode_6>
						<output size="4" storage="unique">u_5950:4</output>
						<name>INT_SUB</name>
						<input_0 size="4" storage="unique">u_1fe0:4</input_0>
						<input_1 size="4" storage="constant">0x5</input_1>
					</pcode_6>
					<pcode_7>
						<output size="1" storage="register">SF</output>
						<name>INT_SLESS</name>
						<input_0 size="4" storage="unique">u_5950:4</input_0>
						<input_1 size="4" storage="constant">0x0</input_1>
					</pcode_7>
					<pcode_8>
						<output size="1" storage="register">ZF</output>
						<name>INT_EQUAL</name>
						<input_0 size="4" storage="unique">u_5950:4</input_0>
						<input_1 size="4" storage="constant">0x0</input_1>
					</pcode_8>
				</pcodes>
			</instruction_3>
			<instruction_4>
				<address>0040048b</address>
				<pcodes>
					<pcode_0>
						<output size="1" storage="unique">u_2110:1</output>
						<name>BOOL_NEGATE</name>
						<input_0 size="1" storage="register">ZF</input_0>
					</pcode_0>
					<pcode_1>
						<name>CBRANCH</name>
						<input_0 size="8" storage="memory">A_0040049d:8</input_0>
						<input_1 size="1" storage="unique">u_2110:1</input_1>
					</pcode_1>
				</pcodes>
			</instruction_4>
			<instruction_5>
				<address>00400491</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_620:8</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RBP</input_0>
						<input_1 size="8" storage="constant">0xfffffffffffffffc</input_1>
					</pcode_0>
					<pcode_1>
						<output size="4" storage="unique">u_1fe0:4</output>
						<name>COPY</name>
						<input_0 size="4" storage="constant">0xf423f</input_0>
					</pcode_1>
					<pcode_2>
						<name>STORE</name>
						<input_0 size="4" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="unique">u_620:8</input_1>
						<input_2 size="4" storage="unique">u_1fe0:4</input_2>
					</pcode_2>
				</pcodes>
			</instruction_5>
			<instruction_6>
				<address>00400498</address>
				<pcodes>
					<pcode_0>
						<name>BRANCH</name>
						<input_0 size="8" storage="memory">A_004004a4:8</input_0>
					</pcode_0>
				</pcodes>
			</instruction_6>
			<instruction_7>
				<address>0040049d</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_620:8</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RBP</input_0>
						<input_1 size="8" storage="constant">0xfffffffffffffffc</input_1>
					</pcode_0>
					<pcode_1>
						<output size="4" storage="unique">u_1fe0:4</output>
						<name>COPY</name>
						<input_0 size="4" storage="constant">0xd9038</input_0>
					</pcode_1>
					<pcode_2>
						<name>STORE</name>
						<input_0 size="4" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="unique">u_620:8</input_1>
						<input_2 size="4" storage="unique">u_1fe0:4</input_2>
					</pcode_2>
				</pcodes>
			</instruction_7>
			<instruction_8>
				<address>004004a4</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_620:8</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RBP</input_0>
						<input_1 size="8" storage="constant">0xfffffffffffffffc</input_1>
					</pcode_0>
					<pcode_1>
						<output size="4" storage="unique">u_1fd0:4</output>
						<name>LOAD</name>
						<input_0 size="4" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="unique">u_620:8</input_1>
					</pcode_1>
					<pcode_2>
						<output size="4" storage="register">EAX</output>
						<name>COPY</name>
						<input_0 size="4" storage="unique">u_1fd0:4</input_0>
					</pcode_2>
					<pcode_3>
						<output size="8" storage="register">RAX</output>
						<name>INT_ZEXT</name>
						<input_0 size="4" storage="register">EAX</input_0>
					</pcode_3>
				</pcodes>
			</instruction_8>
			<instruction_9>
				<address>004004a7</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RBP</output>
						<name>LOAD</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
				</pcodes>
			</instruction_9>
			<instruction_10>
				<address>004004a8</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RIP</output>
						<name>LOAD</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<name>RETURN</name>
						<input_0 size="8" storage="register">RIP</input_0>
					</pcode_2>
				</pcodes>
			</instruction_10>
		</instructions>
	</function>
	<function address="004004b0" name="main">
		<basic_blocks>
			<block_0 end="004004d3" start="004004b0"/>
		</basic_blocks>
		<output type="undefined"/>
		<instructions>
			<instruction_0>
				<address>004004b0</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_2510:8</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">RBP</input_0>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_SUB</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<name>STORE</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
						<input_2 size="8" storage="unique">u_2510:8</input_2>
					</pcode_2>
				</pcodes>
			</instruction_0>
			<instruction_1>
				<address>004004b1</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RBP</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">RSP</input_0>
					</pcode_0>
				</pcodes>
			</instruction_1>
			<instruction_2>
				<address>004004b4</address>
				<pcodes>
					<pcode_0>
						<output size="1" storage="register">CF</output>
						<name>INT_LESS</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x10</input_1>
					</pcode_0>
					<pcode_1>
						<output size="1" storage="register">OF</output>
						<name>INT_SBORROW</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x10</input_1>
					</pcode_1>
					<pcode_2>
						<output size="8" storage="register">RSP</output>
						<name>INT_SUB</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x10</input_1>
					</pcode_2>
					<pcode_3>
						<output size="1" storage="register">SF</output>
						<name>INT_SLESS</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_3>
					<pcode_4>
						<output size="1" storage="register">ZF</output>
						<name>INT_EQUAL</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_4>
				</pcodes>
			</instruction_2>
			<instruction_3>
				<address>004004b8</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_620:8</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RBP</input_0>
						<input_1 size="8" storage="constant">0xfffffffffffffffc</input_1>
					</pcode_0>
					<pcode_1>
						<output size="4" storage="unique">u_1fe0:4</output>
						<name>COPY</name>
						<input_0 size="4" storage="constant">0x0</input_0>
					</pcode_1>
					<pcode_2>
						<name>STORE</name>
						<input_0 size="4" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="unique">u_620:8</input_1>
						<input_2 size="4" storage="unique">u_1fe0:4</input_2>
					</pcode_2>
				</pcodes>
			</instruction_3>
			<instruction_4>
				<address>004004bf</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_620:8</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RBP</input_0>
						<input_1 size="8" storage="constant">0xfffffffffffffff8</input_1>
					</pcode_0>
					<pcode_1>
						<output size="4" storage="unique">u_1fd0:4</output>
						<name>COPY</name>
						<input_0 size="4" storage="register">EDI</input_0>
					</pcode_1>
					<pcode_2>
						<name>STORE</name>
						<input_0 size="4" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="unique">u_620:8</input_1>
						<input_2 size="4" storage="unique">u_1fd0:4</input_2>
					</pcode_2>
				</pcodes>
			</instruction_4>
			<instruction_5>
				<address>004004c2</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_620:8</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RBP</input_0>
						<input_1 size="8" storage="constant">0xfffffffffffffff0</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="unique">u_1ff0:8</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">RSI</input_0>
					</pcode_1>
					<pcode_2>
						<name>STORE</name>
						<input_0 size="4" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="unique">u_620:8</input_1>
						<input_2 size="8" storage="unique">u_1ff0:8</input_2>
					</pcode_2>
				</pcodes>
			</instruction_5>
			<instruction_6>
				<address>004004c6</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_620:8</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RBP</input_0>
						<input_1 size="8" storage="constant">0xfffffffffffffff8</input_1>
					</pcode_0>
					<pcode_1>
						<output size="4" storage="unique">u_1fd0:4</output>
						<name>LOAD</name>
						<input_0 size="4" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="unique">u_620:8</input_1>
					</pcode_1>
					<pcode_2>
						<output size="4" storage="register">EDI</output>
						<name>COPY</name>
						<input_0 size="4" storage="unique">u_1fd0:4</input_0>
					</pcode_2>
					<pcode_3>
						<output size="8" storage="register">RDI</output>
						<name>INT_ZEXT</name>
						<input_0 size="4" storage="register">EDI</input_0>
					</pcode_3>
				</pcodes>
			</instruction_6>
			<instruction_7>
				<address>004004c9</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RSP</output>
						<name>INT_SUB</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_0>
					<pcode_1>
						<name>STORE</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
						<input_2 size="8" storage="constant">0x4004ce</input_2>
					</pcode_1>
					<pcode_2>
						<name>CALL</name>
						<input_0 size="8" storage="memory">A_00400480:8</input_0>
					</pcode_2>
				</pcodes>
			</instruction_7>
			<instruction_8>
				<address>004004ce</address>
				<pcodes>
					<pcode_0>
						<output size="1" storage="register">CF</output>
						<name>INT_CARRY</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x10</input_1>
					</pcode_0>
					<pcode_1>
						<output size="1" storage="register">OF</output>
						<name>INT_SCARRY</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x10</input_1>
					</pcode_1>
					<pcode_2>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x10</input_1>
					</pcode_2>
					<pcode_3>
						<output size="1" storage="register">SF</output>
						<name>INT_SLESS</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_3>
					<pcode_4>
						<output size="1" storage="register">ZF</output>
						<name>INT_EQUAL</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_4>
				</pcodes>
			</instruction_8>
			<instruction_9>
				<address>004004d2</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RBP</output>
						<name>LOAD</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
				</pcodes>
			</instruction_9>
			<instruction_10>
				<address>004004d3</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RIP</output>
						<name>LOAD</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<name>RETURN</name>
						<input_0 size="8" storage="register">RIP</input_0>
					</pcode_2>
				</pcodes>
			</instruction_10>
		</instructions>
	</function>
	<function address="004004e0" name="__libc_csu_init">
		<basic_blocks>
			<block_0 end="00400518" start="004004e0"/>
			<block_1 end="00400534" start="00400520"/>
			<block_2 end="00400544" start="00400536"/>
		</basic_blocks>
		<output type="undefined"/>
		<instructions>
			<instruction_0>
				<address>004004e0</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_2510:8</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">R15</input_0>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_SUB</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<name>STORE</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
						<input_2 size="8" storage="unique">u_2510:8</input_2>
					</pcode_2>
				</pcodes>
			</instruction_0>
			<instruction_1>
				<address>004004e2</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_2510:8</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">R14</input_0>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_SUB</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<name>STORE</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
						<input_2 size="8" storage="unique">u_2510:8</input_2>
					</pcode_2>
				</pcodes>
			</instruction_1>
			<instruction_2>
				<address>004004e4</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">R15</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">RDX</input_0>
					</pcode_0>
				</pcodes>
			</instruction_2>
			<instruction_3>
				<address>004004e7</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_2510:8</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">R13</input_0>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_SUB</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<name>STORE</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
						<input_2 size="8" storage="unique">u_2510:8</input_2>
					</pcode_2>
				</pcodes>
			</instruction_3>
			<instruction_4>
				<address>004004e9</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_2510:8</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">R12</input_0>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_SUB</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<name>STORE</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
						<input_2 size="8" storage="unique">u_2510:8</input_2>
					</pcode_2>
				</pcodes>
			</instruction_4>
			<instruction_5>
				<address>004004eb</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">R12</output>
						<name>COPY</name>
						<input_0 size="8" storage="constant">0x600e50</input_0>
					</pcode_0>
				</pcodes>
			</instruction_5>
			<instruction_6>
				<address>004004f2</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_2510:8</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">RBP</input_0>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_SUB</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<name>STORE</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
						<input_2 size="8" storage="unique">u_2510:8</input_2>
					</pcode_2>
				</pcodes>
			</instruction_6>
			<instruction_7>
				<address>004004f3</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RBP</output>
						<name>COPY</name>
						<input_0 size="8" storage="constant">0x600e58</input_0>
					</pcode_0>
				</pcodes>
			</instruction_7>
			<instruction_8>
				<address>004004fa</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_2510:8</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">RBX</input_0>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_SUB</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<name>STORE</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
						<input_2 size="8" storage="unique">u_2510:8</input_2>
					</pcode_2>
				</pcodes>
			</instruction_8>
			<instruction_9>
				<address>004004fb</address>
				<pcodes>
					<pcode_0>
						<output size="4" storage="register">R13D</output>
						<name>COPY</name>
						<input_0 size="4" storage="register">EDI</input_0>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">R13</output>
						<name>INT_ZEXT</name>
						<input_0 size="4" storage="register">R13D</input_0>
					</pcode_1>
				</pcodes>
			</instruction_9>
			<instruction_10>
				<address>004004fe</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">R14</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">RSI</input_0>
					</pcode_0>
				</pcodes>
			</instruction_10>
			<instruction_11>
				<address>00400501</address>
				<pcodes>
					<pcode_0>
						<output size="1" storage="register">CF</output>
						<name>INT_LESS</name>
						<input_0 size="8" storage="register">RBP</input_0>
						<input_1 size="8" storage="register">R12</input_1>
					</pcode_0>
					<pcode_1>
						<output size="1" storage="register">OF</output>
						<name>INT_SBORROW</name>
						<input_0 size="8" storage="register">RBP</input_0>
						<input_1 size="8" storage="register">R12</input_1>
					</pcode_1>
					<pcode_2>
						<output size="8" storage="register">RBP</output>
						<name>INT_SUB</name>
						<input_0 size="8" storage="register">RBP</input_0>
						<input_1 size="8" storage="register">R12</input_1>
					</pcode_2>
					<pcode_3>
						<output size="1" storage="register">SF</output>
						<name>INT_SLESS</name>
						<input_0 size="8" storage="register">RBP</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_3>
					<pcode_4>
						<output size="1" storage="register">ZF</output>
						<name>INT_EQUAL</name>
						<input_0 size="8" storage="register">RBP</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_4>
				</pcodes>
			</instruction_11>
			<instruction_12>
				<address>00400504</address>
				<pcodes>
					<pcode_0>
						<output size="1" storage="register">CF</output>
						<name>INT_LESS</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_0>
					<pcode_1>
						<output size="1" storage="register">OF</output>
						<name>INT_SBORROW</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<output size="8" storage="register">RSP</output>
						<name>INT_SUB</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_2>
					<pcode_3>
						<output size="1" storage="register">SF</output>
						<name>INT_SLESS</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_3>
					<pcode_4>
						<output size="1" storage="register">ZF</output>
						<name>INT_EQUAL</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_4>
				</pcodes>
			</instruction_12>
			<instruction_13>
				<address>00400508</address>
				<pcodes>
					<pcode_0>
						<output size="4" storage="unique">u_acf0:4</output>
						<name>INT_AND</name>
						<input_0 size="4" storage="constant">0x3</input_0>
						<input_1 size="4" storage="constant">0x3f</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="unique">u_ad00:8</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">RBP</input_0>
					</pcode_1>
					<pcode_2>
						<output size="8" storage="register">RBP</output>
						<name>INT_SRIGHT</name>
						<input_0 size="8" storage="register">RBP</input_0>
						<input_1 size="4" storage="unique">u_acf0:4</input_1>
					</pcode_2>
					<pcode_3>
						<output size="1" storage="unique">u_3380:1</output>
						<name>INT_NOTEQUAL</name>
						<input_0 size="4" storage="unique">u_acf0:4</input_0>
						<input_1 size="4" storage="constant">0x0</input_1>
					</pcode_3>
					<pcode_4>
						<output size="4" storage="unique">u_3390:4</output>
						<name>INT_SUB</name>
						<input_0 size="4" storage="unique">u_acf0:4</input_0>
						<input_1 size="4" storage="constant">0x1</input_1>
					</pcode_4>
					<pcode_5>
						<output size="8" storage="unique">u_33a0:8</output>
						<name>INT_SRIGHT</name>
						<input_0 size="8" storage="unique">u_ad00:8</input_0>
						<input_1 size="4" storage="unique">u_3390:4</input_1>
					</pcode_5>
					<pcode_6>
						<output size="8" storage="unique">u_33b0:8</output>
						<name>INT_AND</name>
						<input_0 size="8" storage="unique">u_33a0:8</input_0>
						<input_1 size="8" storage="constant">0x1</input_1>
					</pcode_6>
					<pcode_7>
						<output size="1" storage="unique">u_33d0:1</output>
						<name>INT_NOTEQUAL</name>
						<input_0 size="8" storage="unique">u_33b0:8</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_7>
					<pcode_8>
						<output size="1" storage="unique">u_33e0:1</output>
						<name>BOOL_NEGATE</name>
						<input_0 size="1" storage="unique">u_3380:1</input_0>
					</pcode_8>
					<pcode_9>
						<output size="1" storage="unique">u_33f0:1</output>
						<name>INT_AND</name>
						<input_0 size="1" storage="unique">u_33e0:1</input_0>
						<input_1 size="1" storage="register">CF</input_1>
					</pcode_9>
					<pcode_10>
						<output size="1" storage="unique">u_3400:1</output>
						<name>INT_AND</name>
						<input_0 size="1" storage="unique">u_3380:1</input_0>
						<input_1 size="1" storage="unique">u_33d0:1</input_1>
					</pcode_10>
					<pcode_11>
						<output size="1" storage="register">CF</output>
						<name>INT_OR</name>
						<input_0 size="1" storage="unique">u_33f0:1</input_0>
						<input_1 size="1" storage="unique">u_3400:1</input_1>
					</pcode_11>
					<pcode_12>
						<output size="1" storage="unique">u_3430:1</output>
						<name>INT_EQUAL</name>
						<input_0 size="4" storage="unique">u_acf0:4</input_0>
						<input_1 size="4" storage="constant">0x1</input_1>
					</pcode_12>
					<pcode_13>
						<output size="1" storage="unique">u_3440:1</output>
						<name>BOOL_NEGATE</name>
						<input_0 size="1" storage="unique">u_3430:1</input_0>
					</pcode_13>
					<pcode_14>
						<output size="1" storage="register">OF</output>
						<name>INT_AND</name>
						<input_0 size="1" storage="unique">u_3440:1</input_0>
						<input_1 size="1" storage="register">OF</input_1>
					</pcode_14>
					<pcode_15>
						<output size="1" storage="unique">u_2e90:1</output>
						<name>INT_NOTEQUAL</name>
						<input_0 size="4" storage="unique">u_acf0:4</input_0>
						<input_1 size="4" storage="constant">0x0</input_1>
					</pcode_15>
					<pcode_16>
						<output size="1" storage="unique">u_2eb0:1</output>
						<name>INT_SLESS</name>
						<input_0 size="8" storage="register">RBP</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_16>
					<pcode_17>
						<output size="1" storage="unique">u_2ec0:1</output>
						<name>BOOL_NEGATE</name>
						<input_0 size="1" storage="unique">u_2e90:1</input_0>
					</pcode_17>
					<pcode_18>
						<output size="1" storage="unique">u_2ed0:1</output>
						<name>INT_AND</name>
						<input_0 size="1" storage="unique">u_2ec0:1</input_0>
						<input_1 size="1" storage="register">SF</input_1>
					</pcode_18>
					<pcode_19>
						<output size="1" storage="unique">u_2ee0:1</output>
						<name>INT_AND</name>
						<input_0 size="1" storage="unique">u_2e90:1</input_0>
						<input_1 size="1" storage="unique">u_2eb0:1</input_1>
					</pcode_19>
					<pcode_20>
						<output size="1" storage="register">SF</output>
						<name>INT_OR</name>
						<input_0 size="1" storage="unique">u_2ed0:1</input_0>
						<input_1 size="1" storage="unique">u_2ee0:1</input_1>
					</pcode_20>
					<pcode_21>
						<output size="1" storage="unique">u_2f10:1</output>
						<name>INT_EQUAL</name>
						<input_0 size="8" storage="register">RBP</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_21>
					<pcode_22>
						<output size="1" storage="unique">u_2f20:1</output>
						<name>BOOL_NEGATE</name>
						<input_0 size="1" storage="unique">u_2e90:1</input_0>
					</pcode_22>
					<pcode_23>
						<output size="1" storage="unique">u_2f30:1</output>
						<name>INT_AND</name>
						<input_0 size="1" storage="unique">u_2f20:1</input_0>
						<input_1 size="1" storage="register">ZF</input_1>
					</pcode_23>
					<pcode_24>
						<output size="1" storage="unique">u_2f40:1</output>
						<name>INT_AND</name>
						<input_0 size="1" storage="unique">u_2e90:1</input_0>
						<input_1 size="1" storage="unique">u_2f10:1</input_1>
					</pcode_24>
					<pcode_25>
						<output size="1" storage="register">ZF</output>
						<name>INT_OR</name>
						<input_0 size="1" storage="unique">u_2f30:1</input_0>
						<input_1 size="1" storage="unique">u_2f40:1</input_1>
					</pcode_25>
				</pcodes>
			</instruction_13>
			<instruction_14>
				<address>0040050c</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RSP</output>
						<name>INT_SUB</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_0>
					<pcode_1>
						<name>STORE</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
						<input_2 size="8" storage="constant">0x400511</input_2>
					</pcode_1>
					<pcode_2>
						<name>CALL</name>
						<input_0 size="8" storage="memory">A_00400370:8</input_0>
					</pcode_2>
				</pcodes>
			</instruction_14>
			<instruction_15>
				<address>00400511</address>
				<pcodes>
					<pcode_0>
						<output size="1" storage="register">CF</output>
						<name>COPY</name>
						<input_0 size="1" storage="constant">0x0</input_0>
					</pcode_0>
					<pcode_1>
						<output size="1" storage="register">OF</output>
						<name>COPY</name>
						<input_0 size="1" storage="constant">0x0</input_0>
					</pcode_1>
					<pcode_2>
						<output size="8" storage="unique">u_bbe0:8</output>
						<name>INT_AND</name>
						<input_0 size="8" storage="register">RBP</input_0>
						<input_1 size="8" storage="register">RBP</input_1>
					</pcode_2>
					<pcode_3>
						<output size="1" storage="register">SF</output>
						<name>INT_SLESS</name>
						<input_0 size="8" storage="unique">u_bbe0:8</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_3>
					<pcode_4>
						<output size="1" storage="register">ZF</output>
						<name>INT_EQUAL</name>
						<input_0 size="8" storage="unique">u_bbe0:8</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_4>
				</pcodes>
			</instruction_15>
			<instruction_16>
				<address>00400514</address>
				<pcodes>
					<pcode_0>
						<name>CBRANCH</name>
						<input_0 size="8" storage="memory">A_00400536:8</input_0>
						<input_1 size="1" storage="register">ZF</input_1>
					</pcode_0>
				</pcodes>
			</instruction_16>
			<instruction_17>
				<address>00400516</address>
				<pcodes>
					<pcode_0>
						<output size="1" storage="register">CF</output>
						<name>COPY</name>
						<input_0 size="1" storage="constant">0x0</input_0>
					</pcode_0>
					<pcode_1>
						<output size="1" storage="register">OF</output>
						<name>COPY</name>
						<input_0 size="1" storage="constant">0x0</input_0>
					</pcode_1>
					<pcode_2>
						<output size="4" storage="register">EBX</output>
						<name>INT_XOR</name>
						<input_0 size="4" storage="register">EBX</input_0>
						<input_1 size="4" storage="register">EBX</input_1>
					</pcode_2>
					<pcode_3>
						<output size="8" storage="register">RBX</output>
						<name>INT_ZEXT</name>
						<input_0 size="4" storage="register">EBX</input_0>
					</pcode_3>
					<pcode_4>
						<output size="1" storage="register">SF</output>
						<name>INT_SLESS</name>
						<input_0 size="4" storage="register">EBX</input_0>
						<input_1 size="4" storage="constant">0x0</input_1>
					</pcode_4>
					<pcode_5>
						<output size="1" storage="register">ZF</output>
						<name>INT_EQUAL</name>
						<input_0 size="4" storage="register">EBX</input_0>
						<input_1 size="4" storage="constant">0x0</input_1>
					</pcode_5>
				</pcodes>
			</instruction_17>
			<instruction_18>
				<address>00400518</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_7e0:8</output>
						<name>INT_MULT</name>
						<input_0 size="8" storage="register">RAX</input_0>
						<input_1 size="8" storage="constant">0x1</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="unique">u_800:8</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RAX</input_0>
						<input_1 size="8" storage="unique">u_7e0:8</input_1>
					</pcode_1>
				</pcodes>
			</instruction_18>
			<instruction_19>
				<address>00400520</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RDX</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">R15</input_0>
					</pcode_0>
				</pcodes>
			</instruction_19>
			<instruction_20>
				<address>00400523</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RSI</output>
						<name>COPY</name>
						<input_0 size="8" storage="register">R14</input_0>
					</pcode_0>
				</pcodes>
			</instruction_20>
			<instruction_21>
				<address>00400526</address>
				<pcodes>
					<pcode_0>
						<output size="4" storage="register">EDI</output>
						<name>COPY</name>
						<input_0 size="4" storage="register">R13D</input_0>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RDI</output>
						<name>INT_ZEXT</name>
						<input_0 size="4" storage="register">EDI</input_0>
					</pcode_1>
				</pcodes>
			</instruction_21>
			<instruction_22>
				<address>00400529</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="unique">u_660:8</output>
						<name>INT_MULT</name>
						<input_0 size="8" storage="register">RBX</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="unique">u_680:8</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">R12</input_0>
						<input_1 size="8" storage="unique">u_660:8</input_1>
					</pcode_1>
					<pcode_2>
						<output size="8" storage="register">RSP</output>
						<name>INT_SUB</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_2>
					<pcode_3>
						<name>STORE</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
						<input_2 size="8" storage="constant">0x40052d</input_2>
					</pcode_3>
					<pcode_4>
						<output size="8" storage="unique">u_1ff0:8</output>
						<name>LOAD</name>
						<input_0 size="4" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="unique">u_680:8</input_1>
					</pcode_4>
					<pcode_5>
						<name>CALLIND</name>
						<input_0 size="8" storage="unique">u_1ff0:8</input_0>
					</pcode_5>
				</pcodes>
			</instruction_22>
			<instruction_23>
				<address>0040052d</address>
				<pcodes>
					<pcode_0>
						<output size="1" storage="register">CF</output>
						<name>INT_CARRY</name>
						<input_0 size="8" storage="register">RBX</input_0>
						<input_1 size="8" storage="constant">0x1</input_1>
					</pcode_0>
					<pcode_1>
						<output size="1" storage="register">OF</output>
						<name>INT_SCARRY</name>
						<input_0 size="8" storage="register">RBX</input_0>
						<input_1 size="8" storage="constant">0x1</input_1>
					</pcode_1>
					<pcode_2>
						<output size="8" storage="register">RBX</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RBX</input_0>
						<input_1 size="8" storage="constant">0x1</input_1>
					</pcode_2>
					<pcode_3>
						<output size="1" storage="register">SF</output>
						<name>INT_SLESS</name>
						<input_0 size="8" storage="register">RBX</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_3>
					<pcode_4>
						<output size="1" storage="register">ZF</output>
						<name>INT_EQUAL</name>
						<input_0 size="8" storage="register">RBX</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_4>
				</pcodes>
			</instruction_23>
			<instruction_24>
				<address>00400531</address>
				<pcodes>
					<pcode_0>
						<output size="1" storage="register">CF</output>
						<name>INT_LESS</name>
						<input_0 size="8" storage="register">RBP</input_0>
						<input_1 size="8" storage="register">RBX</input_1>
					</pcode_0>
					<pcode_1>
						<output size="1" storage="register">OF</output>
						<name>INT_SBORROW</name>
						<input_0 size="8" storage="register">RBP</input_0>
						<input_1 size="8" storage="register">RBX</input_1>
					</pcode_1>
					<pcode_2>
						<output size="8" storage="unique">u_59f0:8</output>
						<name>INT_SUB</name>
						<input_0 size="8" storage="register">RBP</input_0>
						<input_1 size="8" storage="register">RBX</input_1>
					</pcode_2>
					<pcode_3>
						<output size="1" storage="register">SF</output>
						<name>INT_SLESS</name>
						<input_0 size="8" storage="unique">u_59f0:8</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_3>
					<pcode_4>
						<output size="1" storage="register">ZF</output>
						<name>INT_EQUAL</name>
						<input_0 size="8" storage="unique">u_59f0:8</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_4>
				</pcodes>
			</instruction_24>
			<instruction_25>
				<address>00400534</address>
				<pcodes>
					<pcode_0>
						<output size="1" storage="unique">u_2110:1</output>
						<name>BOOL_NEGATE</name>
						<input_0 size="1" storage="register">ZF</input_0>
					</pcode_0>
					<pcode_1>
						<name>CBRANCH</name>
						<input_0 size="8" storage="memory">A_00400520:8</input_0>
						<input_1 size="1" storage="unique">u_2110:1</input_1>
					</pcode_1>
				</pcodes>
			</instruction_25>
			<instruction_26>
				<address>00400536</address>
				<pcodes>
					<pcode_0>
						<output size="1" storage="register">CF</output>
						<name>INT_CARRY</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_0>
					<pcode_1>
						<output size="1" storage="register">OF</output>
						<name>INT_SCARRY</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_2>
					<pcode_3>
						<output size="1" storage="register">SF</output>
						<name>INT_SLESS</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_3>
					<pcode_4>
						<output size="1" storage="register">ZF</output>
						<name>INT_EQUAL</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_4>
				</pcodes>
			</instruction_26>
			<instruction_27>
				<address>0040053a</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RBX</output>
						<name>LOAD</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
				</pcodes>
			</instruction_27>
			<instruction_28>
				<address>0040053b</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RBP</output>
						<name>LOAD</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
				</pcodes>
			</instruction_28>
			<instruction_29>
				<address>0040053c</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">R12</output>
						<name>LOAD</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
				</pcodes>
			</instruction_29>
			<instruction_30>
				<address>0040053e</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">R13</output>
						<name>LOAD</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
				</pcodes>
			</instruction_30>
			<instruction_31>
				<address>00400540</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">R14</output>
						<name>LOAD</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
				</pcodes>
			</instruction_31>
			<instruction_32>
				<address>00400542</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">R15</output>
						<name>LOAD</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
				</pcodes>
			</instruction_32>
			<instruction_33>
				<address>00400544</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RIP</output>
						<name>LOAD</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<name>RETURN</name>
						<input_0 size="8" storage="register">RIP</input_0>
					</pcode_2>
				</pcodes>
			</instruction_33>
		</instructions>
	</function>
	<function address="00400550" name="__libc_csu_fini">
		<basic_blocks>
			<block_0 end="00400550" start="00400550"/>
		</basic_blocks>
		<output type="undefined"/>
		<instructions>
			<instruction_0>
				<address>00400550</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RIP</output>
						<name>LOAD</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<name>RETURN</name>
						<input_0 size="8" storage="register">RIP</input_0>
					</pcode_2>
				</pcodes>
			</instruction_0>
		</instructions>
	</function>
	<function address="00400554" name="_fini">
		<basic_blocks>
			<block_0 end="0040055c" start="00400554"/>
		</basic_blocks>
		<output type="undefined"/>
		<instructions>
			<instruction_0>
				<address>00400554</address>
				<pcodes>
					<pcode_0>
						<output size="1" storage="register">CF</output>
						<name>INT_LESS</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_0>
					<pcode_1>
						<output size="1" storage="register">OF</output>
						<name>INT_SBORROW</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<output size="8" storage="register">RSP</output>
						<name>INT_SUB</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_2>
					<pcode_3>
						<output size="1" storage="register">SF</output>
						<name>INT_SLESS</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_3>
					<pcode_4>
						<output size="1" storage="register">ZF</output>
						<name>INT_EQUAL</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_4>
				</pcodes>
			</instruction_0>
			<instruction_1>
				<address>00400558</address>
				<pcodes>
					<pcode_0>
						<output size="1" storage="register">CF</output>
						<name>INT_CARRY</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_0>
					<pcode_1>
						<output size="1" storage="register">OF</output>
						<name>INT_SCARRY</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_2>
					<pcode_3>
						<output size="1" storage="register">SF</output>
						<name>INT_SLESS</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_3>
					<pcode_4>
						<output size="1" storage="register">ZF</output>
						<name>INT_EQUAL</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x0</input_1>
					</pcode_4>
				</pcodes>
			</instruction_1>
			<instruction_2>
				<address>0040055c</address>
				<pcodes>
					<pcode_0>
						<output size="8" storage="register">RIP</output>
						<name>LOAD</name>
						<input_0 size="8" storage="constant">0x1b1</input_0>
						<input_1 size="8" storage="register">RSP</input_1>
					</pcode_0>
					<pcode_1>
						<output size="8" storage="register">RSP</output>
						<name>INT_ADD</name>
						<input_0 size="8" storage="register">RSP</input_0>
						<input_1 size="8" storage="constant">0x8</input_1>
					</pcode_1>
					<pcode_2>
						<name>RETURN</name>
						<input_0 size="8" storage="register">RIP</input_0>
					</pcode_2>
				</pcodes>
			</instruction_2>
		</instructions>
	</function>
	<function name="__libc_start_main">
		<basic_blocks>
			<block_0 end="00602000" start="00602000"/>
		</basic_blocks>
		<output type="undefined"/>
		<instructions/>
	</function>
	<function name="__gmon_start__">
		<basic_blocks>
			<block_0 end="00602008" start="00602008"/>
		</basic_blocks>
		<output type="undefined"/>
		<instructions/>
	</function>
</program>
